{"version":3,"file":"radio.cjs","sources":["../../src/components/radio/Radio.vue","../../src/components/radio/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an option from a set\n * @displayName Radio\n * @style _radio.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ORadio\",\n    configField: \"radio\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"radio.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"radio.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when radio is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\n\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-radio\"],\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-radio--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-radio--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-radio--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-radio__input\"],\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"radio\"\n        role=\"radio\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"radio\"\n            data-oruga-input=\"radio\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Radio from \"./Radio.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export radio plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Radio);\n    },\n} as Plugin;\n\n/** export radio components */\nexport { Radio as ORadio };\n"],"names":["ref","useInputHandler","useVModelBinding","computed","defineClasses","registerComponent","Radio"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,UAAM,QAAQ;AAoFd,UAAM,QAAQ;AA6Bd,UAAM,WAAWA,IAAAA;AAGjB,UAAM,EAAE,QAAQ,SAAS,WAAW,SAAa,IAAAC,gBAAA;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAGE,UAAA,SAASC,aAAAA,iBAA4C,OAAO,KAAK;AAEvE,UAAM,YAAYC,IAAAA,SAAS,MAAM,OAAO,UAAU,MAAM,WAAW;AAEnE,aAAS,QAAQ,OAAoB;AAC3B,YAAA,SAAS,OAAO,OAAO,KAAK;AAAA,IACtC;AAIA,UAAM,cAAcC,cAAA;AAAA,MAChB,CAAC,aAAa,SAAS;AAAA,MACvB,CAAC,gBAAgB,oBAAoB,MAAM,SAAS;AAAA,MACpD;AAAA,QACI;AAAA,QACA;AAAA,QACAD,aAAS,MAAM,MAAM,IAAI;AAAA,QACzBA,IAAAA,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACAA,aAAS,MAAM,MAAM,QAAQ;AAAA,MACjC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACAA,aAAS,MAAM,MAAM,OAAO;AAAA,QAC5BA,IAAAA,SAAS,MAAM,CAAC,CAAC,MAAM,OAAO;AAAA,MAClC;AAAA,IAAA;AAGJ,UAAM,eAAeC,cAAA;AAAA,MACjB,CAAC,cAAc,gBAAgB;AAAA,MAC/B,CAAC,qBAAqB,2BAA2B,MAAM,SAAS;AAAA,IAAA;AAGpE,UAAM,eAAeA,cAAA,cAAc,CAAC,cAAc,gBAAgB,CAAC;AAKtD,aAAA,EAAE,OAAO,SAAA,CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtLhC,MAAe,QAAA;AAAA,EACX,QAAQ,KAAU;AACdC,6BAAkB,KAAKC,SAAK;AAAA,EAChC;AACJ;;;"}