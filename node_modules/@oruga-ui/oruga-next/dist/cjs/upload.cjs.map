{"version":3,"file":"upload.cjs","sources":["../../src/components/upload/Upload.vue","../../src/components/upload/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { File } from \"@/utils/ssr\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Upload one or more files\n * @displayName Upload\n * @style _upload.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OUpload\",\n    configField: \"upload\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Object, Array] as PropType<\n            object | typeof File | object[] | (typeof File)[]\n        >,\n        default: undefined,\n    },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"upload.variant\"),\n    },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native accept */\n    accept: { type: String, default: undefined },\n    /** Accepts drag & drop and change its style */\n    dragDrop: { type: Boolean, default: false },\n    /** Upload will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Replace last chosen files every time (like native file input element) */\n    native: { type: Boolean, default: true },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when draggable */\n    draggableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when hovered */\n    hoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref<HTMLInputElement>();\n\nconst vmodel = defineModel<object | object[] | File | File[]>();\n\n// use form input functionality\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst dragDropFocus = ref(false);\n\n/**\n * When v-model is changed:\n * 1. Reset interna input file value\n * 2. If it's invalid, validate again.\n */\nwatch(vmodel, (value) => {\n    if (!value || (Array.isArray(value) && value.length === 0))\n        inputRef.value.value = null;\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\n});\n\n/**\n * Listen change event on input type 'file',\n * emit 'input' event and validate\n */\nfunction onFileChange(event: Event | DragEvent): void {\n    if (props.disabled) return;\n    if (props.dragDrop) updateDragDropFocus(false);\n    const value =\n        (event.target as HTMLInputElement).files ||\n        (event as DragEvent).dataTransfer.files;\n    // no file selected\n    if (value.length === 0) {\n        if (!vmodel.value) return;\n        if (props.native) vmodel.value = null;\n    }\n\n    // multiple upload\n    if (props.multiple) {\n        // always new values if native or undefined local\n        const values =\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\n                ? []\n                : [...vmodel.value];\n\n        for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            // add file when type is valid\n            if (checkType(file)) values.push(file);\n        }\n        vmodel.value = values;\n    }\n    // single uplaod\n    else {\n        // only one element in case drag drop mode and isn't multiple\n        if (props.dragDrop && value.length !== 1) return;\n        else {\n            const file = value[0];\n            // add file when type is valid\n            if (checkType(file)) vmodel.value = file;\n            // else clear input\n            else if (vmodel.value) {\n                vmodel.value = null;\n                clearInput();\n            } else {\n                // Force input back to empty state and recheck validity\n                clearInput();\n                checkHtml5Validity();\n                return;\n            }\n        }\n    }\n\n    if (!props.dragDrop) checkHtml5Validity();\n}\n\n/** Reset file input value */\nfunction clearInput(): void {\n    inputRef.value.value = null;\n}\n\n/** Listen drag-drop to update internal variable */\nfunction updateDragDropFocus(focus: boolean): void {\n    if (!props.disabled) dragDropFocus.value = focus;\n}\n\n/** Check mime type of file s*/\nfunction checkType(file: File): boolean {\n    if (!props.accept) return true;\n    const types = props.accept.split(\",\");\n    if (types.length === 0) return true;\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i].trim();\n        if (type) {\n            if (type.substring(0, 1) === \".\") {\n                const extension = file.name.toLowerCase().slice(-type.length);\n                if (extension === type.toLowerCase()) return true;\n            } else {\n                // check mime type\n                if (file.type.match(type)) return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction onClick(event: Event): void {\n    if (props.disabled) return;\n\n    // click input if not drag and drop is used\n    if (!props.dragDrop) {\n        event.preventDefault();\n        inputRef.value.click();\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-upl\"],\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\n);\n\nconst draggableClasses = defineClasses(\n    [\"draggableClass\", \"o-upl__draggable\"],\n    [\n        \"hoveredClass\",\n        \"o-upl__draggable--hovered\",\n        null,\n        computed(() => !props.variant && dragDropFocus.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-upl__draggable--hovered-\",\n        computed(() => props.variant),\n        computed(() => props.variant && dragDropFocus.value),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label :class=\"rootClasses\" data-oruga=\"upload\">\n        <template v-if=\"!dragDrop\">\n            <!--\n                @slot Default content\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </template>\n\n        <div\n            v-else\n            :class=\"draggableClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @mouseenter=\"updateDragDropFocus(true)\"\n            @mouseleave=\"updateDragDropFocus(false)\"\n            @dragover.prevent=\"updateDragDropFocus(true)\"\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\n            @drop.prevent=\"onFileChange\">\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </div>\n\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            type=\"file\"\n            data-oruga-input=\"file\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :disabled=\"disabled\"\n            @change=\"onFileChange\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\" />\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Upload from \"./Upload.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export upload plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Upload);\n    },\n} as Plugin;\n\n/** export upload components */\nexport { Upload as OUpload };\n"],"names":["ref","_useModel","useInputHandler","watch","defineClasses","computed","registerComponent","Upload"],"mappings":"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"}