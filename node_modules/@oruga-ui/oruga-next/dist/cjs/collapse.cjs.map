{"version":3,"file":"collapse.cjs","sources":["../../src/components/collapse/Collapse.vue","../../src/components/collapse/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An easy way to toggle what you want\n * @displayName Collapse\n * @style _collapse.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCollapse\",\n    configField: \"collapse\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\n    open: { type: Boolean, default: true },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"collapse.animation\", \"fade\"),\n    },\n    /** Id property of the content container */\n    contentId: { type: String, default: () => uuid() },\n    /**\n     * Trigger position\n     * @values top, bottom\n     */\n    position: {\n        type: String as PropType<\"top\" | \"bottom\">,\n        default: () => getOption(\"collapse.position\", \"top\"),\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * open prop two-way binding\n     * @param value {boolean} updated open prop\n     */\n    (e: \"update:open\", value: boolean): void;\n    /** on collapse opened */\n    (e: \"open\"): void;\n    /** on collapse closed */\n    (e: \"close\"): void;\n}>();\n\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\n\n/** Toggle and emit events */\nfunction toggle(): void {\n    isOpen.value = !isOpen.value;\n    isOpen.value ? emits(\"open\") : emits(\"close\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\n\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\n        <div\n            v-if=\"position === 'top'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n\n        <Transition :name=\"animation\">\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\n                <!--\n                    @slot Default content\n                -->\n                <slot />\n            </div>\n        </Transition>\n\n        <div\n            v-if=\"position === 'bottom'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Collapse from \"./Collapse.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export collapse plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Collapse);\n    },\n} as Plugin;\n\n/** export collapse components */\nexport { Collapse as OCollapse };\n"],"names":["usePropBinding","defineClasses","registerComponent","Collapse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,UAAM,QAAQ;AAuCd,UAAM,QAAQ;AAYR,UAAA,SAASA,4BAAwB,QAAQ,OAAO,OAAO,EAAE,SAAS,MAAM;AAG9E,aAAS,SAAe;AACb,aAAA,QAAQ,CAAC,OAAO;AACvB,aAAO,QAAQ,MAAM,MAAM,IAAI,MAAM,OAAO;AAAA,IAChD;AAIA,UAAM,cAAcC,cAAA,cAAc,CAAC,aAAa,QAAQ,CAAC;AAEzD,UAAM,iBAAiBA,cAAA,cAAc,CAAC,gBAAgB,iBAAiB,CAAC;AAExE,UAAM,iBAAiBA,cAAA,cAAc,CAAC,gBAAgB,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ExE,MAAe,QAAA;AAAA,EACX,QAAQ,KAAU;AACdC,6BAAkB,KAAKC,SAAQ;AAAA,EACnC;AACJ;;;"}