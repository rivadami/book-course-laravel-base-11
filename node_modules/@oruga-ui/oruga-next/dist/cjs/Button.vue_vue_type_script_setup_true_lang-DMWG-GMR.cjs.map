{"version":3,"file":"Button.vue_vue_type_script_setup_true_lang-DMWG-GMR.cjs","sources":["../../src/components/button/Button.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * The classic button, in different colors, sizes, and states\n * @displayName Button\n * @style _button.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OButton\",\n    configField: \"button\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Button tag name\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\n     */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\n    },\n    /**\n     * Color variant of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"button.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"button.size\"),\n    },\n    /** Button label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n\n    iconPack: {\n        type: String,\n        default: () => getOption(\"button.iconPack\", undefined),\n    },\n    /** Icon name to show on the left */\n    iconLeft: { type: String, default: undefined },\n    /** Icon name to show on the right */\n    iconRight: { type: String, default: undefined },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"button.rounded\", false),\n    },\n    /** Button will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Button will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Enable outlined style */\n    outlined: { type: Boolean, default: false },\n    /** Enable loading style */\n    loading: { type: Boolean, default: false },\n    /** Enable inverted style */\n    inverted: { type: Boolean, default: false },\n    /** Button type, like native */\n    nativeType: {\n        type: String,\n        default: \"button\",\n        validator: (value: string) =>\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\n    },\n    /** Accessibility Role attribute to be passed to the button. */\n    role: {\n        type: String,\n        default: () => getOption(\"button.role\", \"button\"),\n    },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    iconBoth: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button elements wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when outlined */\n    outlinedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button with loading */\n    loadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when inverted */\n    invertedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the left */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the right */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst computedTag = computed(() =>\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\n        ? \"button\"\n        : props.tag,\n);\n\nconst computedNativeType = computed(() =>\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\n);\n\nconst computedDisabled = computed(() => (props.disabled ? true : null));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-btn\"],\n    [\n        \"sizeClass\",\n        \"o-btn--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-btn--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined\",\n        null,\n        computed(() => props.outlined && !props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted\",\n        null,\n        computed(() => props.inverted && !props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined-\",\n        computed(() => props.variant),\n        computed(() => props.outlined && !!props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted-\",\n        computed(() => props.variant),\n        computed(() => props.inverted && !!props.variant),\n    ],\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\n</script>\n\n<template>\n    <component\n        :is=\"computedTag\"\n        :disabled=\"computedDisabled\"\n        :type=\"computedNativeType\"\n        :class=\"rootClasses\"\n        :role=\"role\"\n        data-oruga=\"button\">\n        <span :class=\"wrapperClasses\">\n            <o-icon\n                v-if=\"iconLeft\"\n                :pack=\"iconPack\"\n                :icon=\"iconLeft\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label, default is label prop \n                -->\n                <slot>{{ label }}</slot>\n            </span>\n            <o-icon\n                v-if=\"iconRight\"\n                :pack=\"iconPack\"\n                :icon=\"iconRight\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\n        </span>\n    </component>\n</template>\n"],"names":["computed","defineClasses"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,UAAM,QAAQ;AAmJd,UAAM,cAAcA,IAAA;AAAA,MAAS,MACzB,OAAO,MAAM,aAAa,eAAe,MAAM,aAAa,QACtD,WACA,MAAM;AAAA,IAAA;AAGhB,UAAM,qBAAqBA,IAAA;AAAA,MAAS,MAChC,MAAM,QAAQ,YAAY,MAAM,QAAQ,UAAU,MAAM,aAAa;AAAA,IAAA;AAGzE,UAAM,mBAAmBA,IAAAA,SAAS,MAAO,MAAM,WAAW,OAAO,IAAK;AAItE,UAAM,cAAcC,cAAA;AAAA,MAChB,CAAC,aAAa,OAAO;AAAA,MACrB;AAAA,QACI;AAAA,QACA;AAAA,QACAD,aAAS,MAAM,MAAM,IAAI;AAAA,QACzBA,IAAAA,SAAS,MAAM,CAAC,CAAC,MAAM,IAAI;AAAA,MAC/B;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACAA,aAAS,MAAM,MAAM,OAAO;AAAA,QAC5BA,IAAAA,SAAS,MAAM,CAAC,CAAC,MAAM,OAAO;AAAA,MAClC;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACAA,IAAAA,SAAS,MAAM,MAAM,YAAY,CAAC,MAAM,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACAA,IAAAA,SAAS,MAAM,MAAM,YAAY,CAAC,MAAM,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACAA,aAAS,MAAM,MAAM,OAAO;AAAA,QAC5BA,aAAS,MAAM,MAAM,YAAY,CAAC,CAAC,MAAM,OAAO;AAAA,MACpD;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACAA,aAAS,MAAM,MAAM,OAAO;AAAA,QAC5BA,aAAS,MAAM,MAAM,YAAY,CAAC,CAAC,MAAM,OAAO;AAAA,MACpD;AAAA,MACA,CAAC,iBAAiB,mBAAmB,MAAMA,aAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,MACzE,CAAC,gBAAgB,kBAAkB,MAAMA,aAAS,MAAM,MAAM,OAAO,CAAC;AAAA,MACtE,CAAC,gBAAgB,kBAAkB,MAAMA,aAAS,MAAM,MAAM,OAAO,CAAC;AAAA,MACtE,CAAC,iBAAiB,mBAAmB,MAAMA,aAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,IAAA;AAG7E,UAAM,eAAeC,cAAA,cAAc,CAAC,cAAc,cAAc,CAAC;AAEjE,UAAM,cAAcA,cAAA,cAAc,CAAC,aAAa,aAAa,CAAC;AAE9D,UAAM,kBAAkBA,cAAA,cAAc,CAAC,iBAAiB,kBAAkB,CAAC;AAE3E,UAAM,mBAAmBA,cAAA,cAAc,CAAC,kBAAkB,mBAAmB,CAAC;AAE9E,UAAM,iBAAiBA,cAAA,cAAc,CAAC,gBAAgB,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}