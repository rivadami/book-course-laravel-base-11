{"version":3,"file":"slider.cjs","sources":["../../src/components/slider/SliderThumb.vue","../../src/components/slider/SliderTick.vue","../../src/components/slider/Slider.vue","../../src/components/slider/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport OTooltip from \"../tooltip/Tooltip.vue\";\n\nimport { isClient } from \"@/utils/ssr\";\n\nimport type { SliderProps } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\n/**\n * @displayName Slider Thumb\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderThumb\",\n    configField: \"slider\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** parent slider component props  */\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\n    modelValue: { type: Number, required: true },\n    sliderSize: { type: Function as PropType<() => number>, required: true },\n    thumbWrapperClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    thumbClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /** on value change event */\n    (e: \"change\"): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\nconst slider = computed<SliderProps>(() => props.sliderProps);\n\nconst isFocused = ref(false);\nconst dragging = ref(false);\nconst startX = ref(0);\nconst startPosition = ref(0);\nconst newPosition = ref(null);\nconst oldValue = ref(props.modelValue);\n\nconst tooltip = computed(() => slider.value.tooltip);\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\nconst disabled = computed(() => slider.value.disabled);\nconst max = computed(() => slider.value.max);\nconst min = computed(() => slider.value.min);\nconst step = computed(() => slider.value.step);\nconst indicator = computed(() => slider.value.indicator);\n\nconst ariaLabel = computed(() =>\n    Array.isArray(slider.value.ariaLabel)\n        ? slider.value.ariaLabel[0]\n        : slider.value.ariaLabel,\n);\n\nconst precision = computed(() => {\n    const precisions = [min.value, max.value, step.value].map((item) => {\n        const decimal = (\"\" + item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    });\n    return Math.max(...precisions);\n});\n\nconst computedTooltipVariant = computed(() =>\n    slider.value.tooltipVariant\n        ? slider.value.tooltipVariant\n        : slider.value.variant,\n);\n\nconst currentPosition = computed(\n    () =>\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\n);\n\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\n\nconst formattedValue = computed(() => {\n    if (typeof slider.value.customFormatter !== \"undefined\")\n        return slider.value.customFormatter(props.modelValue);\n\n    if (slider.value.format === \"percent\")\n        return new Intl.NumberFormat(slider.value.locale, {\n            style: \"percent\",\n        }).format((props.modelValue - min.value) / (max.value - min.value));\n\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\n});\n\nfunction onFocus(): void {\n    isFocused.value = true;\n}\n\nfunction onBlur(): void {\n    isFocused.value = false;\n}\n\nfunction onButtonDown(event): void {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n\n    if (isClient) {\n        document.addEventListener(\"mousemove\", onDragging);\n        document.addEventListener(\"touchmove\", onDragging);\n        document.addEventListener(\"mouseup\", onDragEnd);\n        document.addEventListener(\"touchend\", onDragEnd);\n        document.addEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction onLeftKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) -\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onRightKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) +\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onHomeKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value = 0;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onEndKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value = 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onDragStart(event): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\n\n    startX.value = event.clientX;\n    startPosition.value = parseFloat(currentPosition.value);\n    newPosition.value = startPosition.value;\n}\n\nfunction onDragging(event): void {\n    if (dragging.value) {\n        if (event.type === \"touchmove\")\n            event.clientX = event.touches[0].clientX;\n\n        const diff =\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\n        newPosition.value = startPosition.value + diff;\n        setPosition(newPosition.value);\n    }\n}\n\nfunction onDragEnd(): void {\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.modelValue !== oldValue.value) emits(\"change\");\n\n    setPosition(newPosition.value);\n    if (isClient) {\n        document.removeEventListener(\"mousemove\", onDragging);\n        document.removeEventListener(\"touchmove\", onDragging);\n        document.removeEventListener(\"mouseup\", onDragEnd);\n        document.removeEventListener(\"touchend\", onDragEnd);\n        document.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction setPosition(percent: number): void {\n    if (percent === null || isNaN(percent)) return;\n    if (percent < 0) percent = 0;\n    else if (percent > 100) percent = 100;\n\n    const stepLength = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(percent / stepLength);\n    let value =\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emits(\"update:modelValue\", value);\n\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\n}\n\ndefineExpose({ setPosition });\n</script>\n\n<template>\n    <div\n        :class=\"thumbWrapperClasses\"\n        :style=\"wrapperStyle\"\n        data-oruga=\"slider-thumb\">\n        <o-tooltip\n            :label=\"formattedValue\"\n            :variant=\"computedTooltipVariant\"\n            :disabled=\"disabled || !tooltip\"\n            :always=\"tooltipAlways || dragging || isFocused\">\n            <div\n                v-bind=\"$attrs\"\n                :class=\"thumbClasses\"\n                :tabindex=\"disabled ? null : 0\"\n                role=\"slider\"\n                :aria-label=\"ariaLabel\"\n                :aria-valuenow=\"modelValue\"\n                :aria-valuemin=\"min\"\n                :aria-valuemax=\"max\"\n                :aria-disabled=\"disabled\"\n                aria-orientation=\"horizontal\"\n                @mousedown=\"onButtonDown\"\n                @touchstart=\"onButtonDown\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @keydown.left.prevent=\"onLeftKeyDown\"\n                @keydown.right.prevent=\"onRightKeyDown\"\n                @keydown.down.prevent=\"onLeftKeyDown\"\n                @keydown.up.prevent=\"onRightKeyDown\"\n                @keydown.home.prevent=\"onHomeKeyDown\"\n                @keydown.end.prevent=\"onEndKeyDown\">\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\n            </div>\n        </o-tooltip>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * @displayName Slider Tick\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderTick\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Value of single tick */\n    value: { type: Number, required: true },\n    /** Tick label */\n    label: { type: String, default: undefined },\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent } = useProviderChild<SliderComponent>();\n\nconst position = computed(() => {\n    const pos =\n        ((props.value - parent.value.min) /\n            (parent.value.max - parent.value.min)) *\n        100;\n    return pos >= 0 && pos <= 100 ? pos : 0;\n});\n\nconst hidden = computed(\n    () => props.value === parent.value.min || props.value === parent.value.max,\n);\n\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"tickClass\", \"o-slide__tick\"],\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\n);\n\nconst tickLabelClasses = defineClasses([\n    \"tickLabelClass\",\n    \"o-slide__tick-label\",\n]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\n            <!-- \n                @slot Override tick content, default is label prop\n             -->\n            <slot> {{ label }} </slot>\n        </span>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSliderThumb from \"./SliderThumb.vue\";\nimport OSliderTick from \"./SliderTick.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderParent } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A slider to select a value or range from a given range\n * @displayName Slider\n * @requires ./SliderTick.vue\n * @style _slider.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSlider\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Number, Array] as PropType<number | number[]>,\n        default: 0,\n    },\n    /** Minimum value */\n    min: { type: Number, default: 0 },\n    /** Maximum  value */\n    max: { type: Number, default: 100 },\n    /** Step interval of ticks */\n    step: { type: Number, default: 1 },\n    /**\n     * Color of the slider\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"slider.variant\"),\n    },\n    /**\n     * Vertical size of slider\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"slider.size\"),\n    },\n    /** Show tick marks */\n    ticks: { type: Boolean, default: false },\n    /** Show tooltip when thumb is being dragged */\n    tooltip: {\n        type: Boolean,\n        default: () => getOption(\"slider.tooltip\", true),\n    },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    tooltipVariant: {\n        type: String,\n        default: () => getOption(\"slider.tooltipVariant\"),\n    },\n    /** Tooltip displays always */\n    tooltipAlways: { type: Boolean, default: false },\n    /** Rounded thumb */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"slider.rounded\", false),\n    },\n    /** Slider will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Update v-model only when dragging is finished */\n    lazy: { type: Boolean, default: false },\n    /** Function to format the tooltip label for display */\n    customFormatter: { type: Function, default: undefined },\n    /** Increases slider size on focus */\n    biggerSliderFocus: { type: Boolean, default: false },\n    /** Show indicators */\n    indicator: { type: Boolean, default: false },\n    /**\n     * Define v-model format\n     * @values row, percent\n     */\n    format: {\n        type: String,\n        default: () => getOption(\"slider.format\", \"raw\"),\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\n    },\n    /** Date format locale */\n    locale: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"locale\"),\n    },\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\n    ariaLabel: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"slider.ariaLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the vertical slider size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider track */\n    trackClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the filled part of the slider */\n    fillClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the slider is rounded */\n    thumbRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the thumb gets dragged */\n    thumbDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb wrapper */\n    thumbWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb */\n    thumbClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider tick */\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display on the wrapper element when the slider is dragged */\n    thumbWrapperDraggingClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /**\n     * on value change event\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"change\", value: number | number[]): void;\n    /**\n     * on dragging event\n     * @param value {number | number[]} updated modelValue prop\n     * */\n    (e: \"dragging\", value: number | number[]): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\nfunction emitValue(event: any): void {\n    const val = isRange.value\n        ? [minValue.value, maxValue.value]\n        : valueStart.value || 0;\n    emits(event, val);\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<SliderComponent>(() => ({\n    max: props.max,\n    min: props.min,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(undefined, { data: provideData });\n\nconst sliderRef = ref();\nconst thumbStartRef = ref();\nconst thumbEndRef = ref();\n\nconst valueStart = ref<number>(null);\nconst valueEnd = ref<number>(null);\nconst dragging = ref(false);\nconst isRange = ref(false);\n\nconst isThumbReversed = ref();\nconst isTrackClickDisabled = ref();\n\nsetValues(props.modelValue);\n\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\n\n/** When min, max or v-model is changed set the new active step. */\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\n    setValues(props.modelValue),\n);\n\nconst tickValues = computed(() => {\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\n    const result = [];\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\n        result.push(i);\n    }\n    return result;\n});\n\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\n\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\n\nconst barSize = computed(() =>\n    isRange.value\n        ? `${\n              (100 * (maxValue.value - minValue.value)) /\n              (props.max - props.min)\n          }%`\n        : `${\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\n          }%`,\n);\n\nconst barStart = computed(() =>\n    isRange.value\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n        : \"0%\",\n);\n\nconst barStyle = computed(() => ({\n    width: barSize.value,\n    left: barStart.value,\n}));\n\nfunction setValues(newValue: number | number[]): void {\n    if (props.min > props.max) return;\n\n    if (Array.isArray(newValue)) {\n        isRange.value = true;\n        const smallValue =\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\n                ? props.min\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\n        const largeValue =\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\n                ? props.max\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\n    } else {\n        isRange.value = false;\n        valueStart.value = isNaN(newValue)\n            ? props.min\n            : Math.min(props.max, Math.max(props.min, newValue));\n        valueEnd.value = null;\n    }\n}\n\nfunction onInternalValueUpdate(): void {\n    if (isRange.value)\n        isThumbReversed.value = valueStart.value > valueEnd.value;\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\n    if (dragging.value) emitValue(\"dragging\");\n}\n\nfunction sliderSize(): number {\n    return sliderRef.value.getBoundingClientRect().width;\n}\n\nfunction onSliderClick(event: MouseEvent): void {\n    if (props.disabled || isTrackClickDisabled.value) return;\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\n    const diffFirst = Math.abs(targetValue - valueStart.value);\n    if (!isRange.value) {\n        if (diffFirst < props.step / 2) return;\n        thumbStartRef.value.setPosition(percent);\n    } else {\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\n        if (diffFirst <= diffSecond) {\n            if (diffFirst < props.step / 2) return;\n            thumbStartRef.value.setPosition(percent);\n        } else {\n            if (diffSecond < props.step / 2) return;\n            thumbEndRef.value.setPosition(percent);\n        }\n    }\n    emitValue(\"change\");\n}\n\nfunction onDragStart(): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n}\n\nfunction onDragEnd(): void {\n    isTrackClickDisabled.value = true;\n    // avoid triggering onSliderClick after dragend\n    setTimeout(() => (isTrackClickDisabled.value = false));\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.lazy) emitValue(\"update:modelValue\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-slide\"],\n    [\n        \"sizeClass\",\n        \"o-slide--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-slide--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\n\nconst fillClasses = defineClasses(\n    [\"fillClass\", \"o-slide__fill\"],\n    [\n        \"variantClass\",\n        \"o-slide__fill--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst thumbClasses = defineClasses(\n    [\"thumbClass\", \"o-slide__thumb\"],\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\n    [\n        \"thumbRoundedClass\",\n        \"o-slide__thumb--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst thumbWrapperClasses = defineClasses(\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\n    [\n        \"thumbWrapperDraggingClass\",\n        \"o-slide__thumb-wrapper--dragging\",\n        null,\n        dragging,\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\n            <template v-if=\"ticks\">\n                <o-slider-tick\n                    v-for=\"(val, key) in tickValues\"\n                    :key=\"key\"\n                    :value=\"val\"\n                    :tick-class=\"tickClass\"\n                    :tick-hidden-class=\"tickHiddenClass\"\n                    :tick-label-class=\"tickLabelClass\" />\n            </template>\n\n            <!--\n                @slot Define additional slider ticks here\n             -->\n            <slot />\n\n            <o-slider-thumb\n                ref=\"thumbStartRef\"\n                v-model=\"valueStart\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n\n            <o-slider-thumb\n                v-if=\"isRange\"\n                ref=\"thumbEndRef\"\n                v-model=\"valueEnd\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Slider from \"./Slider.vue\";\nimport SliderTick from \"./SliderTick.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export slider specific types */\nexport type * from \"./types\";\n\n/** export slider plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Slider);\n        registerComponent(app, SliderTick);\n    },\n} as Plugin;\n\n/** export slider components */\nexport { Slider as OSlider, SliderTick as OSliderTick };\n"],"names":["computed","ref","isClient","useProviderChild","defineClasses","useProviderParent","watch","registerComponent","Slider","SliderTick"],"mappings":"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"}