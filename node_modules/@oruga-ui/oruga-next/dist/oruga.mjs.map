{"version":3,"file":"oruga.mjs","sources":["../src/utils/helpers.ts","../src/utils/programmatic.ts","../src/utils/plugins.ts","../src/utils/config.ts","../src/utils/icons.ts","../src/composables/unrefElement.ts","../src/composables/defineClasses.ts","../src/composables/usePropValue.ts","../src/composables/useEventListener.ts","../src/utils/ssr.ts","../src/composables/useMatchMedia.ts","../src/components/field/Field.vue","../src/components/field/fieldInjection.ts","../src/composables/useInputHandler.ts","../src/composables/useDebounce.ts","../src/composables/useParentProvider.ts","../src/composables/useProgrammatic.ts","../src/composables/useClickOutside.ts","../src/composables/useScrollingParent.ts","../src/components/icon/Icon.vue","../src/components/input/Input.vue","../src/components/utils/PositionWrapper.vue","../src/directives/trapFocus.ts","../src/components/dropdown/Dropdown.vue","../src/components/dropdown/DropdownItem.vue","../src/components/autocomplete/Autocomplete.vue","../src/components/autocomplete/index.ts","../src/components/button/Button.vue","../src/components/button/index.ts","../src/components/carousel/Carousel.vue","../src/components/carousel/CarouselItem.vue","../src/components/carousel/index.ts","../src/components/checkbox/Checkbox.vue","../src/components/checkbox/index.ts","../src/components/collapse/Collapse.vue","../src/components/collapse/index.ts","../src/components/select/Select.vue","../src/components/utils/PickerWrapper.vue","../src/components/datepicker/utils.ts","../src/components/datepicker/useDatepickerMixins.ts","../src/components/datepicker/DatepickerTableRow.vue","../src/components/datepicker/DatepickerTable.vue","../src/components/datepicker/DatepickerMonth.vue","../src/components/datepicker/Datepicker.vue","../src/components/datepicker/index.ts","../src/components/timepicker/useTimepickerMixins.ts","../src/components/timepicker/Timepicker.vue","../src/components/datetimepicker/Datetimepicker.vue","../src/components/datetimepicker/index.ts","../src/components/dropdown/index.ts","../src/components/field/index.ts","../src/components/icon/index.ts","../src/components/input/index.ts","../src/components/loading/Loading.vue","../src/utils/InstanceRegistry.ts","../src/components/loading/LoadingProgrammatic.ts","../src/components/loading/index.ts","../src/components/menu/Menu.vue","../src/components/menu/MenuItem.vue","../src/components/menu/index.ts","../src/components/modal/Modal.vue","../src/components/modal/ModalProgrammatic.ts","../src/components/modal/index.ts","../src/components/notification/Notification.vue","../src/components/notification/NotificationNotice.vue","../src/components/notification/NotificationProgrammatic.ts","../src/components/notification/index.ts","../src/components/pagination/PaginationButton.vue","../src/components/pagination/Pagination.vue","../src/components/pagination/index.ts","../src/components/radio/Radio.vue","../src/components/radio/index.ts","../src/components/select/index.ts","../src/components/skeleton/Skeleton.vue","../src/components/skeleton/index.ts","../src/components/sidebar/Sidebar.vue","../src/components/sidebar/SidebarProgrammatic.ts","../src/components/sidebar/index.ts","../src/components/tooltip/Tooltip.vue","../src/components/slider/SliderThumb.vue","../src/components/slider/SliderTick.vue","../src/components/slider/Slider.vue","../src/components/slider/index.ts","../src/components/steps/Steps.vue","../src/components/steps/StepItem.vue","../src/components/steps/index.ts","../src/components/switch/Switch.vue","../src/components/switch/index.ts","../src/components/utils/SlotComponent.ts","../src/components/table/TableMobileSort.vue","../src/components/table/TableColumn.vue","../src/components/table/TablePagination.vue","../src/components/table/Table.vue","../src/components/table/index.ts","../src/components/tabs/Tabs.vue","../src/components/tabs/TabItem.vue","../src/components/tabs/index.ts","../src/components/taginput/Taginput.vue","../src/components/taginput/index.ts","../src/components/timepicker/index.ts","../src/components/tooltip/index.ts","../src/components/upload/Upload.vue","../src/components/upload/index.ts","../src/index.ts"],"sourcesContent":["import { Comment, Fragment, Text } from \"vue\";\n\n/**\n * Generates a random string\n */\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\n\n/**\n * +/- function to native math sign\n */\nfunction signPoly(value: number): number {\n    if (value < 0) return -1;\n    return value > 0 ? 1 : 0;\n}\nexport const sign = Math.sign || signPoly;\n\n/**\n * Native modulo bug with negative numbers\n * @param n\n * @param mod\n * @returns {number}\n */\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\n\n/**\n * Asserts a value is beetween min and max\n * @param val\n * @param min\n * @param max\n * @returns {number}\n */\nexport function bound(val: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, val));\n}\n\nexport const isObject = <T>(obj: T): boolean =>\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport const isDate = (d: unknown): d is Date =>\n    d && d instanceof Date && !isNaN(d.getTime());\n\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\n\nexport const blankIfUndefined = (value: string): string =>\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\n\nexport const defaultIfUndefined = <T>(\n    value: T | undefined,\n    defaultValue: T,\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\n\nexport const toCssDimension = (width: string | number): string | number =>\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\n\n/**\n * Extension of indexOf method by equality function if specified\n */\nexport function indexOf<T>(\n    array: T[],\n    obj: T,\n    fn: (value: T, array: T[]) => boolean,\n): number {\n    if (!array) return -1;\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\n    return array.findIndex((value, index, arr) => fn(value, arr));\n}\n\n/**\n * Deeply check if two values are equal\n */\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\n    // Check if only one value is empty.\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\n\n    // If both objects are identical, return true.\n    if (valueA === valueB) return true;\n\n    // Check if both values are objecs.\n    if (isObject(valueA) && isObject(valueB)) {\n        // Get the keys of both objects.\n        const keys1 = Object.keys(valueA);\n        const keys2 = Object.keys(valueB);\n\n        // Check if the number of keys is the same.\n        if (keys1.length !== keys2.length) return false;\n\n        // Iterate through the keys and compare their values recursively.\n        for (const key of keys1) {\n            const val1 = valueA[key];\n            const val2 = valueB[key];\n            const areObjects = isObject(val1) && isObject(val2);\n            if (\n                (areObjects && !isEqual(val1, val2)) ||\n                (!areObjects && val1 !== val2)\n            )\n                return false;\n        }\n        // If all checks pass, the objects are deep equal.\n        return true;\n    }\n\n    // Check if both values are arrays.\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\n        // Check if the number of keys is the same.\n        if (valueA.length !== valueB.length) return false;\n        // Check if each value of the array is the same.\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\n        // If all checks pass, the arrays are deep equal.\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Clone an obj with Object.assign\n */\nexport function clone<T extends object>(obj: T): T {\n    return Object.assign({}, obj);\n}\n\n/**\n * Merge function to replace Object.assign with deep merging possibility\n */\nexport function merge(target: any, source: any, deep = false): any {\n    if (!isObject(target) || !isObject(source)) return source;\n    if (!deep) return Object.assign(target, source);\n    else return mergeDeep(target, source);\n}\n\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nexport function mergeDeep(target: any, source: any): any {\n    if (!isObject(target) || !isObject(source)) return source;\n\n    Object.getOwnPropertyNames(source).forEach((key) => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(\n                Object.assign({}, targetValue),\n                sourceValue,\n            );\n        } else {\n            target[key] = sourceValue;\n        }\n    });\n\n    return target;\n}\n\n/**\n * Get a value of an object property/path even if it's nested\n */\nexport function getValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    defaultValue?: T,\n): T {\n    const value = path\n        .split(\".\")\n        .reduce(\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\n            obj,\n        ) as T;\n    return typeof value !== \"undefined\" ? value : defaultValue;\n}\n\n/**\n * Set a value of an object property/path even if it's nested\n */\nexport function setValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    value: T,\n): void {\n    const p = path.split(\".\");\n    if (p.length === 1) {\n        obj[path] = value;\n        return;\n    }\n    const field = p[0];\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\n}\n\nexport function removeElement(el: Element): void {\n    if (typeof el.remove !== \"undefined\") {\n        el.remove();\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\n        el.parentNode.removeChild(el);\n    }\n}\n\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\n    const root = document.createElement(\"div\");\n    root.style.position = \"absolute\";\n    root.style.left = \"0px\";\n    root.style.top = \"0px\";\n    const wrapper = document.createElement(\"div\");\n    root.appendChild(wrapper);\n    wrapper.appendChild(el);\n    document.body.appendChild(root);\n    return root;\n}\n\n/**\n * Escape regex characters\n * http://stackoverflow.com/a/6969486\n */\nexport function escapeRegExpChars(value: string): string {\n    if (!value) return value;\n    // eslint-disable-next-line no-useless-escape\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove accents/diacritics in a string in JavaScript\n * https://stackoverflow.com/a/37511463\n */\nexport function removeDiacriticsFromString(value: string): string {\n    if (!value) return value;\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/** checks if a vue vnode is empty */\nexport function isVNodeEmpty(vnode): boolean {\n    if (!vnode) return true;\n    if (vnode.type === Comment) return true;\n    if (vnode.type === Text && !vnode.children.trim()) return true;\n    if (vnode.type === Fragment && isVNodeEmpty(vnode.children)) return true;\n    return false;\n}\n\n/**\n * Mobile detection\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\n */\nexport const isMobileAgent = {\n    Android: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Android/i),\n    BlackBerry: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/BlackBerry/i),\n    iOS: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\n    Opera: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Opera Mini/i),\n    Windows: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/IEMobile/i),\n    any: (): boolean =>\n        isMobileAgent.Android() ||\n        isMobileAgent.BlackBerry() ||\n        isMobileAgent.iOS() ||\n        isMobileAgent.Opera() ||\n        isMobileAgent.Windows(),\n};\n","import { ref } from \"vue\";\nimport type { OrugaProgrammatic } from \"@/types\";\n\n/** Oruga object for programmatic components */\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\n\n/** Add components to the oruga object */\nexport function addProgrammatic(property: string, component: object): void {\n    oruga.value[property] = component;\n}\n\n/** Composable for internal and external usage of programmatic components*/\nexport function useOruga(): OrugaProgrammatic {\n    return oruga.value;\n}\n","import type { App, Component, Plugin } from \"vue\";\nimport { useOruga, addProgrammatic } from \"./programmatic\";\n\nexport let VueInstance: App;\n\n/** set the global vue instance */\nexport const setVueInstance = (Vue: App): void => {\n    VueInstance = Vue;\n};\n\n/** register a plugin to the vue app instance */\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\n    app.use(plugin);\n};\n\n/** register a component to the vue app instance */\nexport const registerComponent = (app: App, component: Component): void => {\n    app.component(component.name, component);\n};\n\n/** register a global programmatic component to the oruga object */\nexport const registerComponentProgrammatic = (\n    app: App,\n    property: string,\n    component: Component,\n): void => {\n    // set global vue instance\n    setVueInstance(app);\n    // use composable for unified access to programmatic oruga object\n    const oruga = useOruga();\n    // add component (manipulates the programmatic oruga object)\n    addProgrammatic(property, component);\n\n    // add provide and $oruga (only needed once)\n    if (!(app._context.provides && app._context.provides.oruga))\n        app.provide(\"oruga\", oruga);\n    if (!app.config.globalProperties.$oruga)\n        app.config.globalProperties.$oruga = oruga;\n};\n","import { ref, toRaw, type App } from \"vue\";\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\nimport { setVueInstance } from \"./plugins\";\nimport type { OrugaOptions } from \"@/types\";\n\ndeclare module \"../index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n\nconst globalOptions = ref<OrugaOptions>({\n    iconPack: \"mdi\",\n    useHtml5Validation: true,\n    statusIcon: true,\n    transformClasses: undefined,\n});\n\nexport const setOptions = (options: OrugaOptions): void => {\n    globalOptions.value = options;\n};\n\nexport const getOptions = (): OrugaOptions => {\n    return clone(toRaw(globalOptions.value));\n};\n\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\n    return getValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const setOption = <T>(path: string, defaultValue: T): void => {\n    setValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const ConfigProgrammatic = {\n    getOption,\n    getOptions,\n    setOption,\n    setOptions(options: OrugaOptions): void {\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n\nexport const OrugaConfig = {\n    install(app: App, options?: OrugaOptions): void {\n        // set global vue instance\n        setVueInstance(app);\n        // set options\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n","import { getOption } from \"./config\";\nimport { merge } from \"./helpers\";\n\nexport type IconConfig = {\n    sizes?: { default: string; [key: string]: string };\n    iconPrefix?: string;\n    internalIcons?: Record<string, string>;\n};\n\nconst mdiIcons = {\n    sizes: {\n        default: \"mdi-24px\",\n        small: null,\n        medium: \"mdi-36px\",\n        large: \"mdi-48px\",\n    },\n    iconPrefix: \"mdi-\",\n};\n\nconst faIcons = () => {\n    const iconComponent = getOption(\"iconComponent\");\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\n    return {\n        sizes: {\n            default: null,\n            small: null,\n            medium: \"lg\",\n            large: \"2xl\",\n        },\n        iconPrefix: faIconPrefix,\n        internalIcons: {\n            check: \"check\",\n            information: \"info-circle\",\n            alert: \"exclamation-triangle\",\n            \"alert-circle\": \"exclamation-circle\",\n            \"arrow-up\": \"arrow-up\",\n            \"chevron-right\": \"angle-right\",\n            \"chevron-left\": \"angle-left\",\n            \"chevron-down\": \"angle-down\",\n            \"chevron-up\": \"angle-up\",\n            eye: \"eye\",\n            \"eye-off\": \"eye-slash\",\n            \"caret-down\": \"caret-down\",\n            \"caret-up\": \"caret-up\",\n            \"close-circle\": \"times-circle\",\n            close: \"times\",\n            loading: \"circle-notch\",\n        },\n    };\n};\n\nconst getIcons = (): Record<string, IconConfig> => {\n    let icons: Record<string, IconConfig> = {\n        mdi: mdiIcons,\n        fa: faIcons(),\n        fas: faIcons(),\n        far: faIcons(),\n        fad: faIcons(),\n        fab: faIcons(),\n        fal: faIcons(),\n    };\n\n    const customIconPacks =\n        getOption<Record<string, IconConfig>>(\"customIconPacks\");\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\n\n    return icons;\n};\n\nexport default getIcons;\n","import {\n    toValue,\n    type ComponentPublicInstance,\n    type MaybeRefOrGetter,\n    type MaybeRef,\n    type Component,\n} from \"vue\";\n\nexport type MaybeElement =\n    | Element\n    | Document\n    | Window\n    | HTMLElement\n    | SVGElement\n    | Component\n    | ComponentPublicInstance\n    | undefined\n    | null;\n\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\n    T extends ComponentPublicInstance\n        ? Exclude<MaybeElement, ComponentPublicInstance>\n        : T extends Component\n          ? HTMLElement\n          : T | undefined;\n\n/**\n * Get the dom element of a ref of element or Vue component instance\n *\n * @param elRef\n */\nexport function unrefElement<T extends MaybeElement>(\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\n): UnRefElementReturn<T> {\n    const plain = toValue(elRef);\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\n}\n","import {\n    ref,\n    watch,\n    isRef,\n    toValue,\n    getCurrentInstance,\n    effectScope,\n    onScopeDispose,\n    getCurrentScope,\n    type MaybeRefOrGetter,\n    type Ref,\n    type ComponentInternalInstance,\n} from \"vue\";\n\nimport { getOptions } from \"@/utils/config\";\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\n\nimport type {\n    ClassBind,\n    ClassDefinition,\n    ComponentProps,\n    TransformFunction,\n} from \"@/types\";\n\n// named tuple as prop definition\ntype ComputedClass = readonly [\n    className: string,\n    defaultClass: string,\n    suffix?: MaybeRefOrGetter<string>,\n    apply?: MaybeRefOrGetter<boolean>,\n];\n\n/** Helperfunction to get all active classes from a class binding list */\nexport const getActiveClasses = (classes: ClassBind[]): string[] => {\n    if (!classes) return [];\n    return classes.flatMap((bind) =>\n        Object.keys(bind).filter((key) => key && bind[key]),\n    );\n};\n\n/**\n * Calculate dynamic classes based on class definitions\n */\nexport function defineClasses(\n    ...classDefinitions: ComputedClass[]\n): Ref<ClassBind[]> {\n    // getting a hold of the internal instance of the component in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"defineClasses must be called within a component setup function.\",\n        );\n\n    // create an effect scope object to capture reactive effects\n    const scope = effectScope();\n\n    // reactive classes container\n    const classes = ref<ClassBind[]>([]);\n\n    classes.value = classDefinitions.map((defintion, index) => {\n        const className = defintion[0];\n        const defaultClass = defintion[1];\n        const suffix = defintion[2];\n        const apply = defintion[3];\n\n        function getClassBind(): ClassBind {\n            // compute class based on definition parameter\n            const computedClass = computeClass(\n                vm,\n                className,\n                defaultClass,\n                toValue(suffix),\n            );\n\n            // if apply is not defined or true\n            const applied = !isDefined(apply) || toValue(apply);\n\n            // return class bind property\n            return { [computedClass]: applied };\n        }\n\n        // if suffix is defined, watch suffix changed and recalculate class\n        if (isDefined(suffix) && isRef(suffix)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(suffix),\n                    (value, oldValue) => {\n                        // only recompute when value has really changed\n                        if (value === oldValue) return;\n                        // recompute the class bind property\n                        const classBind = getClassBind();\n                        // update class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\n        if (isDefined(apply) && isRef(apply)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(apply),\n                    (applied, oldValue) => {\n                        // only change apply when value has really changed\n                        if (applied === oldValue) return;\n\n                        // get class binding property by class index\n                        const classBind = classes.value[index];\n\n                        // update the apply class binding state\n                        Object.keys(classBind).forEach(\n                            (key) => (classBind[key] = applied),\n                        );\n\n                        // update the class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // return computed class based on parameter\n        return getClassBind();\n    });\n\n    // check if there is a current active effect scope\n    if (getCurrentScope())\n        // Registers a dispose callback on the current active effect scope.\n        // The callback will be invoked when the associated effect scope is stopped.\n        onScopeDispose(() => {\n            // stop all effects when appropriate\n            if (scope) scope.stop();\n        });\n\n    // return reactive classes\n    return classes;\n}\n\n/**\n * Compute a class by a field name\n */\nfunction computeClass(\n    vm: ComponentInternalInstance,\n    field: string,\n    defaultValue?: string,\n    suffix = \"\",\n): string {\n    // get component props\n    const props = getProps(vm).props; // TODO: remove `.props` when object escape get reverted\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get component instance override property\n    const config = props.override === true ? {} : getOptions();\n\n    // get global config override property\n    const globalOverride =\n        props.override || getValueByPath(config, \"override\", false);\n    // get component config override property\n    const localOverride = getValueByPath(\n        config,\n        `${configField}.override`,\n        globalOverride,\n    );\n    // get field specific config override property\n    const overrideClass = getValueByPath(\n        config,\n        `${configField}.${field}.override`,\n        localOverride,\n    );\n\n    // get global tranform class\n    const globalTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        \"transformClasses\",\n        undefined,\n    );\n    // get field specific tranform class\n    const localTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        `${configField}.transformClasses`,\n        undefined,\n    );\n\n    // get config class definition\n    let globalClass =\n        getValueByPath<ClassDefinition>(\n            config,\n            `${configField}.${field}.class`,\n            \"\",\n        ) ||\n        getValueByPath<ClassDefinition>(config, `${configField}.${field}`, \"\");\n    // get instance class override\n    let currentClass = getValueByPath<ClassDefinition>(props, field, \"\");\n\n    // procsess instance class\n    if (Array.isArray(currentClass)) {\n        currentClass = currentClass.join(\" \");\n    }\n    if (typeof currentClass === \"function\") {\n        const props = getProps(vm);\n        currentClass = currentClass(suffix, props);\n    } else {\n        currentClass = suffixProcessor(currentClass as string, suffix);\n    }\n\n    // process confic class\n    if (Array.isArray(globalClass)) {\n        globalClass = globalClass.join(\" \");\n    }\n    if (typeof globalClass === \"function\") {\n        const props = getProps(vm);\n        globalClass = globalClass(suffix, props);\n    } else {\n        globalClass = suffixProcessor(globalClass as string, suffix);\n    }\n\n    // process default value\n    if (defaultValue.includes(\"{*}\")) {\n        defaultValue = defaultValue.replace(\n            /\\{\\*\\}/g,\n            blankIfUndefined(suffix),\n        );\n    } else {\n        defaultValue = defaultValue + blankIfUndefined(suffix);\n    }\n\n    // if override is false add default value\n    // add global config classes\n    // add instance classes\n    let appliedClasses = (\n        `${!overrideClass ? defaultValue : \"\"} ` +\n        `${blankIfUndefined(globalClass)} ` +\n        `${blankIfUndefined(currentClass)}`\n    )\n        .trim()\n        .replace(/\\s\\s+/g, \" \");\n\n    // apply component local transformclass if available\n    if (localTransformClasses) {\n        appliedClasses = localTransformClasses(appliedClasses);\n    }\n    // else apply global transformclass if available\n    else if (globalTransformClasses) {\n        appliedClasses = globalTransformClasses(appliedClasses);\n    }\n\n    return appliedClasses;\n}\n\nfunction suffixProcessor(input: string, suffix: string): string {\n    return blankIfUndefined(input)\n        .split(\" \")\n        .filter((cls) => cls.length > 0)\n        .map((cls) => cls + blankIfUndefined(suffix))\n        .join(\" \");\n}\n\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\n    let props = vm.proxy.$props;\n\n    // get all props which ends with \"Props\", these are compressed parent props\n    // append these parent props as root level prop\n    props = Object.keys(props)\n        .filter((key) => key.endsWith(\"Props\"))\n        .map((key) => props[key])\n        .reduce((a, b) => ({ ...a, ...b }), props);\n\n    // TODO: revert object escape\n    return { props };\n};\n","import {\n    computed,\n    ref,\n    watch,\n    nextTick,\n    type ExtractPropTypes,\n    type WritableComputedRef,\n    type Ref,\n    type UnwrapRef,\n    type ComponentObjectPropsOptions,\n} from \"vue\";\n\n/**\n * Adaption of {@link https://vueuse.org/core/useVModel/} options.\n */\nexport interface PropBindingOptions<Passive extends boolean = false> {\n    /**\n     * When passive is set to `true`, it will use `watch` to sync with props and ref.\n     * Instead of relying on the `v-model` or `.sync` to work.\n     *\n     * @default false\n     */\n    passive?: Passive;\n    /**\n     * When eventName is set, it's value will be used to overwrite the emit event name.\n     *\n     * @default undefined\n     */\n    eventName?: string;\n    /**\n     * Attempting to check for changes of properties in a deeply nested object or array.\n     * Apply only when `passive` option is set to `true`\n     *\n     * @default false\n     */\n    deep?: boolean;\n}\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way model binding in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param name Property name\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function usePropBinding<T, Passive extends boolean>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<Passive>,\n): Ref<UnwrapRef<T>> | WritableComputedRef<T> {\n    const event = options?.eventName || `update:${name!.toString()}`;\n\n    if (options?.passive) {\n        const proxy = ref<T>(props[name!]);\n        let isUpdating = false;\n\n        watch(\n            () => props[name!],\n            (value) => {\n                if (!isUpdating) {\n                    isUpdating = true;\n                    proxy.value = value;\n                    nextTick(() => (isUpdating = false));\n                }\n            },\n        );\n\n        watch(\n            proxy,\n            (value) => {\n                if ((!isUpdating && value !== props[name!]) || options.deep)\n                    emit(event, value as T);\n            },\n            { deep: options.deep },\n        );\n\n        return proxy;\n    } else {\n        return computed<T>({\n            get() {\n                return props[name!] as T;\n            },\n            set(value) {\n                emit(event, value);\n            },\n        });\n    }\n}\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way binded modelValue property in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function useVModelBinding<T, Options extends PropBindingOptions>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: Options,\n): WritableComputedRef<T> | Ref<UnwrapRef<T>> {\n    return usePropBinding(\"modelValue\", props, emit, options);\n}\n","import {\n    onBeforeUnmount,\n    onMounted,\n    type MaybeRefOrGetter,\n    type Component,\n} from \"vue\";\nimport { isObject } from \"@/utils/helpers\";\nimport { unrefElement } from \"./unrefElement\";\n\ntype EventTarget = Element | Document | Window | Component;\ntype EventListenerOptions = AddEventListenerOptions & {\n    /** Register event listener immediate or on mounted hook. */\n    immediate?: boolean;\n};\n\n/**\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\n *\n * @param event event name\n * @param listener event listener function\n * @param el default docuemnt\n * @return stop function\n */\nexport function useEventListener(\n    event: string,\n    listener: (evt?: any) => any,\n    el: MaybeRefOrGetter<EventTarget> = document,\n    options?: EventListenerOptions,\n): () => void {\n    let cleanup: () => void;\n\n    const register = (): void => {\n        if (!el) return;\n\n        const target = unrefElement(el);\n        // create a clone of options, to avoid it being changed reactively on removal\n        const optionsClone = isObject(options) ? { ...options } : options;\n        target.addEventListener(event, listener, optionsClone);\n        cleanup = (): void =>\n            target.removeEventListener(event, listener, optionsClone);\n    };\n\n    const stop = (): void => {\n        if (typeof cleanup === \"function\") cleanup();\n    };\n\n    if (options?.immediate) register();\n    else {\n        onMounted(() => register());\n        onBeforeUnmount(() => stop());\n    }\n\n    return stop;\n}\n","// Polyfills for SSR\n\nexport const isClient = typeof window !== \"undefined\";\nexport const isSSR = typeof window === \"undefined\";\n\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\nexport const File = isSSR ? Object : window.File;\n","import { getCurrentInstance, ref } from \"vue\";\nimport { getOption } from \"@/utils/config\";\nimport { useEventListener } from \"./useEventListener\";\nimport { isClient } from \"@/utils/ssr\";\n\n/**\n * Checks if the match media is mobile.\n * @param mobileBreakpoint px breakpoint\n */\nexport function useMatchMedia(mobileBreakpoint?: string) {\n    const isMobile = ref(false);\n    const mediaQuery = ref();\n\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useMatchMedia must be called within a component setup function.\",\n        );\n    // get component props\n    const props = vm.props;\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get mobileBreakpoint width value\n    let width = props.mobileBreakpoint;\n    if (!width) {\n        const defaultWidth = getOption(\n            `mobileBreakpoint`,\n            mobileBreakpoint || \"1023px\",\n        );\n\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\n    }\n\n    // define match media query ref\n    mediaQuery.value = isClient\n        ? window.matchMedia(`(max-width: ${width})`)\n        : undefined;\n\n    if (mediaQuery.value) {\n        isMobile.value = mediaQuery.value.matches;\n        useEventListener(\"change\", onMatchMedia, mediaQuery.value);\n    } else {\n        isMobile.value = false;\n    }\n\n    function onMatchMedia(event: any): void {\n        isMobile.value = event.matches;\n    }\n\n    return { isMobile };\n}\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    useSlots,\n    watch,\n    type PropType,\n    type VNodeArrayChildren,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isVNodeEmpty } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport { injectField, provideField } from \"./fieldInjection\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Fields are used to add functionality to controls and to attach/group components and elements together\n * @displayName Field\n * @style _field.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OField\",\n    configField: \"field\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Color of the field and help message, also adds a matching icon.\n     * Used by Input, Select and Autocomplete.\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: { type: String, default: undefined },\n    /** Field label */\n    label: { type: String, default: undefined },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    labelSize: {\n        type: String,\n        default: () => getOption(\"field.labelsize\"),\n    },\n    /** Same as native for set on the label */\n    labelFor: { type: String, default: undefined },\n    /** Help message text */\n    message: { type: String, default: undefined },\n    messageTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"field.messageTag\", \"p\"),\n    },\n    /**\n     * Direct child components/elements of Field will be grouped horizontally\n     * (see which ones at the top of the page).\n     */\n    grouped: { type: Boolean, default: false },\n    /** Allow controls to fill up multiple lines, making it responsive */\n    groupMultiline: { type: Boolean, default: false },\n    /** Group label and control on the same line for horizontal forms */\n    horizontal: { type: Boolean, default: false },\n    /** Field automatically attach controls together */\n    addons: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"field.mobileBreakpoint\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to align label and control in horizontal forms */\n    horizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields are grouped together */\n    groupedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields fill up multiple lines */\n    groupMultilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label size */\n    labelSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label when horizontal */\n    labelHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field body */\n    bodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** \"Class for field body when horizontal */\n    bodyHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for components automatically attached together when inside a field */\n    addonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the field message */\n    messageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the message field variant */\n    variantMessageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the label field variant */\n    variantLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of file component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the focused field */\n    focusedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the filled field */\n    filledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst inputId = ref(props.labelFor);\nwatch(\n    () => props.labelFor,\n    (v) => (inputId.value = v),\n);\n\n/** Set internal variant when prop change. */\nconst fieldVariant = ref(props.variant);\nwatch(\n    () => props.variant,\n    (v) => (fieldVariant.value = v),\n);\n\n/** Set internal message when prop change. */\nconst fieldMessage = ref(props.message);\nwatch(\n    () => props.message,\n    (v) => (fieldMessage.value = v),\n);\n\n/** Set parent message if we use Field in Field. */\nwatch(\n    () => fieldMessage.value,\n    (value) => {\n        if (parentField?.value?.hasInnerField) {\n            if (!parentField.value.fieldVariant)\n                parentField.value.setVariant(fieldVariant.value);\n            if (!parentField.value.fieldMessage)\n                parentField.value.setMessage(value);\n        }\n    },\n);\n\n/** this can be set from outside to update the focus state */\nconst isFocused = ref(false);\n/** this can be set from outside to update the filled state */\nconst isFilled = ref(false);\n/** this can be set from sub fields to update the has inner field state */\nconst hasInnerField = ref<boolean>(false);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n// tell parent field it has an inner field\nif (parentField?.value) parentField.value.addInnerField();\n\nconst slots = useSlots();\n\nconst hasLabel = computed(() => props.label || !!slots.label);\n\nconst hasMessage = computed(() => !!fieldMessage.value || !!slots.message);\n\nconst isGrouped = computed(\n    () =>\n        props.grouped ||\n        props.groupMultiline ||\n        hasInnerField.value ||\n        hasAddons.value,\n);\n\nconst hasAddons = computed(\n    () => props.addons && !props.horizontal && !!slots.default,\n);\n\nfunction getInnerContent(vnode): VNodeArrayChildren {\n    const slot = vnode();\n    return slot.length === 1 && Array.isArray(slot[0].children)\n        ? slot[0].children\n        : slot;\n}\n\n// --- Field Dependency Injection Feature ---\n\nconst rootRef = ref();\n\nfunction addInnerField(): void {\n    hasInnerField.value = true;\n}\nfunction setFocus(value: boolean): void {\n    isFocused.value = value;\n}\nfunction setFilled(value: boolean): void {\n    isFilled.value = value;\n}\nfunction setVariant(value: string): void {\n    fieldVariant.value = value;\n}\nfunction setMessage(value: string): void {\n    fieldMessage.value = value;\n}\nfunction setInputId(value: string): void {\n    inputId.value = value;\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed(() => ({\n    $el: rootRef.value,\n    props,\n    hasInnerField: hasInnerField.value,\n    hasMessage: hasMessage.value,\n    fieldVariant: fieldVariant.value,\n    fieldMessage: fieldMessage.value,\n    addInnerField,\n    setInputId,\n    setFocus,\n    setFilled,\n    setVariant,\n    setMessage,\n}));\n\n// Provide field component data via dependency injection.\nprovideField(provideData);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"horizontalClass\",\n        \"o-field--horizontal\",\n        null,\n        computed(() => !!props.horizontal),\n    ],\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\n);\n\nconst messageClasses = defineClasses(\n    [\"messageClass\", \"o-field__message\"],\n    [\n        \"variantMessageClass\",\n        \"o-field__message-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelClasses = defineClasses(\n    [\"labelClass\", \"o-field__label\"],\n    [\n        \"labelSizeClass\",\n        \"o-field__label-\",\n        computed(() => props.labelSize),\n        computed(() => !!props.labelSize),\n    ],\n    [\n        \"variantLabelClass\",\n        \"o-field__label-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelHorizontalClasses = defineClasses([\n    \"labelHorizontalClass\",\n    \"o-field__horizontal-label\",\n]);\n\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\n\nconst bodyHorizontalClasses = defineClasses([\n    \"bodyHorizontalClass\",\n    \"o-field__horizontal-body\",\n]);\n\nconst innerFieldClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"groupMultilineClass\",\n        \"o-field--grouped-multiline\",\n        null,\n        computed(() => props.groupMultiline),\n    ],\n\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\n    [\n        \"addonsClass\",\n        \"o-field--addons\",\n        null,\n        computed(() => !props.grouped && hasAddons.value),\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"field\" :class=\"rootClasses\">\n        <div v-if=\"horizontal\" :class=\"labelHorizontalClasses\">\n            <label v-if=\"hasLabel\" :for=\"inputId\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </div>\n        <template v-else>\n            <label v-if=\"hasLabel\" :for=\"inputId\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </template>\n\n        <div v-if=\"horizontal\" :class=\"bodyHorizontalClasses\">\n            <template\n                v-for=\"(element, index) in getInnerContent($slots.default)\"\n                :key=\"index\">\n                <component :is=\"element\" v-if=\"isVNodeEmpty(element)\" />\n\n                <OField\n                    v-else\n                    :variant=\"fieldVariant\"\n                    :addons=\"false\"\n                    :message-tag=\"messageTag\"\n                    :message-class=\"messageClass\">\n                    <!-- render inner default slot element -->\n                    <component :is=\"element\" />\n                    <!-- show field message here -->\n                    <template v-if=\"index === 0\" #message>\n                        <slot name=\"message\" :message=\"fieldMessage\">\n                            {{ fieldMessage }}\n                        </slot>\n                    </template>\n                </OField>\n            </template>\n        </div>\n\n        <div v-else-if=\"isGrouped\" :class=\"bodyClasses\">\n            <div :class=\"innerFieldClasses\">\n                <!--\n                   @slot Default content\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <template v-else>\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </template>\n\n        <component\n            :is=\"messageTag\"\n            v-if=\"hasMessage && !horizontal\"\n            :class=\"messageClasses\">\n            <!--\n                @slot Override the message\n                @binding {string} message - field message \n            -->\n            <slot name=\"message\" :message=\"fieldMessage\">\n                {{ fieldMessage }}\n            </slot>\n        </component>\n    </div>\n</template>\n","import {\n    computed,\n    inject,\n    provide,\n    type ComputedRef,\n    type InjectionKey,\n} from \"vue\";\n\nimport Field from \"./Field.vue\";\nimport { getOption } from \"@/utils/config\";\n\nexport type FieldProps = InstanceType<typeof Field>[\"$props\"];\n\ntype FieldData = {\n    $el: Element;\n    props: FieldProps;\n    hasInnerField: boolean;\n    hasMessage: boolean;\n    fieldVariant: string;\n    fieldMessage: string;\n    addInnerField: () => void;\n    setInputId: (value: string) => void;\n    setFocus: (value: boolean) => void;\n    setFilled: (value: boolean) => void;\n    setVariant: (value: string) => void;\n    setMessage: (value: string) => void;\n};\n\n/** provide/inject type */\ntype ProvidedField = ComputedRef<FieldData> | undefined;\n\n/** provide/inject key */\nconst $FieldKey: InjectionKey<ProvidedField> = Symbol(\"FielData\");\n\n/**\n * Provide field component data via dependency injection.\n * Provided data is a computed ref to enjure reactivity.\n */\nexport function provideField(data: ProvidedField): void {\n    provide($FieldKey, data);\n}\n\n/** Inject parent field component if used inside one. **/\nexport function injectField() {\n    const parentField = inject($FieldKey, undefined);\n\n    /**\n     * Get the type prop from parent if it's a Field.\n     */\n    const statusVariant = computed(() => {\n        if (!parentField?.value?.fieldVariant) return undefined;\n        if (typeof parentField.value.fieldVariant === \"string\")\n            return parentField.value.fieldVariant;\n        if (Array.isArray(parentField.value.fieldVariant)) {\n            for (const key in parentField.value.fieldVariant as any) {\n                if (parentField.value.fieldVariant[key]) return key;\n            }\n        }\n        return undefined;\n    });\n\n    /** Get the message prop from parent if it's a Field. */\n    const statusMessage = computed(() =>\n        parentField.value?.hasMessage ? parentField.value.fieldMessage : \"\",\n    );\n\n    /** Icon name based on the variant. */\n    const statusVariantIcon = computed<string>(() => {\n        const statusVariantIcon = getOption(\"statusVariantIcon\", {\n            success: \"check\",\n            danger: \"alert-circle\",\n            info: \"information\",\n            warning: \"alert\",\n        });\n        return statusVariantIcon[statusVariant.value] || \"\";\n    });\n\n    return {\n        parentField,\n        statusVariant,\n        statusVariantIcon,\n        statusMessage,\n    };\n}\n","import {\n    nextTick,\n    ref,\n    computed,\n    type ExtractPropTypes,\n    type MaybeRefOrGetter,\n    type Component,\n    watch,\n} from \"vue\";\nimport { injectField } from \"@/components/field/fieldInjection\";\nimport { unrefElement } from \"./unrefElement\";\nimport { getOption } from \"@/utils/config\";\nimport { isSSR } from \"@/utils/ssr\";\nimport { isDefined } from \"@/utils/helpers\";\n\n// This should cover all types of HTML elements that have properties related to\n// HTML constraint validation, e.g. .form and .validity.\nconst validatableFormElementTypes = isSSR\n    ? []\n    : [\n          HTMLButtonElement,\n          HTMLFieldSetElement,\n          HTMLInputElement,\n          HTMLObjectElement,\n          HTMLOutputElement,\n          HTMLSelectElement,\n          HTMLTextAreaElement,\n      ];\n\nexport type ValidatableFormElement = InstanceType<\n    (typeof validatableFormElementTypes)[number]\n>;\n\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\n    return validatableFormElementTypes.some((t) => el instanceof t)\n        ? (el as ValidatableFormElement)\n        : null;\n}\n\nconst constraintValidationAttributes = [\n    \"disabled\",\n    \"required\",\n    \"pattern\",\n    \"maxlength\",\n    \"minlength\",\n    \"max\",\n    \"min\",\n    \"step\",\n];\n\n/**\n * Form input handler functionalities\n */\nexport function useInputHandler<T extends ValidatableFormElement>(\n    /** input ref element - can be a html element or a vue component*/\n    inputRef: MaybeRefOrGetter<T | Component>,\n    /** emitted input events */\n    emits: {\n        /** on input focus event */\n        (e: \"focus\", value: Event): void;\n        /** on input blur event */\n        (e: \"blur\", value: Event): void;\n        /** on input invalid event */\n        (e: \"invalid\", value: Event): void;\n    },\n    /** validation configuration props */\n    props: Readonly<\n        ExtractPropTypes<{\n            useHtml5Validation?: boolean;\n            validationMessage?: string;\n        }>\n    >,\n) {\n    // inject parent field component if used inside one\n    const { parentField } = injectField();\n\n    /// Allows access to the native element in cases where it might be missing,\n    /// e.g. because the component hasn't been mounted yet or has been suspended\n    /// by a <KeepAlive>\n    const maybeElement = computed<T | undefined>(() => {\n        const el = unrefElement<Component | HTMLElement>(inputRef);\n        if (!el) {\n            return undefined;\n        }\n        if (el.getAttribute(\"data-oruga-input\"))\n            // if element is the input element\n            return el as T;\n\n        const inputs = el.querySelector(\"[data-oruga-input]\");\n\n        if (!inputs) {\n            console.warn(\n                \"useInputHandler: Underlaying Oruga input component not found\",\n            );\n            return undefined;\n        }\n        // return underlaying the input element\n        return inputs as T;\n    });\n\n    /// Should be used for most accesses to the native element; we generally\n    /// expect it to be present, especially in event handlers.\n    const element = computed(() => {\n        const el = maybeElement.value;\n        if (!el) {\n            console.warn(\"useInputHandler: inputRef contains no element\");\n        }\n        return el;\n    });\n\n    // --- Input Focus Feature ---\n\n    const isFocused = ref(false);\n\n    /** Focus the underlaying input element. */\n    function setFocus(): void {\n        nextTick(() => {\n            if (element.value) element.value.focus();\n        });\n    }\n\n    /** Click the underlaying input element. */\n    function doClick(): void {\n        nextTick(() => {\n            if (element.value) element.value.click();\n        });\n    }\n\n    /** Unset focused and emit blur event. */\n    function onBlur(event?: Event): void {\n        isFocused.value = false;\n        if (parentField?.value) parentField.value.setFocus(false);\n        emits(\"blur\", event);\n        checkHtml5Validity();\n    }\n\n    /** Set focused and emit focus event. */\n    function onFocus(event?: Event): void {\n        isFocused.value = true;\n        if (parentField?.value) parentField.value.setFocus(true);\n        emits(\"focus\", event);\n    }\n\n    // --- Validation Feature ---\n\n    const isValid = ref(true);\n\n    function setFieldValidity(variant, message): void {\n        nextTick(() => {\n            if (parentField?.value) {\n                // Set type only if not defined\n                if (!parentField.value.props.variant) {\n                    parentField.value.setVariant(variant);\n                }\n                // Set message only if not defined\n                if (!parentField.value.props.message) {\n                    parentField.value.setMessage(message);\n                }\n            }\n        });\n    }\n\n    /**\n     * Check HTML5 validation, set isValid property.\n     * If validation fail, send 'danger' type,\n     * and error message to parent if it's a Field.\n     */\n    function checkHtml5Validity(): void {\n        if (!props.useHtml5Validation) return;\n\n        if (!element.value) return;\n        if (element.value.validity.valid) {\n            setFieldValidity(null, null);\n            isValid.value = true;\n        } else {\n            setInvalid();\n            isValid.value = false;\n        }\n    }\n\n    function setInvalid(): void {\n        const variant = \"danger\";\n        const message =\n            props.validationMessage || element.value.validationMessage;\n        setFieldValidity(variant, message);\n    }\n\n    function onInvalid(event: Event): void {\n        checkHtml5Validity();\n        const validatable = asValidatableFormElement(event.target);\n        if (validatable && parentField?.value && props.useHtml5Validation) {\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\n            // We still want to focus the form's first invalid input, though.\n            event.preventDefault();\n            let isFirstInvalid = false;\n            if (validatable.form != null) {\n                const formElements = validatable.form.elements;\n                for (let i = 0; i < formElements.length; ++i) {\n                    const element = asValidatableFormElement(\n                        formElements.item(i),\n                    );\n                    if (element?.willValidate && !element.validity.valid) {\n                        isFirstInvalid = validatable === element;\n                        break;\n                    }\n                }\n            }\n            if (isFirstInvalid) {\n                const fieldElement = parentField.value.$el;\n                const invalidHandler = getOption(\"invalidHandler\");\n                if (invalidHandler instanceof Function) {\n                    invalidHandler(validatable, fieldElement);\n                } else {\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\n                    // which should mean that the message will be visible onscreen.\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\n                    // If we can't use it, we'll just fall back to focusing the field.\n                    const canScrollToField = fieldElement\n                        ? fieldElement.scrollIntoView != undefined\n                        : false;\n                    validatable.focus({ preventScroll: canScrollToField });\n                    if (canScrollToField) {\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\n                    }\n                }\n            }\n        }\n        emits(\"invalid\", event);\n    }\n\n    if (!isSSR) {\n        // Respond to attribute changes that might clear constraint validation errors.\n        // For instance, removing the `required` attribute on an empty field means that it's no\n        // longer invalid, so we might as well clear the validation message.\n        // In order to follow our usual convention, we won't add new validation messages\n        // until the next time the user interacts with the control.\n\n        // Technically, having the `required` attribute on one element in a radio button\n        // group affects the validity of the entire group.\n        // See https://html.spec.whatwg.org/multipage/input.html#radio-button-group.\n        // We're not checking for that here because it would require more expensive logic.\n        // Because of that, this will only work properly if the `required` attributes of all radio\n        // buttons in the group are synchronized with each other, which is likely anyway.\n        // (We're also expecting the use of radio buttons with our default validation message handling\n        // to be fairly uncommon because the overall visual experience is clunky with such a configuration.)\n        const onAttributeChange = (): void => {\n            if (!isValid.value) checkHtml5Validity();\n        };\n        let validationAttributeObserver: MutationObserver | null = null;\n        watch(\n            [maybeElement, isValid, () => props.useHtml5Validation],\n            (data) => {\n                // Not using destructuring assignment because browser support is just a little too weak at the moment\n                const el = data[0];\n                const valid = data[1];\n                const useValidation = data[2];\n\n                // Clean up previous state.\n                if (validationAttributeObserver != null) {\n                    // Process any pending events.\n                    if (validationAttributeObserver.takeRecords().length > 0) {\n                        onAttributeChange();\n                    }\n                    validationAttributeObserver.disconnect();\n                }\n\n                if (!isDefined(el) || valid || !useValidation) {\n                    return;\n                }\n\n                if (validationAttributeObserver == null) {\n                    validationAttributeObserver = new MutationObserver(\n                        onAttributeChange,\n                    );\n                }\n                validationAttributeObserver.observe(el, {\n                    attributeFilter: constraintValidationAttributes,\n                });\n\n                // Note that this doesn't react to changes in the list of ancestors.\n                // Based on testing, Vue seems to rarely, if ever, re-parent DOM nodes;\n                // it generally prefers to create new ones under the new parent.\n                // That means this simpler solution is likely good enough for now.\n                let ancestor: Node | null = el;\n                while ((ancestor = ancestor.parentNode)) {\n                    // Form controls can be disabled by their ancestor fieldsets.\n                    if (ancestor instanceof HTMLFieldSetElement) {\n                        validationAttributeObserver.observe(ancestor, {\n                            attributeFilter: [\"disabled\"],\n                        });\n                    }\n                }\n            },\n            { immediate: true },\n        );\n    }\n\n    return {\n        input: element,\n        isFocused,\n        isValid,\n        setFocus,\n        doClick,\n        onFocus,\n        onBlur,\n        checkHtml5Validity,\n        onInvalid,\n    };\n}\n","/**\n * Debounce a function\n * @param func function to debounce\n * @param wait debounce time to wait\n * @param immediate call immediate\n * @returns function to call\n */\nexport function useDebounce<A extends Array<unknown>>(\n    func: (...args: A) => void,\n    wait: number,\n    immediate?: boolean,\n): (...args: A) => void {\n    let timeout: NodeJS.Timeout;\n    return (...args: A) => {\n        const later = () => {\n            timeout = null;\n            if (!immediate) func.apply(this, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(this, args);\n    };\n}\n","import {\n    computed,\n    getCurrentInstance,\n    inject,\n    nextTick,\n    onUnmounted,\n    provide,\n    ref,\n    type Component,\n    type ComputedRef,\n    type Ref,\n    type UnwrapNestedRefs,\n} from \"vue\";\nimport { unrefElement } from \"./unrefElement\";\n\nexport type ProviderItem<T = unknown> = {\n    index: number;\n    data: ComputedRef<T>;\n    identifier: string;\n};\n\ntype PovidedData<P, I = unknown> = {\n    registerItem: (data: ComputedRef<I>) => ProviderItem<I>;\n    unregisterItem: (item: ProviderItem<I>) => void;\n    data?: ComputedRef<P>;\n};\n\ntype ProviderParentOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Additional data provided for the child to the item\n     */\n    data?: ComputedRef<T>;\n};\n\n/**\n * Provide functionalities and data to child components\n * @param rootRef Root element of the provider component\n * @param data Additional data to provide\n * @param options additional options\n */\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\n    rootRef?: Ref<HTMLElement | Component>,\n    options?: ProviderParentOptions<ParentData>,\n): {\n    childItems: Ref<UnwrapNestedRefs<ProviderItem<ItemData>[]>>;\n    sortedItems: ComputedRef<UnwrapNestedRefs<ProviderItem<ItemData>[]>>;\n} {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    const childItems = ref<ProviderItem<ItemData>[]>([]);\n    const sequence = ref(1);\n\n    /**\n     * When items are added/removed sort them according to their position\n     */\n    const sortedItems = computed(() =>\n        childItems.value.slice().sort((a, b) => a.index - b.index),\n    );\n\n    function registerItem(\n        data?: ComputedRef<ItemData>,\n    ): ProviderItem<ItemData> {\n        const index = childItems.value.length;\n        const identifier = nextSequence();\n        const item = { index, data, identifier };\n        childItems.value.push(item as UnwrapNestedRefs<typeof item>);\n        if (rootRef?.value) {\n            nextTick(() => {\n                const ids = childItems.value\n                    .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\n                    .join(\",\");\n                const parent = unrefElement(rootRef);\n                const children = parent.querySelectorAll(ids);\n                const sortedIds = Array.from(children).map((el) =>\n                    el.getAttribute(\"data-id\").replace(`${key}-`, \"\"),\n                );\n\n                childItems.value.forEach(\n                    (item) =>\n                        (item.index = sortedIds.indexOf(`${item.identifier}`)),\n                );\n            });\n        }\n        return item;\n    }\n\n    function unregisterItem(item: ProviderItem): void {\n        childItems.value = childItems.value.filter((i) => i !== item);\n    }\n\n    function nextSequence(): string {\n        return String(sequence.value++);\n    }\n\n    /** Provide functionality for child components via dependency injection. */\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\n        registerItem,\n        unregisterItem,\n        data: options?.data,\n    });\n\n    return {\n        childItems,\n        sortedItems,\n    };\n}\n\ntype ProviderChildOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Does the child need the be below the parent?\n     * @default true\n     */\n    needParent?: boolean;\n    /**\n     * Additional data appended to the item\n     */\n    data?: ComputedRef<T>;\n    /**\n     * Register child on parent\n     * @default true\n     */\n    register?: boolean;\n};\n\n/**\n * Inject functionalities and data from parent components\n * @param options additional options\n */\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: ProviderChildOptions<ItemData> = { needParent: true },\n): { parent: ComputedRef<ParentData>; item: Ref<ProviderItem<ItemData>> } {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    /** Inject parent component functionality if used inside one **/\n    const parent = inject<PovidedData<ParentData, ItemData>>(\n        \"$o-\" + key,\n        undefined,\n    );\n\n    const needParent = options.needParent !== false;\n\n    const register = options.register !== false;\n\n    if (needParent && !parent) {\n        throw new Error(\n            `You should wrap ${vm.proxy.$options.name} in a ${key} component`,\n        );\n    }\n\n    const item = ref<ProviderItem<ItemData>>();\n\n    if (parent && register) item.value = parent.registerItem(options.data);\n\n    onUnmounted(() => {\n        if (parent && item.value) parent.unregisterItem(item.value);\n    });\n\n    return { parent: parent?.data, item: item };\n}\n","import { computed, getCurrentInstance, onMounted, type Ref } from \"vue\";\nimport type { ProgrammaticInstance } from \"..\";\nimport { isClient, HTMLElement } from \"@/utils/ssr\";\nimport { usePropBinding } from \"./usePropValue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { removeElement } from \"@/utils/helpers\";\n\ntype ProgrammaticProps = {\n    active: boolean;\n    /** Define if the component is cancelable at all or by specific events. */\n    cancelable?: boolean | string[];\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: (...args: any[]) => void;\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: (...args: any[]) => void;\n    /** DOM element where the programmatic component will be mounted on. */\n    container?: string | HTMLElement;\n    /** This defines the programmatic usage. */\n    programmatic?: ProgrammaticInstance;\n};\n\nexport interface ProgrammaticOptions {\n    /** Method options that allow the component to be cancelled. */\n    cancelOptions?: string[];\n    /** Destroy the component on hide. Default is `true`. */\n    destroyOnHide?: boolean;\n}\n\n/**\n * This provides functionalities for programmatic usage.\n * The component get appended to the container.\n * This defines a cancel and close handler, as well as escape handler.\n * The component will be distroyed on close.\n * @param elementRef HTMLElement which should injected\n * @param props ProgrammaticProps\n * @param emits [\"update:active\", \"close\"]\n * @param options\n */\nexport function useProgrammaticComponent(\n    elementRef: Ref<HTMLElement> | (() => HTMLElement),\n    props: ProgrammaticProps,\n    emits: {\n        (e: \"update:active\", value: boolean): void;\n        (e: \"close\", ...args: any[]): void;\n    },\n    options: ProgrammaticOptions = { cancelOptions: [\"escape\", \"outside\"] },\n) {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProgrammaticComponent must be called within a component setup function.\",\n        );\n\n    const isActive = usePropBinding(\"active\", props, emits);\n\n    const cancelOptions = computed(() =>\n        typeof props.cancelable === \"boolean\"\n            ? props.cancelable\n                ? options.cancelOptions\n                : []\n            : props.cancelable,\n    );\n\n    function getElement(): HTMLElement {\n        return typeof elementRef === \"function\"\n            ? elementRef()\n            : elementRef.value;\n    }\n\n    const container = computed(\n        (): HTMLElement =>\n            typeof props.container === \"string\"\n                ? document.querySelector<HTMLElement>(props.container)\n                : (props.container as HTMLElement) || document.body,\n    );\n\n    onMounted(() => {\n        if (props.programmatic) {\n            if (props.programmatic.instances) {\n                props.programmatic.instances.add(vm);\n            }\n            // Insert the component in the container or the body tag\n            // only if it's programmatic\n            const el = getElement();\n            container.value.appendChild(el);\n\n            isActive.value = true;\n        }\n    });\n\n    if (isClient) useEventListener(\"keyup\", onKeyPress, container.value);\n\n    /** Keypress event that is bound to the document. */\n    function onKeyPress(event: KeyboardEvent): void {\n        if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n            cancel(\"escape\");\n        }\n    }\n\n    /**\n     * Close the component if cancelable.\n     * @param method Cancel method\n     */\n    function cancel(method: string): void {\n        if (!props.cancelable || !isActive.value) return;\n        // check if method is in options\n        if (cancelOptions.value.indexOf(method) < 0) return;\n        props.onCancel.apply(null);\n        close({ action: \"cancel\", method });\n    }\n\n    /**\n     * Emit events, and destroy the component if it's programmatic.\n     * Can get called outside of a setup scope.\n     */\n    function close(...args: any[]): void {\n        vm.emit(\"close\");\n        props.onClose.apply(null, args);\n\n        if (props.programmatic) {\n            if (props.programmatic.instances)\n                props.programmatic.instances.remove(vm);\n\n            if (props.programmatic.resolve)\n                props.programmatic.resolve.apply(null, args);\n\n            // Timeout for the animation complete before destroying\n            setTimeout(() => {\n                // set active state of current instance\n                vm.props.active = false;\n                vm.emit(\"update:active\", false);\n                if (\n                    typeof options.destroyOnHide === \"undefined\" ||\n                    options.destroyOnHide\n                )\n                    if (isClient)\n                        window.requestAnimationFrame(() => {\n                            // remove the component from the container or the body tag\n                            const el = getElement();\n                            if (el) removeElement(el);\n                        });\n                    else {\n                        const el = getElement();\n                        if (el) removeElement(el);\n                    }\n            });\n        } else {\n            // set active state of current instance\n            vm.props.active = false;\n            vm.emit(\"update:active\", false);\n        }\n    }\n\n    return { close, cancel, isActive, container };\n}\n","import { type MaybeRefOrGetter } from \"vue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { unrefElement } from \"./unrefElement\";\n\n/**\n * Listen for clicks outside of an element.\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\n *\n * @param target Target element\n * @param handler Event handler\n * @param ignore Element to ignore\n * @return stop function\n */\nexport function useClickOutside(\n    target: MaybeRefOrGetter,\n    handler: (evt: PointerEvent) => void,\n    ignore: (MaybeRefOrGetter | string)[] = [],\n): () => void {\n    if (!window) return;\n\n    /**\n     * White-listed items that not emit event when clicked.\n     * All children from ignore prop.\n     */\n    const shouldIgnore = (event: PointerEvent): boolean => {\n        return ignore.some((target) => {\n            if (typeof target === \"string\") {\n                return Array.from(\n                    window.document.querySelectorAll(target),\n                ).some(\n                    (el) =>\n                        el === event.target ||\n                        event.composedPath().includes(el),\n                );\n            } else {\n                const el = unrefElement(target);\n                return (\n                    el &&\n                    (event.target === el || event.composedPath().includes(el))\n                );\n            }\n        });\n    };\n\n    const listener = (event: PointerEvent): void => {\n        const el = unrefElement(target);\n        if (!el || el === event.target || event.composedPath().includes(el))\n            return;\n        if (shouldIgnore(event)) return;\n        handler(event);\n    };\n\n    const stop = useEventListener(\"click\", listener, window, {\n        immediate: true,\n        passive: true,\n    });\n\n    return stop;\n}\n","import { isDefined } from \"@/utils/helpers\";\n\n/**\n * Given an element, returns the element who scrolls it.\n */\nexport function getScrollingParent(target: HTMLElement): HTMLElement {\n    if (target.style.position === \"fixed\" || !target)\n        return document.documentElement;\n\n    let isScrollingParent = false;\n    let nextParent = target.parentElement;\n\n    while (!isScrollingParent && isDefined(nextParent)) {\n        if (nextParent === document.documentElement) break;\n\n        const { overflow, overflowY } = getComputedStyle(nextParent);\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\n\n        isScrollingParent =\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\n            scrollHeight > clientHeight;\n\n        /* ...found it, this one is returned */\n        if (isScrollingParent) break;\n\n        /* ...if not check the next one */\n        nextParent = nextParent.parentElement;\n    }\n\n    return nextParent;\n}\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport getIcons from \"@/utils/icons\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Icons take an important role of any application\n * @displayName Icon\n * @style _icon.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OIcon\",\n    configField: \"icon\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Icon component name */\n    component: {\n        type: String,\n        default: () => getOption(\"iconComponent\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    pack: {\n        type: String,\n        default: () => getOption(\"iconPack\", \"mdi\"),\n    },\n    /**\n     * \tColor of the icon\n     *  @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"icon.variant\"),\n    },\n    /** Icon name */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"icon.size\"),\n    },\n    /**\n     * Overrides icon font size\n     * @values Depends on library: null (smallest), fa-sm, fa-lg, fa-xl, mdi-18px, mdi-24px, mdi-36px, mdi-48px\n     */\n    customSize: { type: String, default: undefined },\n    /**\n     * Add class to icon font.\n     * See icon library documentation for custom classes.\n     */\n    customClass: { type: String, default: undefined },\n    /** When true makes icon clickable */\n    clickable: { type: Boolean, default: false },\n    /** Enable spin effect on icon */\n    spin: { type: Boolean, default: false },\n    /** Rotation 0-360 */\n    rotation: { type: [Number, String], default: undefined },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    both: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon when clickable */\n    clickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when spin */\n    spinClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootStyle = computed(() => {\n    const style = {};\n    if (props.rotation) {\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\n    }\n    return style;\n});\n\nconst iconConfig = computed(() => getIcons()[props.pack]);\n\nconst iconPrefix = computed(() =>\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\n);\n\nconst customSizeByPack = computed(() => {\n    if (iconConfig.value?.sizes) {\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\n            return iconConfig.value.sizes[props.size];\n        } else if (iconConfig.value.sizes.default) {\n            return iconConfig.value.sizes.default;\n        }\n    }\n    return null;\n});\n\n/**\n * Internal icon name based on the pack.\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\n * internal icons are always MDI.\n */\nconst computedIcon = computed(\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\n);\n\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\n\nconst computedVariant = computed(() => {\n    if (!props.variant) return;\n    let newVariant = \"\";\n    if (typeof props.variant === \"string\") {\n        newVariant = props.variant;\n    } else {\n        newVariant = Object.keys(props.variant).filter(\n            (key) => props.variant[key],\n        )[0];\n    }\n    return newVariant;\n});\n\n/** Equivalent icon name of the MDI. */\nfunction getEquivalentIconOf(value): string {\n    // Only transform the class if the both prop is set to true\n    if (!props.both) return value;\n    if (\n        iconConfig.value?.internalIcons &&\n        iconConfig.value?.internalIcons[value]\n    )\n        return iconConfig.value.internalIcons[value];\n    return value;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-icon\"],\n    [\n        \"clickableClass\",\n        \"o-icon--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\n    [\n        \"sizeClass\",\n        \"o-icon--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-icon--\",\n        computedVariant,\n        computed(() => !!computedVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <span :class=\"rootClasses\" data-oruga=\"icon\" :style=\"rootStyle\">\n        <!-- custom icon component -->\n        <component\n            :is=\"component\"\n            v-if=\"component\"\n            :icon=\"[pack, computedIcon]\"\n            :size=\"computedSize\"\n            :class=\"[customClass]\" />\n\n        <!-- native css icon -->\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    nextTick,\n    watch,\n    onMounted,\n    type StyleValue,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Get user Input. Use with Field to access all functionalities\n * @displayName Input\n * @style _input.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OInput\",\n    configField: \"input\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: \"\" },\n    /**\n     * Input type, like native\n     * @values Any native input type, and textarea\n     */\n    type: { type: String, default: \"text\" },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"input.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"input.variant\"),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Adds the reveal password functionality */\n    passwordReveal: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [Number, String], default: undefined },\n    /** Show character counter when maxlength prop is passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"input.counter\", false),\n    },\n    /** Automatically adjust height in textarea */\n    autosize: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"input.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"input.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"input.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"input.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"input.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"input.autocomplete\", \"off\"),\n    },\n    /** Same as native id. Also set the for label for o-field wrapper. */\n    id: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when type textarea */\n    textareaClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the input */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the input */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display when a right icon is used */\n    hasIconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\n// --- Validation Feature ---\n\nconst inputRef = ref<HTMLInputElement>();\nconst textareaRef = ref<HTMLInputElement>();\n\nconst elementRef = computed<HTMLInputElement>(() =>\n    props.type === \"textarea\" ? textareaRef.value : inputRef.value,\n);\n\n// use form input functionalities\nconst {\n    checkHtml5Validity,\n    onBlur,\n    onFocus,\n    onInvalid,\n    setFocus,\n    isValid,\n    isFocused,\n} = useInputHandler(elementRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = defineModel<string | number>({ default: \"\" });\n\n// if id is given set as `for` property on o-field wrapper\nif (props.id) parentField?.value?.setInputId(props.id);\n\n/** Get value length */\nconst valueLength = computed(() =>\n    typeof vmodel.value === \"string\"\n        ? vmodel.value.length\n        : typeof vmodel.value === \"number\"\n          ? vmodel.value.toString().length\n          : 0,\n);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            if (props.autosize) resize();\n            if (!isValid.value) nextTick(() => checkHtml5Validity());\n        },\n        { immediate: true },\n    );\n});\n\nconst height = ref(\"auto\");\n\nfunction resize(): void {\n    height.value = \"auto\";\n    nextTick(() => {\n        if (!textareaRef.value) return;\n        const scrollHeight = textareaRef.value.scrollHeight;\n        height.value = scrollHeight + \"px\";\n    });\n}\n\n/** Computed inline styles for autoresize */\nconst computedStyles = computed(\n    (): StyleValue =>\n        props.autosize\n            ? {\n                  resize: \"none\",\n                  height: height.value,\n                  overflow: \"hidden\",\n              }\n            : {},\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", (event.target as HTMLInputElement).value, event);\n}\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(() => {\n    return !!(\n        props.passwordReveal ||\n        (props.statusIcon && statusVariantIcon.value) ||\n        (props.clearable && vmodel.value && props.clearIcon) ||\n        props.iconRight\n    );\n});\n\nconst computedIconRight = computed(() => {\n    if (props.passwordReveal) {\n        return passwordVisibleIcon.value;\n    } else if (props.clearable && vmodel.value && props.clearIcon) {\n        return props.clearIcon;\n    } else if (props.iconRight) {\n        return props.iconRight;\n    }\n    return statusVariantIcon.value;\n});\n\nconst computedIconRightVariant = computed(() =>\n    props.passwordReveal || props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(event: Event): void {\n    emits(\"icon-click\", event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.passwordReveal) togglePasswordVisibility();\n    else if (props.clearable) vmodel.value = \"\";\n    if (props.iconRightClickable) {\n        emits(\"icon-right-click\", event);\n        nextTick(() => setFocus());\n    }\n}\n\n// --- Password Visability Feature ---\n\nconst isPasswordVisible = ref(false);\n\nconst inputType = computed(() => {\n    if (props.passwordReveal) {\n        return isPasswordVisible.value ? \"text\" : \"password\";\n    } else {\n        return props.type;\n    }\n});\n\n/** Current password-reveal icon name. */\nconst passwordVisibleIcon = computed(() =>\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\n);\n\n/**\n * Toggle the visibility of a password-reveal input\n * by changing the type and focus the input right away.\n */\nfunction togglePasswordVisibility(): void {\n    isPasswordVisible.value = !isPasswordVisible.value;\n    nextTick(() => setFocus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-input__wrapper\"],\n    [\n        \"expandedClass\",\n        \"o-input__wrapper--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"hasIconRightClass\",\n        \"o-input__wrapper--has-icon-right\",\n        null,\n        hasIconRight,\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-input\"],\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\n    [\n        \"sizeClass\",\n        \"o-input--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-input--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"disabledClass\",\n        \"o-input--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"textareaClass\",\n        \"o-input__textarea\",\n        null,\n        computed(() => props.type === \"textarea\"),\n    ],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\"iconRightSpaceClass\", \"o-input--iconspace-right\", null, hasIconRight],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-input__icon-right\",\n]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"input\" :class=\"rootClasses\">\n        <input\n            v-if=\"type !== 'textarea'\"\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            :data-oruga-input=\"inputType\"\n            :type=\"inputType\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :autocomplete=\"autocomplete\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <textarea\n            v-else\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"textareaRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"textarea\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :style=\"computedStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick\" />\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\n            :icon=\"computedIconRight\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"computedIconRightVariant\"\n            both\n            @click=\"rightIconClick\" />\n\n        <small\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\n            :class=\"counterClasses\">\n            {{ valueLength }} / {{ maxlength }}\n        </small>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    watch,\n    computed,\n    nextTick,\n    onBeforeUnmount,\n    ref,\n    type Component,\n    type PropType,\n} from \"vue\";\nimport { isClient } from \"@/utils/ssr\";\nimport { getScrollingParent, unrefElement } from \"@/composables\";\n\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\n\nconst opposites: Record<Position, Position> = {\n    top: \"bottom\",\n    bottom: \"top\",\n    right: \"left\",\n    left: \"right\",\n};\n\ntype Point = { x: number; y: number };\n\ndefineOptions({ inheritAttrs: false });\n\nconst props = defineProps({\n    teleport: {\n        type: [Boolean, String, Object],\n        required: true,\n    },\n    trigger: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    /**\n     * Position of the component relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n        default: undefined,\n    },\n    /** Used for calculation position auto */\n    defaultPosition: {\n        type: String as PropType<Position>,\n        validator: (value: string) =>\n            [\"top\", \"bottom\", \"left\", \"right\"].indexOf(value) > -1,\n        default: \"top\",\n    },\n    /** disable the position calculation */\n    disabled: { type: Boolean, default: false },\n    /** update positioning on teleport */\n    disablePositioning: { type: Boolean, default: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"update:position\", value: string);\n}>();\n\nconst teleportTo = computed(() =>\n    typeof props.teleport === \"boolean\" ? \"body\" : props.teleport,\n);\n\nconst teleportDisabled = computed(() =>\n    typeof props.teleport === \"boolean\" || !props.teleport\n        ? !props.teleport\n        : false,\n);\n\nconst contentRef = ref<HTMLElement | Component>();\n\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\n    contentRef.value = el;\n\n    nextTick(() => {\n        // update positioning\n        updatePositioning();\n        // add handler\n        addHandler();\n    });\n    return el;\n}\n\n// --- Dynamic Positioning Handling Feature ---\n\nconst initialPosition = props.position;\n\nconst scrollingParent = ref(undefined);\nconst resizeObserver = ref(null);\n\nif (isClient && window.ResizeObserver) {\n    resizeObserver.value = new window.ResizeObserver(updatePositioning);\n}\n\n// on content or disable state change update event listener\nwatch(\n    () => props.disabled,\n    () => {\n        if (!props.disabled) addHandler();\n        else removeHandler();\n    },\n    { immediate: true },\n);\n\n// update positioning if props change\nwatch(\n    [\n        () => !!props.trigger,\n        () => props.disablePositioning,\n        () => props.disabled,\n    ],\n    () => {\n        nextTick(() => updatePositioning());\n    },\n    { immediate: true },\n);\n\n// remove any event listener on unmount\nonBeforeUnmount(() => removeHandler());\n\n/** add event listener */\nfunction addHandler(): void {\n    if (isClient && !scrollingParent.value && contentRef.value) {\n        // get parent container\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef));\n        // set event listener\n        if (\n            scrollingParent.value &&\n            scrollingParent.value !== document.documentElement\n        ) {\n            scrollingParent.value.addEventListener(\n                \"scroll\",\n                updatePositioning,\n                { passive: true },\n            );\n            if (window.ResizeObserver)\n                resizeObserver.value.observe(scrollingParent.value);\n        } else {\n            document.addEventListener(\"scroll\", updatePositioning, {\n                passive: true,\n            });\n            window.addEventListener(\"resize\", updatePositioning);\n        }\n    }\n}\n\n/** remove event listener */\nfunction removeHandler(): void {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value?.disconnect();\n        window.removeEventListener(\"resize\", updatePositioning);\n        document.removeEventListener(\"scroll\", updatePositioning);\n        scrollingParent.value = undefined;\n    }\n}\n\n/** Update the best position set teleport positioning */\nfunction updatePositioning(): void {\n    if (props.disabled) return;\n    let position = props.position;\n    // update position if auto position is enabled\n    if (initialPosition === \"auto\") {\n        // calculate best position\n        position = getAutoPosition();\n        if (position != props.position)\n            // two-way bind updated position\n            emits(\"update:position\", position);\n    }\n    // do not set content position if not teleport enabled\n    if (!props.teleport) return;\n\n    const content = unrefElement(contentRef);\n    const trigger = unrefElement(props.trigger);\n\n    // set content position\n    if (content && trigger) {\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        let left = rect.left + window.scrollX;\n        // define vertical positioning\n        if (position.includes(\"bottom\")) {\n            top += trigger.clientHeight;\n        } else if (position.includes(\"top\")) {\n            top -= content.clientHeight;\n        }\n        // define horizontal positioning\n        if (position === \"left\") {\n            left -= content.clientWidth;\n        } else if (position === \"right\") {\n            left += trigger.clientWidth;\n        } else if (position.includes(\"-right\")) {\n            left += trigger.clientWidth - content.clientWidth;\n        }\n\n        // adjust exact vertical positioning\n        if (position === \"top\" || position === \"bottom\") {\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\n        }\n        // adjust exact horizontal positioning\n        if (position === \"left\" || position === \"right\") {\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\n        }\n\n        // set style properties\n        if (props.disablePositioning) {\n            content.style.position = \"relative\";\n            content.style.top = `${top}px`;\n            content.style.left = `${left}px`;\n        } else {\n            content.style.position = \"\";\n            content.style.top = \"\";\n            content.style.left = \"\";\n        }\n    }\n}\n\n/** calculate best position if auto */\nfunction getAutoPosition(): string {\n    let bestPosition = props.defaultPosition;\n    if (!props.trigger || !contentRef.value) return bestPosition;\n    if (!scrollingParent.value) return bestPosition;\n\n    // get viewport from container\n    const viewRect = new DOMRect(\n        scrollingParent.value.offsetLeft,\n        scrollingParent.value.offsetTop,\n        scrollingParent.value.clientWidth,\n        scrollingParent.value.clientHeight,\n    );\n\n    const contentRect = unrefElement(contentRef).getBoundingClientRect();\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\n\n    // detect auto position\n    const triggerAnchors = anchors(triggerRect);\n    const contentAnchors = anchors(contentRect);\n    const contentRectAtAnchor = (pos: Position) => {\n        const triggerAnchor = triggerAnchors[pos];\n        const contentAnchor = contentAnchors[opposites[pos]];\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\n        // That offset should be small, and it's tricky to get it from the CSS.\n        return new DOMRect(\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\n            contentRect.width,\n            contentRect.height,\n        );\n    };\n\n    const defaultOpposite = opposites[props.defaultPosition];\n    const crossPosition =\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\n            ? \"left\"\n            : \"top\";\n    const crossOpposite = opposites[crossPosition];\n    // In descending order of priority\n    const positions: Position[] = [\n        props.defaultPosition,\n        defaultOpposite,\n        crossPosition,\n        crossOpposite,\n    ];\n    let maxOverlap = 0;\n    for (const position of positions) {\n        const overlap = intersectionArea(\n            viewRect,\n            contentRectAtAnchor(position),\n        );\n        if (overlap > maxOverlap) {\n            maxOverlap = overlap;\n            bestPosition = position;\n        }\n    }\n    return bestPosition;\n}\n\n// --- Helper Functions ---\n\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\n    const left = Math.max(a.left, b.left);\n    const right = Math.min(a.right, b.right);\n    const top = Math.max(a.top, b.top);\n    const bottom = Math.min(a.bottom, b.bottom);\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\n}\n\n/**\n * @param rect the bounding rectangle of the trigger element\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\n */\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\n});\n</script>\n\n<template>\n    <Teleport :to=\"teleportTo\" :disabled=\"teleportDisabled\">\n        <template v-if=\"teleportDisabled\">\n            <slot :set-content=\"setContent\" />\n        </template>\n        <template v-else>\n            <div\n                v-bind=\"$attrs\"\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\n                <slot :set-content=\"setContent\" />\n            </div>\n        </template>\n    </Teleport>\n</template>\n","const findFocusable = (element: any, programmatic = false) => {\n    if (!element) return null;\n    if (programmatic) return element.querySelectorAll(`*[tabindex=\"-1\"]`);\n\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                     area[href],\n                                     input:not([disabled]),\n                                     select:not([disabled]),\n                                     textarea:not([disabled]),\n                                     button:not([disabled]),\n                                     iframe,\n                                     object,\n                                     embed,\n                                     *[tabindex]:not([tabindex=\"-1\"]),\n                                     *[contenteditable]`);\n};\n\nlet onKeyDown: any;\n\nconst bind = (el: any, { value = true }) => {\n    if (value) {\n        let focusable = findFocusable(el);\n        let focusableProg = findFocusable(el, true);\n\n        if (focusable && focusable.length > 0) {\n            onKeyDown = (event: any) => {\n                // Need to get focusable each time since it can change between key events\n                // ex. changing month in a datepicker\n                focusable = findFocusable(el);\n                focusableProg = findFocusable(el, true);\n                const firstFocusable = focusable[0];\n                const lastFocusable = focusable[focusable.length - 1];\n\n                if (\n                    event.target === firstFocusable &&\n                    event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    lastFocusable.focus();\n                } else if (\n                    (event.target === lastFocusable ||\n                        Array.from(focusableProg).indexOf(event.target) >= 0) &&\n                    !event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    firstFocusable.focus();\n                }\n            };\n            el.addEventListener(\"keydown\", onKeyDown);\n        }\n    }\n};\n\nconst unbind = (el: any) => {\n    el.removeEventListener(\"keydown\", onKeyDown);\n};\n\nconst directive = {\n    beforeMount: bind,\n    beforeUnmount: unbind,\n};\n\nexport default directive;\n\nexport const vTrapFocus = directive; // export composition api directive\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    onUnmounted,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { toCssDimension, isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useProviderParent,\n    useMatchMedia,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content\n * @displayName Dropdown\n * @requires ./DropdownItem.vue\n * @style _dropdown.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdown\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Trigger label, unnecessary when trgger slot is used */\n    label: { type: String, default: undefined },\n    /** Dropdown is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Dropdown content (items) are shown inline, trigger is removed */\n    inline: { type: Boolean, default: false },\n    /** Dropdown content will be scrollable */\n    scrollable: { type: Boolean, default: false },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"dropdown.maxHeight\", 200),\n    },\n    /**\n     * Position of the dropdown relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"dropdown.position\", \"bottom-left\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.mobileModal\", true),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"dropdown.animation\", \"fade\"),\n    },\n    /** Allows multiple selections */\n    multiple: { type: Boolean, default: false },\n    /** Trap focus inside the dropdown. */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.trapFocus\", true),\n    },\n    /** Makes the component check if menu reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.checkScroll\", false),\n    },\n    /** Dropdown will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** HTML element ID of the dropdown menu element */\n    menuId: { type: String, default: null },\n    /** Tabindex of the dropdown menu element */\n    menuTabindex: { type: Number, default: null },\n    /** Dropdown menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.menuTag\", \"div\"),\n    },\n    /** Dropdown trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"dropdown.triggerTag\", \"div\"),\n    },\n    /**\n     * Dropdown will be triggered by any events\n     * @values click, hover, contextmenu, focus\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"dropdown.triggers\", [\"click\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Dropdown delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Dropdown close options (pressing escape, clicking the content or outside)\n     * @values true, false, escape, outside, content\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"dropdown.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /** Set the tabindex attribute on the dropdown trigger div (-1 to prevent selection via tab key) */\n    tabindex: { type: Number, default: 0 },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, listbox, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.ariaRole\", \"list\"),\n        validator: (value: string) =>\n            [\"list\", \"listbox\", \"menu\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"dropdown.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when inline */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the overlay when on mobile */\n    menuMobileOverlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown menu */\n    menuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu position */\n    menuPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when active */\n    menuActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating position of dropdown */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating whether the dropdown is open */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when the dropdown is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {[String, Number, Boolean, Object, Array]} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: [string, number, boolean, object, Array<any>],\n    ): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on change event - fired after modelValue:update\n     * @param value {any} selected value\n     */\n    (e: \"change\", value: any): void;\n    /**\n     * on close event\n     * @param method {string} close method\n     */\n    (e: \"close\", method: string): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst vmodel = defineModel<any>();\n\nconst isActive = defineModel<boolean>(\"active\");\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n// check if mobile modal should be shown\nconst isMobileModal = computed(\n    () => isMobile.value && props.mobileModal && !props.inline,\n);\n\n// check if client is mobile native\nconst isMobileNative = computed(() => props.mobileModal && isMobileAgent.any());\n\nconst menuStyle = computed(() => ({\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\n    overflow: props.scrollable ? \"auto\" : null,\n}));\n\nconst hoverable = computed(() => props.triggers.indexOf(\"hover\") >= 0);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement | Component>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = [];\nlet timer: NodeJS.Timeout;\n\nwatch(\n    isActive,\n    (value) => {\n        // on active set event handler\n        if (value && isClient) {\n            setTimeout(() => {\n                if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                    // set outside handler\n                    eventCleanups.push(\n                        useClickOutside(contentRef, onClickedOutside, [\n                            triggerRef,\n                        ]),\n                    );\n                }\n\n                if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                    // set keyup handler\n                    eventCleanups.push(\n                        useEventListener(\"keyup\", onKeyPress, document, {\n                            immediate: true,\n                        }),\n                    );\n                }\n            });\n        } else if (!value) {\n            // on close cleanup event handler\n            eventCleanups.forEach((fn) => fn());\n            eventCleanups.length = 0;\n        }\n    },\n    { immediate: true },\n);\n\nonUnmounted(() => {\n    // on close cleanup event handler\n    eventCleanups.forEach((fn) => fn());\n    eventCleanups.length = 0;\n});\n\nconst cancelOptions = computed(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close dropdown if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.inline) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    emits(\"close\", \"outside\");\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        emits(\"close\", \"escape\");\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    toggle();\n}\n\nfunction onContextMenu(event: MouseEvent): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nconst isHovered = ref(false);\nfunction onHover(): void {\n    if (!isMobileNative.value && props.triggers.indexOf(\"hover\") >= 0) {\n        isHovered.value = true;\n        open();\n    }\n}\nfunction onHoverLeave(): void {\n    if (!isMobileNative.value && isHovered.value) {\n        isHovered.value = false;\n        onClose();\n    }\n}\n\n/** Toggle dropdown if it's not disabled. */\nfunction toggle(): void {\n    if (props.disabled) return;\n    if (isActive.value) isActive.value = !isActive.value;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    else nextTick(() => (isActive.value = !isActive.value));\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer = setTimeout(() => {\n            isActive.value = true;\n            timer = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    emits(\"close\", \"content\");\n    isActive.value = !props.closeable;\n    if (timer && props.closeable) clearTimeout(timer);\n}\n\n// --- InfitiveScroll Feature ---\n\nif (isClient && props.checkScroll)\n    useEventListener(\"scroll\", checkDropdownScroll, contentRef);\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = unrefElement(contentRef);\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= 0) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Dependency Injection Feature ---\n\n/**\n * Click listener from DropdownItem.\n *   1. Set new selected item.\n *   2. Emit input event to update the user v-model.\n *   3. Close the dropdown.\n */\nfunction selectItem(value: any): void {\n    if (props.multiple) {\n        if (vmodel.value && Array.isArray(vmodel.value)) {\n            if (vmodel.value.indexOf(value) === -1) {\n                // add a value\n                vmodel.value = [...vmodel.value, value];\n            } else {\n                // remove a value\n                vmodel.value = vmodel.value.filter((val) => val !== value);\n            }\n        } else {\n            // init new value array\n            vmodel.value = [value];\n        }\n        // emit change after vmodel has changed\n        nextTick(() => emits(\"change\", vmodel.value));\n    } else {\n        if (vmodel.value !== value) {\n            // update a single value\n            vmodel.value = value;\n            // emit change after vmodel has changed\n            nextTick(() => emits(\"change\", vmodel.value));\n        }\n    }\n    if (!props.multiple) {\n        if (cancelOptions.value.indexOf(\"content\") < 0) return;\n        emits(\"close\", \"content\");\n        isActive.value = false;\n        isHovered.value = false;\n    }\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<DropdownComponent>(() => ({\n    props,\n    selected: vmodel.value,\n    selectItem,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(contentRef, { data: provideData });\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-drop\"],\n    [\"disabledClass\", \"o-drop--disabled\", null, computed(() => props.disabled)],\n    [\"expandedClass\", \"o-drop--expanded\", null, computed(() => props.expanded)],\n    [\"inlineClass\", \"o-drop--inline\", null, computed(() => props.inline)],\n    [\n        \"mobileClass\",\n        \"o-drop--mobile\",\n        null,\n        computed(() => isMobileModal.value && !hoverable.value),\n    ],\n    [\n        \"positionClass\",\n        \"o-drop--position-\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"activeClass\",\n        \"o-drop--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n    [\"hoverableClass\", \"o-drop--hoverable\", null, hoverable],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-drop__trigger\"]);\n\nconst positionWrapperClasses = defineClasses([\n    \"teleportClass\",\n    \"o-drop--teleport\",\n    null,\n    computed(() => !!props.teleport),\n]);\n\nconst menuMobileOverlayClasses = defineClasses([\n    \"menuMobileOverlayClass\",\n    \"o-drop__overlay\",\n]);\n\nconst menuClasses = defineClasses(\n    [\"menuClass\", \"o-drop__menu\"],\n    [\n        \"menuPositionClass\",\n        \"o-drop__menu--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"menuActiveClass\",\n        \"o-drop__menu--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ $trigger: triggerRef, $content: contentRef });\n</script>\n\n<template>\n    <div\n        data-oruga=\"dropdown\"\n        :class=\"rootClasses\"\n        @mouseleave=\"onHoverLeave\"\n        @focusout=\"onHoverLeave\">\n        <component\n            :is=\"triggerTag\"\n            v-if=\"!inline\"\n            ref=\"triggerRef\"\n            :tabindex=\"disabled ? null : tabindex\"\n            :class=\"triggerClasses\"\n            :aria-haspopup=\"ariaRole === 'list' ? true : ariaRole\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\">\n            <!--\n                @slot Override the trigger element, default is label prop\n                @binding {boolean} active - dropdown active state\n            -->\n            <slot name=\"trigger\" :active=\"isActive\">\n                {{ label }}\n            </slot>\n        </component>\n\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"[...rootClasses, ...positionWrapperClasses]\"\n            :trigger=\"triggerRef\"\n            :disabled=\"!isActive\"\n            default-position=\"bottom\"\n            :disable-positioning=\"!isMobileModal\">\n            <transition :name=\"animation\">\n                <div\n                    v-if=\"isMobileModal\"\n                    v-show=\"isActive\"\n                    :tabindex=\"-1\"\n                    :class=\"menuMobileOverlayClasses\"\n                    :aria-hidden=\"disabled || !isActive\" />\n            </transition>\n\n            <transition :name=\"animation\">\n                <component\n                    :is=\"menuTag\"\n                    v-show=\"(!disabled && (isActive || isHovered)) || inline\"\n                    :id=\"menuId\"\n                    :ref=\"(el) => (contentRef = setContent(el))\"\n                    v-trap-focus=\"trapFocus\"\n                    :tabindex=\"menuTabindex\"\n                    :class=\"menuClasses\"\n                    :style=\"menuStyle\"\n                    :role=\"ariaRole\"\n                    :aria-hidden=\"disabled || !isActive\"\n                    :aria-modal=\"!inline && trapFocus\">\n                    <!--\n                        @slot Place dropdown items here\n                        @binding {boolean} active - dropdown active state\n                        @binding {boolean} toggle - toggle active state function\n                    -->\n                    <slot :active=\"isActive\" :toggle=\"toggle\" />\n                </component>\n            </transition>\n        </PositionWrapper>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid, isEqual } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Dropdown Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdownItem\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** The value that will be returned on events and v-model - default is a uuid */\n    value: {\n        type: [String, Number, Boolean, Object, Array] as PropType<T>,\n        default: undefined, // () => uuid(),\n    },\n    /** Item label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Item is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Item is clickable and emit an event */\n    clickable: { type: Boolean, default: true },\n    /** Dropdown item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.itemTag\", \"div\"),\n    },\n    /** Set the tabindex attribute on the dropdown item div (-1 to prevent selection via tab key) */\n    tabindex: { type: [Number, String], default: 0 },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * Use menuitem only in situations where your dropdown is related to a navigation menu.\n     * @values listitem, menuitem, button\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.itemAriaRole\", \"listitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the dropdown item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when active  */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when disabled */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * onclick event\n     * @param value {[String, Number, Boolean, Object, Array]} value prop data\n     * @param event {event} Native Event\n     */\n    (e: \"click\", value: T, event: Event): void;\n}>();\n\nconst itemValue = computed(() => (props.value || uuid()) as T);\n\n// Inject functionalities and data from the parent component\nconst { parent } = useProviderChild<DropdownComponent<T>>();\n\nconst isClickable = computed(\n    () => !parent.value.props.disabled && !props.disabled && props.clickable,\n);\n\nconst isActive = computed(() => {\n    if (parent.value.selected === null) return false;\n    if (parent.value.props.multiple && Array.isArray(parent.value.selected))\n        return parent.value.selected.some((selected) =>\n            isEqual(itemValue.value, selected),\n        );\n    return isEqual(itemValue.value, parent.value.selected);\n});\n\n/** Click listener, select the item. */\nfunction selectItem(event: Event): void {\n    if (!isClickable.value) return;\n    parent.value.selectItem(itemValue.value);\n    emits(\"click\", itemValue.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"itemClass\", \"o-drop__item\"],\n    [\n        \"itemDisabledClass\",\n        \"o-drop__item--disabled\",\n        null,\n        computed(() => parent.value.props.disabled || props.disabled),\n    ],\n    [\"itemActiveClass\", \"o-drop__item--active\", null, isActive],\n    [\"itemClickableClass\", \"o-drop__item--clickable\", null, isClickable],\n);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        :class=\"rootClasses\"\n        :role=\"ariaRole\"\n        :tabindex=\"tabindex\"\n        data-oruga=\"dropdown-item\"\n        @click=\"selectItem\">\n        <!--\n            @slot Override the label, default is label prop \n        -->\n        <slot>{{ label }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    watchEffect,\n    useAttrs,\n    toRaw,\n    onMounted,\n    useSlots,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport OInput from \"../input/Input.vue\";\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath, uuid } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useInputHandler,\n    useDebounce,\n    useEventListener,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent, ClassBind } from \"@/types\";\n\nenum SpecialOption {\n    Header,\n    Footer,\n}\n\n/** True if the specified option is a special option. */\nfunction isSpecialOption(option: any): option is SpecialOption {\n    return option in SpecialOption;\n}\n\n/**\n * Extended input that provide suggestions while the user types\n * @displayName Autocomplete\n * @style _autocomplete.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OAutocomplete\",\n    configField: \"autocomplete\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /** Input type */\n    type: { type: String, default: \"text\" },\n    /** Menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.menuTag\", \"div\"),\n    },\n    /** Menu item tag name */\n    itemTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.itemTag\", \"div\"),\n    },\n    /** Options / suggestions */\n    data: { type: Array as PropType<T[]>, default: () => [] },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"autocomplete.size\"),\n    },\n    /**\n     * Position of the dropdown\n     * @values auto, top, bottom\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"autocomplete.position\", \"auto\"),\n        validator: (value: string) =>\n            [\"auto\", \"top\", \"bottom\"].indexOf(value) >= 0,\n    },\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\n    field: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /** Function to format an option to a string for display in the input (as alternative to field prop) */\n    formatter: {\n        type: Function as PropType<(value: unknown) => string | number>,\n        default: undefined,\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [String, Number], default: undefined },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.checkScroll\", false),\n    },\n    /** Number of milliseconds to delay before to emit input event */\n    debounce: {\n        type: Number,\n        default: () => getOption(\"autocomplete.debounce\", 400),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepFirst\", false),\n    },\n    /** Clear input text on select */\n    clearOnSelect: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearOnSelect\", false),\n    },\n    /** Open dropdown list on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.openOnFocus\", false),\n    },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"autocomplete.maxHeight\"),\n    },\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\n    confirmKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"autocomplete.confirmKeys\", [\"Tab\", \"Enter\"]),\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.mobileModal\", false),\n    },\n    /** Transition name to apply on dropdown list */\n    animation: {\n        type: String,\n        default: () => getOption(\"autocomplete.animation\", \"fade\"),\n    },\n    /** Trigger the select event for the first pre-selected option when clicking outside and `keep-first` is enabled */\n    selectOnClickOutside: { type: Boolean, default: false },\n    /** Allows the header in the autocomplete to be selectable */\n    selectableHeader: { type: Boolean, default: false },\n    /** Allows the footer in the autocomplete to be selectable */\n    selectableFooter: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"autocomplete.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"autocomplete.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"autocomplete.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"autocomplete.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items on hover */\n    itemHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items group title */\n    itemGroupTitleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu empty placeholder item */\n    itemEmptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu header item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu footer item */\n    itemFooterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Classes to apply on internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"autocomplete.inputClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     */\n    (e: \"input\", value: string | number): void;\n    /**\n     * selected element changed event\n     * @param value {string | number | object} selected value\n     */\n    (e: \"select\", value: T, evt: Event): void;\n    /**\n     * header is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-header\", event: Event): void;\n    /**\n     * footer is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-footer\", event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst slots = useSlots();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst footerRef = ref<HTMLElement>();\nconst headerRef = ref<HTMLElement>();\nconst itemRefs = ref([]);\n\nfunction setItemRef(\n    el: HTMLElement | Component,\n    groupIndex: number,\n    itemIndex: number,\n): void {\n    if (groupIndex === 0 && itemIndex === 0) itemRefs.value.splice(0);\n    if (el) itemRefs.value.push(el);\n}\n\n// use form input functionalities\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst vmodel = defineModel<string | number>({ default: undefined });\n\nconst isActive = ref(false);\n\nconst selectedOption = ref<T>();\nconst hoveredOption = ref<T>();\nconst headerHovered = ref(false);\nconst footerHovered = ref(false);\n\nconst hoveredId = ref(null);\nconst menuId = uuid();\n\n/**\n * When updating input's value\n *   1. If value isn't the same as selected, set null\n *   2. Close dropdown if value is clear or else open it\n */\nwatch(\n    () => vmodel.value,\n    (value) => {\n        // Check if selected is invalid\n        const currentValue = getValue(selectedOption.value);\n        if (currentValue && currentValue !== value) setSelected(null, false);\n\n        nextTick(() => {\n            // Close dropdown if data is empty\n            if (isEmpty.value && !slots.empty) isActive.value = false;\n            // Close dropdown if input is clear or else open it\n            else if (isFocused.value && (!props.openOnFocus || value))\n                isActive.value = !!value;\n        });\n    },\n);\n\n/** Select first option if \"keep-first\" */\nwatch(\n    () => props.data,\n    () => {\n        // Keep first option always pre-selected\n        if (props.keepFirst) {\n            nextTick(() => {\n                if (isActive.value) selectFirstOption();\n                else setHovered(null);\n            });\n        } else if (hoveredOption.value) {\n            // reset hovered if list doesn't contain it\n            const hoveredValue = getValue(hoveredOption.value);\n            const data = computedData.value\n                .map((d) => d.items)\n                .reduce((a, b) => [...a, ...b], []);\n            const index = data.findIndex((d) => getValue(d) === hoveredValue);\n            if (index >= 0) nextTick(() => setHoveredIdToIndex(index));\n            else setHovered(null);\n        }\n    },\n);\n\nconst computedData = computed<{ items: any; group?: any }[]>(() => {\n    if (props.groupField) {\n        if (props.groupOptions)\n            return props.data.map((option) => {\n                const group = getValueByPath(option, props.groupField);\n                const items = getValueByPath(option, props.groupOptions);\n                return { group, items };\n            });\n        else\n            return Object.keys(props.data).map((group) => ({\n                group,\n                items: props.data[group],\n            }));\n    }\n    // Return no data to avoid the full list to be shown when clearing input\n    if (!props.openOnFocus && !props.keepOpen && vmodel.value === \"\") {\n        // ...already returned nothing and dropdown closed.\n        return [{ items: [] }];\n    }\n    return [{ items: props.data }];\n});\n\nconst isEmpty = computed(\n    () =>\n        !computedData.value?.some(\n            (element) => element.items && element.items.length,\n        ),\n);\n\nwatch(isEmpty, (empty) => {\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\n});\n\nconst closeableOptions = computed(() => {\n    const options = [\"escape\"];\n    if (!props.keepOpen) {\n        options.push(\"content\");\n        options.push(\"outside\");\n    }\n    return options;\n});\n\nfunction onDropdownClose(method: string): void {\n    if (method === \"outside\") {\n        if (\n            props.keepFirst &&\n            hoveredOption.value &&\n            props.selectOnClickOutside\n        )\n            setSelected(hoveredOption.value, true);\n    }\n}\n\n/**\n * Return display text for a input option.\n * If object, get value from path based on given field, or else just the value.\n * Apply a formatter function to the label if given.\n */\nfunction getValue(option: T): string {\n    if (!option) return \"\";\n\n    const property =\n        props.field && typeof option === \"object\"\n            ? getValueByPath(option, props.field)\n            : option;\n\n    const label =\n        typeof props.formatter === \"function\"\n            ? props.formatter(property)\n            : property;\n\n    return label || \"\";\n}\n\n/** Set which option is currently hovered. */\nfunction setHovered(option: T | SpecialOption): void {\n    if (option === undefined) return;\n    hoveredOption.value = isSpecialOption(option) ? null : option;\n    headerHovered.value = option === SpecialOption.Header;\n    footerHovered.value = option === SpecialOption.Footer;\n    hoveredId.value = null;\n}\n\n/** Set which option is the aria-activedescendant by index. */\nfunction setHoveredIdToIndex(index: number): void {\n    const element = unrefElement(itemRefs.value[index]);\n    hoveredId.value = element ? element.id : null;\n}\n\n/**\n * Set which option is currently selected, update v-model,\n * update input value and close dropdown.\n */\nfunction setSelected(option: T, closeDropdown = true, event = undefined): void {\n    if (option === undefined) return;\n    selectedOption.value = option;\n    emits(\"select\", selectedOption.value, event);\n    if (selectedOption.value !== null) {\n        if (props.clearOnSelect) {\n            const input = inputRef.value.$el.querySelector(\"input\");\n            input.value = \"\";\n        } else {\n            vmodel.value = getValue(selectedOption.value);\n        }\n        setHovered(null);\n    }\n    if (closeDropdown) nextTick(() => (isActive.value = false));\n    checkHtml5Validity();\n}\n\n/** Select first option */\nfunction selectFirstOption(): void {\n    nextTick(() => {\n        const nonEmptyElements = computedData.value.filter(\n            (element) => element.items && element.items.length,\n        );\n        if (nonEmptyElements.length) {\n            const option = nonEmptyElements[0].items[0];\n            setHovered(option);\n            setHoveredIdToIndex(0);\n        } else {\n            setHovered(null);\n        }\n    });\n}\n\n/** Check if header or footer was selected. */\nfunction selectHeaderOrFooterByClick(\n    event: Event,\n    origin?: SpecialOption,\n    closeDropdown = true,\n): void {\n    if (\n        props.selectableHeader &&\n        (headerHovered.value || origin === SpecialOption.Header)\n    ) {\n        emits(\"select-header\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n    if (\n        props.selectableFooter &&\n        (footerHovered.value || origin === SpecialOption.Footer)\n    ) {\n        emits(\"select-footer\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n}\n\n// --- Event Handler ---\n\n/**\n * Arrows keys listener.\n * If dropdown is active, set hovered option, or else just open.\n */\nfunction navigateItem(direction: 1 | -1): void {\n    if (!isActive.value) {\n        isActive.value = true;\n        return;\n    }\n\n    const data = computedData.value\n        .map((d) => d.items)\n        .reduce((a, b) => [...a, ...b], []);\n\n    // add header / footer if selectable\n    if (headerRef.value && props.selectableHeader) data.unshift(undefined);\n    if (footerRef.value && props.selectableFooter) data.push(undefined);\n\n    // define current index\n    let index = data.map(toRaw).indexOf(toRaw(hoveredOption.value));\n    if (headerHovered.value) index = 0 + direction;\n    else if (footerHovered.value) index = data.length - 1 + direction;\n    else index = index + direction;\n\n    // check if index overflow\n    index = index > data.length - 1 ? data.length - 1 : index;\n    // check if index underflow\n    index = index < 0 ? 0 : index;\n\n    // set hover state\n    if (footerRef.value && props.selectableFooter && index === data.length - 1)\n        setHovered(SpecialOption.Footer);\n    else if (headerRef.value && props.selectableHeader && index === 0)\n        setHovered(SpecialOption.Header);\n    else setHovered(data[index] !== undefined ? data[index] : null);\n\n    // get items from input\n    let items = itemRefs.value || [];\n    if (headerRef.value && props.selectableHeader)\n        items = [headerRef.value, ...items];\n    if (footerRef.value && props.selectableFooter)\n        items = [...items, footerRef.value];\n\n    const element = unrefElement(items[index]);\n    if (!element) return;\n\n    // set aria-activedescendant\n    hoveredId.value = element.id;\n\n    // define scroll position\n    const dropdownMenu = unrefElement(dropdownRef.value.$content);\n    const visMin = dropdownMenu.scrollTop;\n    const visMax =\n        dropdownMenu.scrollTop +\n        dropdownMenu.clientHeight -\n        element.clientHeight;\n\n    if (element.offsetTop < visMin) {\n        // is scolled top\n        dropdownMenu.scrollTop = element.offsetTop;\n    } else if (element.offsetTop >= visMax) {\n        // is scolled bottom\n        dropdownMenu.scrollTop =\n            element.offsetTop -\n            dropdownMenu.clientHeight +\n            element.clientHeight;\n    }\n    // trigger scroll\n    if (props.checkScroll) checkDropdownScroll();\n}\n\n/**\n * Key listener.\n * Select the hovered option.\n */\nfunction onKeydown(event: KeyboardEvent): void {\n    // prevent emit submit event\n    if (event.key === \"Enter\") event.preventDefault();\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // If adding by comma, don't add the comma to the input\n        if (event.key === \",\") event.preventDefault();\n        // Close dropdown on select by Tab\n        const closeDropdown = !props.keepOpen || event.key === \"Tab\";\n        if (hoveredOption.value === null) {\n            // header and footer uses headerHovered && footerHovered. If header or footer\n            // was selected then fire event otherwise just return so a value isn't selected\n            selectHeaderOrFooterByClick(event, null, closeDropdown);\n            return;\n        }\n        setSelected(hoveredOption.value, closeDropdown, event);\n    }\n}\n\n/**\n * Focus listener.\n * If value is the same as selected, select all text.\n */\nfunction handleFocus(event: Event): void {\n    if (getValue(selectedOption.value) === vmodel.value) {\n        inputRef.value.$el.querySelector(\"input\").select();\n    }\n    if (props.openOnFocus) {\n        isActive.value = true;\n        if (props.keepFirst)\n            // If open on focus, update the hovered\n            selectFirstOption();\n    }\n    onFocus(event);\n}\n\n/**\n * Blur listener.\n * Close on blur.\n */\nfunction handleBlur(event: Event): void {\n    onBlur(event);\n}\n\n/** emit input change event */\nfunction onInput(value: string | number): void {\n    const currentValue = getValue(selectedOption.value);\n    if (currentValue && currentValue === vmodel.value) return;\n    debouncedInput(value);\n}\n\nlet debouncedInput = useDebounce(emitInput, props.debounce || 0);\n\nwatchEffect(() => {\n    debouncedInput = useDebounce(emitInput, props.debounce);\n});\n\nfunction emitInput(value: string | number): void {\n    emits(\"input\", value);\n    checkHtml5Validity();\n}\n\n// --- Icon Feature ---\n\nconst computedIconRight = computed(() =>\n    props.clearable && vmodel.value && props.clearIcon\n        ? props.clearIcon\n        : props.iconRight,\n);\n\nconst computedIconRightClickable = computed(() =>\n    props.clearable ? true : props.iconRightClickable,\n);\n\nfunction rightIconClick(event: Event): void {\n    if (props.clearable) {\n        vmodel.value = \"\";\n        setSelected(null, false);\n        if (props.openOnFocus) setFocus();\n    } else emits(\"icon-right-click\", event);\n}\n\n// --- InfitiveScroll Feature ---\n\nonMounted(() => {\n    if (isClient && props.checkScroll)\n        useEventListener(\n            \"scroll\",\n            checkDropdownScroll,\n            dropdownRef.value.$content,\n            { immediate: true },\n        );\n});\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = unrefElement(dropdownRef.value.$content);\n    if (!dropdown) return;\n    const trashhold = dropdown.offsetTop;\n    const headerHeight = headerRef.value?.clientHeight || 0;\n    const footerHeight = (footerRef.value?.clientHeight || 0) + trashhold;\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight + footerHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= headerHeight) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...props.inputClasses,\n}));\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-acp\"]);\n\nconst itemClasses = defineClasses([\"itemClass\", \"o-acp__item\"]);\n\nconst itemEmptyClasses = defineClasses([\n    \"itemEmptyClass\",\n    \"o-acp__item--empty\",\n]);\n\nconst itemGroupClasses = defineClasses([\n    \"itemGroupTitleClass\",\n    \"o-acp__item-group-title\",\n]);\n\nconst itemHeaderClasses = defineClasses(\n    [\"itemHeaderClass\", \"o-acp__item-header\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, headerHovered],\n);\n\nconst itemFooterClasses = defineClasses(\n    [\"itemFooterClass\", \"o-acp__item-footer\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, footerHovered],\n);\n\nfunction itemOptionClasses(option): ClassBind[] {\n    const optionClasses = defineClasses([\n        \"itemHoverClass\",\n        \"o-acp__item--hover\",\n        null,\n        toRaw(option) === toRaw(hoveredOption.value),\n    ]);\n\n    return [...itemClasses.value, ...optionClasses.value];\n}\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-dropdown\n        ref=\"dropdownRef\"\n        v-model=\"selectedOption\"\n        v-model:active=\"isActive\"\n        data-oruga=\"autocomplete\"\n        :class=\"rootClasses\"\n        :menu-id=\"menuId\"\n        :menu-tabindex=\"-1\"\n        :menu-tag=\"menuTag\"\n        scrollable\n        aria-role=\"listbox\"\n        :tabindex=\"-1\"\n        :trap-focus=\"false\"\n        :triggers=\"[]\"\n        :disabled=\"disabled\"\n        :closeable=\"closeableOptions\"\n        :mobile-modal=\"mobileModal\"\n        :max-height=\"maxHeight\"\n        :animation=\"animation\"\n        :position=\"position\"\n        :teleport=\"teleport\"\n        :expanded=\"expanded\"\n        @close=\"onDropdownClose\">\n        <template #trigger>\n            <o-input\n                ref=\"inputRef\"\n                v-bind=\"inputBind\"\n                v-model=\"vmodel\"\n                :type=\"type\"\n                :size=\"size\"\n                :rounded=\"rounded\"\n                :icon=\"icon\"\n                :icon-right=\"computedIconRight\"\n                :icon-right-clickable=\"computedIconRightClickable\"\n                :icon-pack=\"iconPack\"\n                :placeholder=\"placeholder\"\n                :maxlength=\"maxlength\"\n                :autocomplete=\"autocomplete\"\n                :use-html5-validation=\"false\"\n                role=\"combobox\"\n                :aria-activedescendant=\"hoveredId\"\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\n                :aria-controls=\"menuId\"\n                :aria-expanded=\"isActive\"\n                :expanded=\"expanded\"\n                :disabled=\"disabled\"\n                :status-icon=\"statusIcon\"\n                @update:model-value=\"onInput\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @keydown.up.prevent=\"navigateItem(-1)\"\n                @keydown.down.prevent=\"navigateItem(1)\"\n                @icon-click=\"(event) => $emit('icon-click', event)\"\n                @icon-right-click=\"rightIconClick\" />\n        </template>\n\n        <o-dropdown-item\n            v-if=\"$slots.header\"\n            :id=\"`${menuId}-header`\"\n            ref=\"headerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"headerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemHeaderClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Header)\n            \">\n            <!--\n                @slot Define an additional header\n            -->\n            <slot name=\"header\" />\n        </o-dropdown-item>\n\n        <template v-for=\"(element, groupindex) in computedData\">\n            <o-dropdown-item\n                v-if=\"element.group\"\n                :key=\"groupindex + 'group'\"\n                :tag=\"itemTag\"\n                :tabindex=\"-1\"\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\n                <!--\n                    @slot Override the option grpup\n                    @binding {object} group - options group\n                    @binding {number} index - option index\n                -->\n                <slot\n                    v-if=\"$slots.group\"\n                    name=\"group\"\n                    :group=\"element.group\"\n                    :index=\"groupindex\" />\n                <span v-else>\n                    {{ element.group }}\n                </span>\n            </o-dropdown-item>\n\n            <o-dropdown-item\n                v-for=\"(option, index) in element.items\"\n                :id=\"`${menuId}-${groupindex}-${index}`\"\n                :key=\"groupindex + ':' + index\"\n                :ref=\"(el) => setItemRef(el, groupindex, index)\"\n                :value=\"option\"\n                :tag=\"itemTag\"\n                :class=\"itemOptionClasses(option)\"\n                aria-role=\"option\"\n                :aria-selected=\"toRaw(option) === toRaw(hoveredOption)\"\n                :tabindex=\"-1\"\n                @click=\"\n                    (value, event) => setSelected(value as T, !keepOpen, event)\n                \">\n                <!--\n                    @slot Override the select option\n                    @binding {object} option - option object\n                    @binding {number} index - option index\n                    @binding {unknown} value - option value\n                -->\n                <slot\n                    v-if=\"$slots.default\"\n                    :option=\"option\"\n                    :value=\"getValue(option)\"\n                    :index=\"index\" />\n                <span v-else>\n                    {{ getValue(option) }}\n                </span>\n            </o-dropdown-item>\n        </template>\n\n        <o-dropdown-item\n            v-if=\"isEmpty && $slots.empty\"\n            :tag=\"itemTag\"\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\n            <!--\n                @slot Define content for empty state\n            -->\n            <slot name=\"empty\" />\n        </o-dropdown-item>\n\n        <o-dropdown-item\n            v-if=\"$slots.footer\"\n            :id=\"`${menuId}-footer`\"\n            ref=\"footerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"footerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemFooterClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Footer)\n            \">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </o-dropdown-item>\n    </o-dropdown>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Autocomplete from \"./Autocomplete.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export autocomplete plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Autocomplete);\n    },\n} as Plugin;\n\n/** export autocomplete components */\nexport { Autocomplete as OAutocomplete };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * The classic button, in different colors, sizes, and states\n * @displayName Button\n * @style _button.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OButton\",\n    configField: \"button\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Button tag name\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\n     */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\n    },\n    /**\n     * Color variant of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"button.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"button.size\"),\n    },\n    /** Button label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n\n    iconPack: {\n        type: String,\n        default: () => getOption(\"button.iconPack\", undefined),\n    },\n    /** Icon name to show on the left */\n    iconLeft: { type: String, default: undefined },\n    /** Icon name to show on the right */\n    iconRight: { type: String, default: undefined },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"button.rounded\", false),\n    },\n    /** Button will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Button will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Enable outlined style */\n    outlined: { type: Boolean, default: false },\n    /** Enable loading style */\n    loading: { type: Boolean, default: false },\n    /** Enable inverted style */\n    inverted: { type: Boolean, default: false },\n    /** Button type, like native */\n    nativeType: {\n        type: String,\n        default: \"button\",\n        validator: (value: string) =>\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\n    },\n    /** Accessibility Role attribute to be passed to the button. */\n    role: {\n        type: String,\n        default: () => getOption(\"button.role\", \"button\"),\n    },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    iconBoth: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button elements wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when outlined */\n    outlinedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button with loading */\n    loadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when inverted */\n    invertedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the left */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the right */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst computedTag = computed(() =>\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\n        ? \"button\"\n        : props.tag,\n);\n\nconst computedNativeType = computed(() =>\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\n);\n\nconst computedDisabled = computed(() => (props.disabled ? true : null));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-btn\"],\n    [\n        \"sizeClass\",\n        \"o-btn--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-btn--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined\",\n        null,\n        computed(() => props.outlined && !props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted\",\n        null,\n        computed(() => props.inverted && !props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined-\",\n        computed(() => props.variant),\n        computed(() => props.outlined && !!props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted-\",\n        computed(() => props.variant),\n        computed(() => props.inverted && !!props.variant),\n    ],\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\n</script>\n\n<template>\n    <component\n        :is=\"computedTag\"\n        :disabled=\"computedDisabled\"\n        :type=\"computedNativeType\"\n        :class=\"rootClasses\"\n        :role=\"role\"\n        data-oruga=\"button\">\n        <span :class=\"wrapperClasses\">\n            <o-icon\n                v-if=\"iconLeft\"\n                :pack=\"iconPack\"\n                :icon=\"iconLeft\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label, default is label prop \n                -->\n                <slot>{{ label }}</slot>\n            </span>\n            <o-icon\n                v-if=\"iconRight\"\n                :pack=\"iconPack\"\n                :icon=\"iconRight\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\n        </span>\n    </component>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Button from \"./Button.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export button plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Button);\n    },\n} as Plugin;\n\n/** export button components */\nexport { Button as OButton };\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    onBeforeUnmount,\n    onMounted,\n    ref,\n    nextTick,\n    readonly,\n    toRaw,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useEventListener,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * A Slideshow for cycling images in confined spaces\n * @displayName Carousel\n * @requires ./CarouselItem.vue\n * @style _carousel.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarousel\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Number, default: 0 },\n    /** Enable drag mode */\n    dragable: { type: Boolean, default: true },\n    /** Timer interval for `autoplay` */\n    interval: {\n        type: Number,\n        default: () => getOption(\"carousel.interval\", 3500),\n    },\n    /** Move item automaticalls after `interval` */\n    autoplay: { type: Boolean, default: false },\n    /** Pause autoplay on hover */\n    pauseHover: { type: Boolean, default: false },\n    /** Repeat from the beginning after reaching the end */\n    repeat: { type: Boolean, default: false },\n    /** Show an overlay */\n    overlay: { type: Boolean, default: false },\n    /** Enable indicators */\n    indicators: { type: Boolean, default: true },\n    /** Place indicators inside the carousel */\n    indicatorInside: { type: Boolean, default: false },\n    /**\n     * Indicator interaction mode\n     * @values click, hover\n     */\n    indicatorMode: {\n        type: String,\n        default: \"click\",\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\n    },\n    /** Position of the indicator - depends on used theme */\n    indicatorPosition: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\n    },\n    /** Style of the indicator - depends on used theme */\n    indicatorStyle: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\n    },\n    /** Number of items to show at once*/\n    itemsToShow: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToShow\", 1),\n    },\n    /** Number of items to switch at once */\n    itemsToList: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToList\", 1),\n    },\n    /** Show next / prev arrows */\n    arrows: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrows\", true),\n    },\n    /** Show next / prev arrows only on hover */\n    arrowsHover: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrowsHover\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"carousel.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"carousel.iconSize\"),\n    },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\n    },\n    /** Define these props for different screen sizes */\n    breakpoints: {\n        type: Object as PropType<Record<number, any>>,\n        default: () => ({}),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element in overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element of carousel items */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items */\n    itemsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items on drag */\n    itemsDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of arrow elements */\n    arrowIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of prev arrow element */\n    arrowIconPrevClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of next arrow element */\n    arrowIconNextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator link element */\n    indicatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element */\n    indicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside */\n    indicatorsInsideClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside and position */\n    indicatorsInsidePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator item element */\n    indicatorItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element when is active */\n    indicatorItemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element to separate different styles */\n    indicatorItemStyleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number): void;\n    /**\n     * on carousel scroll event\n     * @param value {number} scroll index\n     */\n    (e: \"scroll\", value: number): void;\n    /**\n     * on item click event\n     * @param event {event} native event\n     */\n    (e: \"click\", event: Event): void;\n}>();\n\nconst rootRef = ref();\n\nfunction restartTimer(): void {\n    pauseTimer();\n    startTimer();\n}\n\nconst provideData = computed<CarouselComponent>(() => ({\n    restartTimer,\n    itemWidth: itemWidth.value,\n    activeIndex: scrollIndex.value,\n    onClick: (event: Event): void => emits(\"click\", event),\n    setActive: (index: number): void => switchTo(index),\n}));\n\n/** Provide functionalities and data to child item components */\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\n\nconst activeIndex = useVModelBinding<number>(props, emits);\nconst scrollIndex = ref(props.modelValue);\n\nconst resizeObserver = ref(null);\nconst windowWidth = ref(0);\n\nconst refresh_ = ref(0);\n\n/** When v-model is changed switch to the new active item. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value <= childItems.value.length - 1)\n            switchTo(value * settings.value.itemsToList, true);\n    },\n);\n\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\n\nonMounted(() => {\n    if (isClient) {\n        if (window.ResizeObserver) {\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\n            resizeObserver.value.observe(rootRef.value);\n        }\n        onResized();\n        startTimer();\n    }\n});\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\n        dragEnd();\n        pauseTimer();\n    }\n});\n\n// add dom event handler\nif (isClient) {\n    useEventListener(\"resize\", onResized, window);\n    useEventListener(\"animationend\", onRefresh);\n    useEventListener(\"transitionend\", onRefresh);\n    useEventListener(\"transitionstart\", onRefresh);\n}\n\nfunction onResized(): void {\n    windowWidth.value = window.innerWidth;\n}\n\nfunction onRefresh(): void {\n    nextTick(() => refresh_.value++);\n}\n\nconst settings = computed<typeof props>(() => {\n    const breakpoints = Object.keys(props.breakpoints)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n    const breakpoint = breakpoints.filter(\n        (breakpoint) => windowWidth.value >= breakpoint,\n    )[0];\n\n    const settings = toRaw(\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\n    );\n\n    // prevent empty values\n    if (!settings.itemsToList) settings.itemsToList = 1;\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\n    return readonly(settings);\n});\n\nconst itemWidth = computed(() => {\n    // Ensure component is mounted\n    if (!windowWidth.value) return 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\n\n    const rect = rootRef.value.getBoundingClientRect();\n    return rect.width / settings.value.itemsToShow;\n});\n\nconst translation = computed(\n    () =>\n        -bound(\n            delta.value + scrollIndex.value * itemWidth.value,\n            0,\n            (childItems.value.length - settings.value.itemsToShow) *\n                itemWidth.value,\n        ),\n);\n\nconst total = computed(() => childItems.value.length);\n\nconst indicatorCount = computed(() =>\n    Math.ceil(total.value / settings.value.itemsToList),\n);\n\nconst indicatorIndex = computed(() =>\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\n);\n\nconst hasArrows = computed(\n    () =>\n        (settings.value.arrowsHover && isHovered.value) ||\n        !settings.value.arrowsHover,\n);\n\nconst hasPrev = computed(\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\n);\n\nfunction onPrev(): void {\n    switchTo(scrollIndex.value - settings.value.itemsToList);\n}\n\nconst hasNext = computed(\n    () =>\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\n        hasArrows.value,\n);\n\nfunction onNext(): void {\n    switchTo(scrollIndex.value + settings.value.itemsToList);\n}\n\nfunction switchTo(index: number, onlyMove?: boolean): void {\n    if (settings.value.repeat) index = mod(index, total.value);\n\n    index = bound(index, 0, total.value);\n    scrollIndex.value = index;\n    emits(\"scroll\", indicatorIndex.value);\n\n    if (!onlyMove)\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\n}\n\nfunction onModeChange(trigger: string, index: number): void {\n    if (props.indicatorMode === trigger)\n        switchTo(index * settings.value.itemsToList);\n}\n\n// --- Autoplay Feature ---\n\nconst isHovered = ref(false);\nconst isPaused = ref(false);\nconst timer = ref(null);\n\nfunction onMouseEnter(): void {\n    isHovered.value = true;\n    checkPause();\n}\n\nfunction onMouseLeave(): void {\n    isHovered.value = false;\n    startTimer();\n}\n\n/** When autoplay is changed, start or pause timer accordingly */\nwatch(\n    () => props.autoplay,\n    (status) => {\n        if (status) startTimer();\n        else pauseTimer();\n    },\n);\n\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\nwatch(\n    () => props.repeat,\n    (status) => {\n        if (status) startTimer();\n    },\n);\n\nfunction startTimer(): void {\n    if (!props.autoplay || timer.value) return;\n    isPaused.value = false;\n    timer.value = setInterval(() => {\n        if (!props.repeat && !hasNext.value) pauseTimer();\n        else onNext();\n    }, props.interval);\n}\n\nfunction pauseTimer(): void {\n    isPaused.value = true;\n    if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n    }\n}\n\nfunction checkPause(): void {\n    if (props.pauseHover && props.autoplay) pauseTimer();\n}\n\n// --- Drag & Drop Feature ---\n\nconst isTouch = ref(false);\nconst dragX = ref();\nconst hold = ref(0);\nconst delta = ref(0);\n\nconst isDragging = computed(() => isDefined(dragX.value));\n\n/** handle drag event */\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\n    if (\n        isDragging.value ||\n        !settings.value.dragable ||\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\n    )\n        return;\n    hold.value = Date.now();\n    isTouch.value = !!(event as TouchEvent).touches;\n    dragX.value = isTouch.value\n        ? (event as TouchEvent).touches[0].clientX\n        : (event as MouseEvent).clientX;\n    if (isTouch.value) {\n        pauseTimer();\n    }\n    if (isClient) {\n        window.addEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.addEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\nfunction dragMove(event: TouchEvent | MouseEvent): void {\n    if (!isDragging.value) return;\n    const dragEndX = (event as TouchEvent).touches\n        ? (\n              (event as TouchEvent).changedTouches[0] ||\n              (event as TouchEvent).touches[0]\n          ).clientX\n        : (event as MouseEvent).clientX;\n    delta.value = dragX.value - dragEndX;\n    // prevent event if not touch event\n    if (!(event as TouchEvent).touches) event.preventDefault();\n}\n\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\n    if (!isDragging.value && !hold.value) return;\n    if (hold.value) {\n        const signCheck = sign(delta.value);\n        const results = Math.round(\n            Math.abs(delta.value / itemWidth.value) + 0.15,\n        ); // Hack\n        switchTo(scrollIndex.value + signCheck * results);\n    }\n    delta.value = 0;\n    dragX.value = undefined;\n    if ((event as TouchEvent)?.touches) startTimer();\n\n    if (isClient) {\n        window.removeEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.removeEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-car\"],\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\n\nconst itemsClasses = defineClasses(\n    [\"itemsClass\", \"o-car__items\"],\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\n);\n\nconst arrowIconClasses = defineClasses([\n    \"arrowIconClass\",\n    \"o-car__arrow__icon\",\n]);\n\nconst arrowIconPrevClasses = defineClasses([\n    \"arrowIconPrevClass\",\n    \"o-car__arrow__icon-prev\",\n]);\n\nconst arrowIconNextClasses = defineClasses([\n    \"arrowIconNextClass\",\n    \"o-car__arrow__icon-next\",\n]);\n\nfunction indicatorItemClasses(index): ClassBind[] {\n    return defineClasses(\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\n        [\n            \"indicatorItemActiveClass\",\n            \"o-car__indicator__item--active\",\n            null,\n            indicatorIndex.value === index,\n        ],\n        [\n            \"indicatorItemStyleClass\",\n            \"o-car__indicator__item--\",\n            props.indicatorStyle,\n            !!props.indicatorStyle,\n        ],\n    ).value;\n}\n\nconst indicatorsClasses = defineClasses(\n    [\"indicatorsClass\", \"o-car__indicators\"],\n    [\n        \"indicatorsInsideClass\",\n        \"o-car__indicators--inside\",\n        null,\n        computed(() => !!props.indicatorInside),\n    ],\n    [\n        \"indicatorsInsidePositionClass\",\n        \"o-car__indicators--inside--\",\n        computed(() => props.indicatorPosition),\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\n    ],\n);\n\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\n</script>\n\n<template>\n    <div\n        ref=\"rootRef\"\n        :class=\"rootClasses\"\n        data-oruga=\"carousel\"\n        role=\"region\"\n        @mouseover=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @focus=\"onMouseEnter\"\n        @blur=\"onMouseLeave\"\n        @keydown.left=\"onPrev\"\n        @keydown.right=\"onNext\">\n        <div :class=\"wrapperClasses\">\n            <div\n                :class=\"itemsClasses\"\n                :style=\"'transform:translateX(' + translation + 'px)'\"\n                tabindex=\"0\"\n                role=\"group\"\n                draggable=\"true\"\n                aria-roledescription=\"carousel\"\n                @mousedown=\"onDragStart\"\n                @touchstart=\"onDragStart\">\n                <!--\n                    @slot Display carousel item\n                -->\n                <slot />\n            </div>\n            <!--\n                @slot Override the arrows\n                @binding {boolean} has-prev has prev arrow button \n                @binding {boolean} has-next has next arrow button \n                @binding {(): void} prev switch to prev item function\n                @binding {(): void} next switch to next item function\n            -->\n            <slot\n                name=\"arrow\"\n                :has-prev=\"hasPrev\"\n                :prev=\"onPrev\"\n                :has-next=\"hasNext\"\n                :next=\"onNext\">\n                <template v-if=\"arrows\">\n                    <o-icon\n                        v-show=\"hasPrev\"\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconPrev\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onPrev\"\n                        @keydown.enter=\"onPrev\" />\n                    <o-icon\n                        v-show=\"hasNext\"\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconNext\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onNext\"\n                        @keydown.enter=\"onNext\" />\n                </template>\n            </slot>\n        </div>\n\n        <!--\n            @slot Override the indicators\n            @binding {number} active active index \n            @binding {(idx: number): void} switch-to switch to item function\n            @binding {number} indicator-index current indicator index\n        -->\n        <slot\n            :active=\"activeIndex\"\n            :switch-to=\"switchTo\"\n            :indicator-index=\"indicatorIndex\"\n            name=\"indicators\">\n            <template v-if=\"childItems.length\">\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\n                    <div\n                        v-for=\"(_, index) in indicatorCount\"\n                        :key=\"index\"\n                        :class=\"indicatorClasses\"\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @focus=\"onModeChange('hover', index)\"\n                        @mouseover=\"onModeChange('hover', index)\"\n                        @click=\"onModeChange('click', index)\"\n                        @keypress.enter=\"onModeChange('click', index)\">\n                        <!--\n                            @slot Override the indicator elements\n                            @binding {index} index indicator index \n                        -->\n                        <slot :index=\"index\" name=\"indicator\">\n                            <span :class=\"indicatorItemClasses(index)\" />\n                        </slot>\n                    </div>\n                </div>\n            </template>\n        </slot>\n        <template v-if=\"overlay\">\n            <!-- @slot Overlay element -->\n            <slot name=\"overlay\" />\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A Slideshow item used by the carousel\n * @displayName Carousel Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarouselItem\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Make item clickable */\n    clickable: { type: Boolean, default: false },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of carousel item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is active */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<CarouselComponent>();\n\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\n\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\n\nfunction onClick(event: Event): void {\n    if (isActive.value) parent.value.onClick(event);\n    if (props.clickable) parent.value.setActive(item.value.index);\n}\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-car__item\"],\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\n    [\n        \"itemClickableClass\",\n        \"o-car__item--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n);\n</script>\n\n<template>\n    <div\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n        :data-id=\"`carousel-${item.identifier}`\"\n        data-oruga=\"carousel-item\"\n        :role=\"ariaRole\"\n        aria-roledescription=\"item\"\n        :aria-selected=\"isActive\"\n        @click=\"onClick\"\n        @keypress.enter=\"onClick\">\n        <!--\n            @slot Default content\n        -->\n        <slot />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Carousel from \"./Carousel.vue\";\nimport CarouselItem from \"./CarouselItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export carousel plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Carousel);\n        registerComponent(app, CarouselItem);\n    },\n} as Plugin;\n\n/** export carousel components */\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select a single or grouped options\n * @displayName Checkbox\n * @style _checkbox.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCheckbox\",\n    configField: \"checkbox\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean, Array], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"checkbox.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"checkbox.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native indeterminate */\n    indeterminate: { type: Boolean, default: false },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"checkbox.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is indeterminate */\n    indeterminateClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox labe */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean, array} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | Array<string | number | boolean>,\n    ): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean, array} input value\n     * @param event {Event} native event\n     */\n    (\n        e: \"input\",\n        value: string | number | boolean | Array<string | number | boolean>,\n        event: Event,\n    ): void;\n    /**\n     * indeterminate prop two-way binding\n     * @param value {boolean} updated indeterminate prop\n     */\n    (e: \"update:indeterminate\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | Array<string | number | boolean>\n>(props, emits, { passive: true });\n\nconst isIndeterminate = usePropBinding<boolean>(\"indeterminate\", props, emits);\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-chk\"],\n    [\"checkedClass\", \"o-chk--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-chk--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"disabledClass\", \"o-chk--disabled\", null, computed(() => props.disabled)],\n    [\n        \"variantClass\",\n        \"o-chk--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-chk__input\"],\n    [\"inputCheckedClass\", \"o-chk__input--checked\", null, isChecked],\n    [\n        \"indeterminateClass\",\n        \"o-chk__input--indeterminate\",\n        null,\n        isIndeterminate,\n    ],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-chk__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"checkbox\"\n        role=\"checkbox\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            data-oruga-input=\"checkbox\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :indeterminate.prop=\"indeterminate\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Content slot, default is label prop\n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Checkbox from \"./Checkbox.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export checkbox plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Checkbox);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Checkbox as OCheckbox };\n","<script setup lang=\"ts\">\nimport { type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An easy way to toggle what you want\n * @displayName Collapse\n * @style _collapse.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCollapse\",\n    configField: \"collapse\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\n    open: { type: Boolean, default: true },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"collapse.animation\", \"fade\"),\n    },\n    /** Id property of the content container */\n    contentId: { type: String, default: () => uuid() },\n    /**\n     * Trigger position\n     * @values top, bottom\n     */\n    position: {\n        type: String as PropType<\"top\" | \"bottom\">,\n        default: () => getOption(\"collapse.position\", \"top\"),\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * open prop two-way binding\n     * @param value {boolean} updated open prop\n     */\n    (e: \"update:open\", value: boolean): void;\n    /** on collapse opened */\n    (e: \"open\"): void;\n    /** on collapse closed */\n    (e: \"close\"): void;\n}>();\n\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\n\n/** Toggle and emit events */\nfunction toggle(): void {\n    isOpen.value = !isOpen.value;\n    isOpen.value ? emits(\"open\") : emits(\"close\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\n\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\n        <div\n            v-if=\"position === 'top'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n\n        <Transition :name=\"animation\">\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\n                <!--\n                    @slot Default content\n                -->\n                <slot />\n            </div>\n        </Transition>\n\n        <div\n            v-if=\"position === 'bottom'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Collapse from \"./Collapse.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export collapse plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Collapse);\n    },\n} as Plugin;\n\n/** export collapse components */\nexport { Collapse as OCollapse };\n","<script setup lang=\"ts\">\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { OptionsItem } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an item in a dropdown list. Use with Field to access all functionalities\n * @displayName Select\n * @style _select.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSelect\",\n    configField: \"select\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: null,\n    },\n    /** Select options, unnecessary when default slot is used */\n    options: {\n        type: Array as PropType<string[] | OptionsItem[]>,\n        default: undefined,\n    },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"select.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"select.variant\"),\n    },\n    /** Text when nothing is selected */\n    placeholder: { type: String, default: undefined },\n    /** Allow multiple selection */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native size */\n    nativeSize: { type: [String, Number], default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"select.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"select.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"select.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Same as native id. Also set the for label for o-field wrapper. */\n    id: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"select.autocomplete\", \"off\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native select element */\n    selectClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the select */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the select */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select when multiple mode is active */\n    multipleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select placeholder */\n    placeholderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant for the root element*/\n    rootVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | object | Array<any>,\n    ): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst selectRef = ref<HTMLInputElement>();\n\n// use form input functionality\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\n    useInputHandler(selectRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | object | Array<any>\n>(props, emits, { passive: true });\n\nconst placeholderVisible = computed(() => vmodel.value === null);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            checkHtml5Validity();\n        },\n        { immediate: true },\n    );\n});\n\nconst selectOptions = computed<OptionsItem[]>(() => {\n    if (!props.options || !Array.isArray(props.options)) return [];\n\n    return props.options.map((option) =>\n        typeof option === \"string\"\n            ? { value: option, label: option, key: uuid() }\n            : { ...option, key: uuid() },\n    );\n});\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(\n    () =>\n        (props.iconRight && !props.multiple) ||\n        (props.statusIcon && statusVariantIcon.value),\n);\n\nconst rightIcon = computed(() =>\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\n);\n\nconst rightIconVariant = computed(() =>\n    props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event): void {\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-ctrl-sel\"],\n    [\n        \"expandedClass\",\n        \"o-ctrl-sel--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"rootVariantClass\",\n        \"o-ctrl-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n);\n\nconst selectClasses = defineClasses(\n    [\"selectClass\", \"o-sel\"],\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\n    [\n        \"sizeClass\",\n        \"o-sel--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-sel-iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-sel-iconspace-right\",\n        null,\n        computed(() => !!props.iconRight),\n    ],\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\n    [\n        \"arrowClass\",\n        \"o-sel-arrow\",\n        null,\n        computed(() => !props.iconRight && !props.multiple),\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"select\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick('icon-click', $event)\" />\n\n        <select\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"selectRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"select\"\n            :class=\"selectClasses\"\n            :autocomplete=\"autocomplete\"\n            :multiple=\"multiple\"\n            :size=\"nativeSize\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\">\n            <template v-if=\"placeholder || $slots.placeholder\">\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\n                    <!--\n                        @slot Override the placeholder\n                    -->\n                    <slot name=\"placeholder\">\n                        {{ placeholder }}\n                    </slot>\n                </option>\n            </template>\n\n            <!--\n                @slot Override the options, default is options prop\n            -->\n            <slot>\n                <option\n                    v-for=\"option in selectOptions\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    v-bind=\"option.attrs\">\n                    {{ option.label }}\n                </option>\n            </slot>\n        </select>\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"iconRightClickable\"\n            :icon=\"rightIcon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"rightIconVariant\"\n            both\n            @click=\"rightIconClick\" />\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, useAttrs, type PropType, ref, watch, nextTick } from \"vue\";\n\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    getActiveClasses,\n    useEventListener,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ClassBind, ComponentClass } from \"@/types\";\n\n/**\n * This is a internal used component.\n * Used by Datepicker and Timepicker.\n */\ndefineOptions({\n    name: \"OPickerWrapper\",\n});\n\nconst props = defineProps({\n    /** parent picker component props  */\n    picker: { type: Object, required: true },\n    /** data-oruga attribute value */\n    dataOruga: { type: String, required: true },\n    /** the internal input value */\n    value: { type: [Date, Array], default: undefined },\n    /** the active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** formatted display value to show when client is desktop */\n    formattedValue: { type: String, default: undefined },\n    /** native value when client is mobile native */\n    nativeValue: { type: [String, Number], default: undefined },\n    nativeType: { type: String, required: true },\n    nativeStep: { type: String, default: undefined },\n    nativeMin: { type: [String, Number], default: undefined },\n    nativeMax: { type: [String, Number], default: undefined },\n    stayOpen: { type: Boolean, default: false },\n    rootClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    dropdownClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    boxClass: {\n        type: Array as PropType<ComponentClass>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on value change event */\n    (e: \"change\", value: string): void;\n    /** on natvie value change event */\n    (e: \"native-change\", value: string): void;\n    /** on input focus event */\n    (e: \"focus\", evt: Event): void;\n    /** on input blur event */\n    (e: \"blur\", evt: Event): void;\n    /** on input invalid event */\n    (e: \"invalid\", evt: Event): void;\n    /** on icon click event */\n    (e: \"icon-click\", evt: Event): void;\n    /** on icon right click event */\n    (e: \"icon-right-click\", evt: Event): void;\n}>();\n\nconst isMobileNative = computed(\n    () =>\n        !props.picker.inline &&\n        props.picker.mobileNative &&\n        isMobileAgent.any(),\n);\n\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\n);\n\n// use form input functionality for native input\nconst {\n    input,\n    checkHtml5Validity,\n    setFocus,\n    onBlur,\n    onFocus,\n    onInvalid,\n    isValid,\n} = useInputHandler<HTMLInputElement>(elementRef, emits, props.picker);\n\n/**\n * Show input as text for placeholder,\n * when placeholder and no native value is given.\n */\nconst initialNativeType =\n    !props.picker.placeholder || !!props.nativeValue\n        ? props.nativeType\n        : \"text\";\n\n/** input value based on mobile native or formatted desktop value */\nconst inputValue = computed(() =>\n    isMobileNative.value ? props.nativeValue : props.formattedValue,\n);\n\n/** internal o-input vmodel value */\nconst vmodel = ref(inputValue.value);\n// update the o-input vmodel value when prop value change\nwatch(inputValue, (value) => (vmodel.value = value));\n\n/**\n * When v-model is changed:\n *  1. Update internal value.\n *  2. If it's invalid, validate again.\n */\nwatch(\n    () => props.value,\n    () => {\n        // reset input value if they not match\n        if (vmodel.value !== inputValue.value) vmodel.value = inputValue.value;\n\n        // toggle picker if not stay open\n        if (!isMobileNative.value && !props.stayOpen) togglePicker(false);\n        if (!isValid.value) checkHtml5Validity();\n    },\n    { flush: \"post\" },\n);\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nwatch(isActive, onActiveChange);\n\nconst ariaRole = computed(() => (!props.picker.inline ? \"dialog\" : undefined));\n\nconst triggers = computed(() => (props.picker.openOnFocus ? [\"click\"] : []));\n\nif (isClient) useEventListener(\"keyup\", onKeyPress);\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\n        togglePicker(false);\n}\n\n// --- PICKER EVENT HANDLER ---\n\n/** Toggle picker */\nfunction togglePicker(active: boolean): void {\n    if (dropdownRef.value) {\n        if (active || props.picker.closeOnClick)\n            nextTick(() => (isActive.value = active));\n    }\n}\n\n/** Avoid dropdown toggle when is already visible */\nfunction onInputClick(event): void {\n    if (isActive.value) event.stopPropagation();\n}\n\n/** Emit 'blur' event on dropdown is not active (closed) */\nfunction onActiveChange(value: boolean): void {\n    if (value) onFocus();\n    else if (!value) onBlur();\n}\n\n// --- NATIVE EVENT HANDLER ---\n\nfunction onNativeClick(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // blur the current state to remove active native keyboards for type 'text'\n        input.value.blur();\n\n        setTimeout(() => {\n            // make the input editable\n            input.value.readOnly = false;\n            input.value.type = props.nativeType;\n\n            // focus the underlaying input element again to open native keyboards for type 'date'\n            setFocus();\n        }, 50);\n    }\n}\n\nfunction onNativeFocus(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        // prevent focus\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    // only emit focus event if editable\n    else onFocus();\n}\n\nfunction onNativeBlur(): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when the input does not have any value\n    if (!input.value.value) {\n        // make the input uneditable\n        input.value.readOnly = true;\n        input.value.type = \"text\";\n    }\n    // emit blur event\n    onBlur();\n}\n\nfunction handleNativeChange(event: Event): void {\n    const value = (event.target as HTMLInputElement).value\n        ? (event.target as HTMLInputElement).value\n        : null;\n\n    // when the input does not have any value\n    if (!value) {\n        input.value.value = value;\n        input.value.blur();\n    }\n\n    emits(\"native-change\", value);\n}\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...props.picker.inputClasses,\n}));\n\nconst dropdownBind = computed(() => ({\n    \"root-class\": getActiveClasses(props.dropdownClasses),\n    ...props.picker.dropdownClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\" @click=\"onNativeClick\">\n        <o-dropdown\n            v-if=\"!isMobileNative\"\n            ref=\"dropdownRef\"\n            v-bind=\"dropdownBind\"\n            v-model:active=\"isActive\"\n            :position=\"picker.position\"\n            :disabled=\"picker.disabled\"\n            :inline=\"picker.inline\"\n            :mobile-modal=\"picker.mobileModal\"\n            :trap-focus=\"picker.trapFocus\"\n            :aria-role=\"ariaRole\"\n            :aria-modal=\"!picker.inline\"\n            :tabindex=\"-1\"\n            :teleport=\"picker.teleport\"\n            :triggers=\"triggers\">\n            <template v-if=\"!picker.inline\" #trigger>\n                <slot name=\"trigger\">\n                    <o-input\n                        ref=\"inputRef\"\n                        v-bind=\"inputBind\"\n                        v-model=\"vmodel\"\n                        autocomplete=\"off\"\n                        :placeholder=\"picker.placeholder\"\n                        :size=\"picker.size\"\n                        :icon-pack=\"picker.iconPack\"\n                        :icon=\"picker.icon\"\n                        :icon-right=\"picker.iconRight\"\n                        :icon-right-clickable=\"picker.iconRightClickable\"\n                        :expanded=\"picker.expanded\"\n                        :rounded=\"picker.rounded\"\n                        :disabled=\"picker.disabled\"\n                        :readonly=\"picker.readonly\"\n                        :use-html5-validation=\"false\"\n                        @click=\"onInputClick\"\n                        @keyup.enter=\"togglePicker(true)\"\n                        @change=\"$emit('change', $event.target.value)\"\n                        @focus=\"onFocus\"\n                        @blur=\"onBlur\"\n                        @icon-click=\"$emit('icon-click', $event)\"\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\n                </slot>\n            </template>\n            <o-dropdown-item\n                override\n                tag=\"div\"\n                :item-class=\"boxClass\"\n                :disabled=\"picker.disabled\"\n                :clickable=\"false\">\n                <slot />\n            </o-dropdown-item>\n        </o-dropdown>\n\n        <!-- Native Picker -->\n        <template v-else>\n            <slot name=\"trigger\">\n                <o-input\n                    ref=\"nativeInputRef\"\n                    v-bind=\"inputBind\"\n                    v-model=\"vmodel\"\n                    :type=\"initialNativeType\"\n                    :min=\"nativeMin\"\n                    :max=\"nativeMax\"\n                    :step=\"nativeStep\"\n                    :placeholder=\"picker.placeholder\"\n                    :size=\"picker.size\"\n                    :icon-pack=\"picker.iconPack\"\n                    :icon=\"picker.icon\"\n                    :icon-right=\"picker.iconRight\"\n                    :icon-right-clickable=\"picker.iconRightClickable\"\n                    :rounded=\"picker.rounded\"\n                    :disabled=\"picker.disabled\"\n                    :readonly=\"initialNativeType == 'text'\"\n                    autocomplete=\"off\"\n                    :use-html5-validation=\"false\"\n                    @change=\"handleNativeChange\"\n                    @focus=\"onNativeFocus\"\n                    @blur=\"onNativeBlur\"\n                    @invalid=\"onInvalid\"\n                    @icon-click=\"$emit('icon-click', $event)\"\n                    @icon-right-click=\"$emit('icon-right-click', $event)\" />\n            </slot>\n        </template>\n    </div>\n</template>\n","/**\n * Return month names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\n * @return {Array<String>} An array of month names\n */\ntype MonthType =\n    | \"numeric\"\n    | \"2-digit\"\n    | \"long\"\n    | \"short\"\n    | \"narrow\"\n    | undefined;\n\nexport function getMonthNames(\n    locale: string = undefined,\n    format: MonthType = \"long\",\n): string[] {\n    const dates = [];\n    for (let i = 0; i < 12; i++) {\n        dates.push(new Date(2000, i, 15));\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        month: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Return weekday names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {Number} first day of week index\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\n * @return {Array<String>} An array of weekday names\n */\n\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\n\nexport function getWeekdayNames(\n    locale: string = undefined,\n    firstDayOfWeek: number = 0,\n    format: WeekdayType = \"narrow\",\n): string[] {\n    const dates = [];\n    for (let i = 1, j = 0; j < 7; i++) {\n        const d = new Date(2000, 0, i);\n        const day = d.getDay();\n        if (day === firstDayOfWeek || j > 0) {\n            dates.push(d);\n            j++;\n        }\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        weekday: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Accept a regex with group names and return an object\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\n * will return { year: 2000, month: 12, day: 25 }\n * @param  {String} includes injections of (?!={groupname}) for each group\n * @param  {String} the string to run regex\n * @return {Object} an object with a property for each group having the group's match as the value\n */\nexport function matchWithGroups(pattern: string, str: string): any {\n    const matches = str.match(pattern);\n    return (\n        pattern\n            // get the pattern as a string\n            .toString()\n            // suss out the groups\n            .match(/<(.+?)>/g)\n            // remove the braces\n            .map((group) => {\n                const groupMatches = group.match(/<(.+)>/);\n                if (!groupMatches || groupMatches.length <= 0) {\n                    return null;\n                }\n                return group.match(/<(.+)>/)[1];\n            })\n            // create an object with a property for each group having the group's match as the value\n            .reduce((acc, curr, index) => {\n                if (matches && matches.length > index) {\n                    acc[curr] = matches[index + 1];\n                } else {\n                    acc[curr] = null;\n                }\n                return acc;\n            }, {})\n    );\n}\n\n/** Return array of all days in the week that the startingDate is within */\nexport function weekBuilder(\n    startingDate: number,\n    month: number,\n    year: number,\n    firstDayOfWeek: number,\n): Date[] {\n    const thisMonth = new Date(year, month);\n\n    const thisWeek = [];\n\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\n\n    const end =\n        dayOfWeek >= firstDayOfWeek\n            ? dayOfWeek - firstDayOfWeek\n            : 7 - firstDayOfWeek + dayOfWeek;\n\n    let daysAgo = 1;\n    for (let i = 0; i < end; i++) {\n        thisWeek.unshift(\n            new Date(\n                thisMonth.getFullYear(),\n                thisMonth.getMonth(),\n                startingDate - daysAgo,\n            ),\n        );\n        daysAgo++;\n    }\n\n    thisWeek.push(new Date(year, month, startingDate));\n\n    let daysForward = 1;\n    while (thisWeek.length < 7) {\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\n        daysForward++;\n    }\n\n    return thisWeek;\n}\n\nexport function firstWeekOffset(year, dow, doy): number {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    const firstJanuary = new Date(year, 0, fwd);\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n\n/** Return the number of days in a specific year */\nexport function daysInYear(year): number {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\n}\n\n/** Return the number of weeks in a specific year */\nexport function weeksInYear(year, dow, doy): number {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"./utils\";\nimport type { DatepickerProps } from \"./types\";\n\nexport function useDatepickerMixins(props: DatepickerProps) {\n    /**\n     * Check that selected date is within earliest/latest params and\n     * is within a given month\n     */\n    function isDateSelectable(date: Date, month: number): boolean {\n        const validity = [];\n\n        if (props.minDate) validity.push(date >= props.minDate);\n        if (props.maxDate) validity.push(date <= props.maxDate);\n\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\n            validity.push(date.getMonth() === month);\n\n        if (props.selectableDates) {\n            if (typeof props.selectableDates === \"function\") {\n                if (props.selectableDates(date)) return true;\n                else validity.push(false);\n            } else {\n                for (let i = 0; i < props.selectableDates.length; i++) {\n                    const enabledDate = props.selectableDates[i];\n                    if (\n                        date.getDate() === enabledDate.getDate() &&\n                        date.getFullYear() === enabledDate.getFullYear() &&\n                        date.getMonth() === enabledDate.getMonth()\n                    )\n                        return true;\n                    else validity.push(false);\n                }\n            }\n        }\n\n        if (props.unselectableDates) {\n            if (typeof props.unselectableDates === \"function\") {\n                validity.push(!props.unselectableDates(date));\n            } else {\n                for (let i = 0; i < props.unselectableDates.length; i++) {\n                    const disabledDate = props.unselectableDates[i];\n                    validity.push(\n                        date.getDate() !== disabledDate.getDate() ||\n                            date.getFullYear() !== disabledDate.getFullYear() ||\n                            date.getMonth() !== disabledDate.getMonth(),\n                    );\n                }\n            }\n        }\n\n        if (props.unselectableDaysOfWeek) {\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\n                validity.push(date.getDay() !== dayOfWeek);\n            }\n        }\n\n        return validity.indexOf(false) < 0;\n    }\n\n    const isTypeMonth = computed(() => props.type === \"month\");\n\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    /** DateTime Format */\n    const dtf = computed(\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\n    );\n\n    /** DateTime Month Format */\n    const dtfMonth = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"2-digit\",\n                // timeZone: 'UTC'\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.dateCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    /** Format date into string */\n    const defaultDateFormatter = (date: Date | Date[]): string => {\n        if (!date) return \"\";\n        const targetDates = Array.isArray(date) ? date : [date];\n        if (!targetDates.length) return \"\";\n        const dates = targetDates.map((date) => {\n            const d = new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                12,\n            );\n            return !isTypeMonth.value\n                ? dtf.value.format(d)\n                : dtfMonth.value.format(d);\n        });\n        return !props.multiple ? dates.join(\" - \") : dates.join(\", \");\n    };\n\n    /** Parse a string into a date */\n    const defaultDateParser = (date: string): Date[] | Date => {\n        if (!date) return null;\n        const targetDates = !props.multiple ? [date] : date.split(\", \");\n        const dates = targetDates.map((date) => {\n            if (\n                dtf.value.formatToParts &&\n                typeof dtf.value.formatToParts === \"function\"\n            ) {\n                const formatRegex = (\n                    isTypeMonth.value ? dtfMonth.value : dtf.value\n                )\n                    .formatToParts(sampleTime.value)\n                    .map((part) => {\n                        if (part.type === \"literal\") return part.value;\n                        return `((?!=<${part.type}>)\\\\d+)`;\n                    })\n                    .join(\"\");\n                const dateGroups = matchWithGroups(formatRegex, date);\n\n                // We do a simple validation for the group.\n                // If it is not valid, it will fallback to Date.parse below\n                if (\n                    dateGroups.year &&\n                    dateGroups.year.length === 4 &&\n                    dateGroups.month &&\n                    dateGroups.month <= 12\n                ) {\n                    if (isTypeMonth.value)\n                        return new Date(dateGroups.year, dateGroups.month - 1);\n                    else if (dateGroups.day && dateGroups.day <= 31) {\n                        return new Date(\n                            dateGroups.year,\n                            dateGroups.month - 1,\n                            dateGroups.day,\n                            12,\n                        );\n                    }\n                }\n            }\n            // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n            if (!isTypeMonth.value) return new Date(Date.parse(date));\n            const s = date.split(\"/\");\n            const year = s[0].length === 4 ? s[0] : s[1];\n            const month = s[0].length === 2 ? s[0] : s[1];\n            if (year && month) {\n                return new Date(\n                    parseInt(year, 10),\n                    parseInt(month, 10) - 1,\n                    1,\n                    0,\n                    0,\n                    0,\n                    0,\n                );\n            }\n        });\n        return props.multiple ? dates : dates[0];\n    };\n\n    return { isDateSelectable, defaultDateParser, defaultDateFormatter };\n}\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    ref,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerTableRow\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    day: { type: Number, required: true },\n    week: { type: Array as PropType<Date[]>, required: true },\n    month: { type: Number, required: true },\n    selectedDate: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    hoveredDateRange: { type: Array as PropType<Date[]>, default: () => [] },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    (e: \"select\", value: Date): void;\n    (e: \"hover-enddate\", value: Date): void;\n    (e: \"change-focus\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!props.events?.length);\n\nconst dayRefs = ref(new Map());\n\nfunction setDayRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\n    if (el) dayRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.day,\n    (day) => {\n        // if day is in week\n        if (props.week.map((d) => d.getDate()).includes(day))\n            nextTick(() => {\n                // $nextTick is needed when month is changed\n                const refKey = `day-${props.month}-${day}`;\n                const ref = dayRefs.value.get(refKey);\n                if (ref) ref.focus();\n            });\n    },\n);\n\nwatch(\n    () => props.month,\n    // clear day refs on month change\n    () => (dayRefs.value = new Map()),\n);\n\nfunction clickWeekNumber(week: number): void {\n    if (datepicker.value.weekNumberClickable) emits(\"week-number-click\", week);\n}\n\nfunction getDayOfYear(input): number {\n    return (\n        Math.round(\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\n                864e5,\n        ) + 1\n    );\n}\n\nfunction getWeekNumber(mom): number {\n    const dow = datepicker.value.firstDayOfWeek; // first day of week\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\n    const doy = datepicker.value.rulesForFirstWeek;\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = mom.getFullYear() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\n        resYear = mom.getFullYear() + 1;\n    } else {\n        resYear = mom.getFullYear();\n        resWeek = week;\n    }\n    return resWeek;\n}\n\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\n    if (!props.events?.length) return [];\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/** Emit select event with chosen date as payload */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled || datepicker.value.readonly) return;\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\n}\n\nfunction changeFocus(day, inc): void {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(day.getDate() + inc);\n    // if next day is out of range or not selectable, move to next selectable date\n    while (\n        (datepicker.value.minDate && nextDay < datepicker.value.minDate) ||\n        (datepicker.value.maxDate && nextDay > datepicker.value.maxDate) ||\n        !isDateSelectable(nextDay, nextDay.getMonth())\n    ) {\n        // revert day selection until selectable day is reached\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\n    }\n    setRangeHoverEndDate(nextDay);\n    emits(\"change-focus\", nextDay);\n}\n\nfunction setRangeHoverEndDate(day): void {\n    if (datepicker.value.range) emits(\"hover-enddate\", day);\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(\n    dateOne: Date,\n    dateTwo: Date | Date[],\n    multiple = false,\n): boolean {\n    // if either date is null or undefined, return false\n    // if using multiple flag, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n\n    if (Array.isArray(dateTwo)) {\n        return dateTwo.some(\n            (date) =>\n                dateOne.getDate() === date.getDate() &&\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    }\n    return (\n        dateOne.getDate() === dateTwo.getDate() &&\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(\n    dateOne: Date,\n    dates: Date | Date[],\n    multiple = false,\n): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\n/** Build cellClasses for cell using validations */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tableCellSelectedClass\",\n            \"o-dpck__table__cell--selected\",\n            null,\n            dateMatch(day, props.selectedDate) ||\n                dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellFirstSelectedClass\",\n            \"o-dpck__table__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellWithinSelectedClass\",\n            \"o-dpck__table__cell--within-selected\",\n            null,\n            dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellLastSelectedClass\",\n            \"o-dpck__table__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellFirstHoveredClass\",\n            \"o-dpck__table__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[0],\n            ),\n        ],\n        [\n            \"tableCellWithinHoveredClass\",\n            \"o-dpck__table__cell--within-hovered\",\n            null,\n            dateWithin(day, props.hoveredDateRange),\n        ],\n        [\n            \"tableCellLastHoveredClass\",\n            \"o-dpck__table__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[1],\n            ),\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"tableCellSelectableClass\",\n            \"o-dpck__table__cell--selectable\",\n            null,\n            isDateSelectable(day, props.month) &&\n                !datepicker.value.disabled &&\n                !datepicker.value.readonly,\n        ],\n        [\n            \"tableCellUnselectableClass\",\n            \"o-dpck__table__cell--unselectable\",\n            null,\n            !isDateSelectable(day, props.month) || datepicker.value.disabled,\n        ],\n\n        [\n            \"tableCellInvisibleClass\",\n            \"o-dpck__table__cell--invisible\",\n            null,\n            !datepicker.value.nearbyMonthDays && day.getMonth() !== props.month,\n        ],\n\n        [\n            \"tableCellNearbyClass\",\n            \"o-dpck__table__cell--nearby\",\n            null,\n            datepicker.value.nearbySelectableMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n    );\n\n    return [\n        ...tableCellClasses.value,\n        ...cellEventsClass.value,\n        ...classes.value,\n    ];\n}\n\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"tableEventClass\", \"o-dpck__table__event\"],\n        [\n            \"tableEventVariantClass\",\n            \"o-dpck__table__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"tableEventIndicatorsClass\",\n            \"o-dpck__table__event--\",\n            datepicker.value.indicators,\n            !!datepicker.value.indicators,\n        ],\n    );\n    return classes.value;\n}\n\nconst tableRowClasses = defineClasses([\"tableRowClass\", \"o-dpck__table__row\"]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableEventsClasses = defineClasses([\n    \"tableEventsClass\",\n    \"o-dpck__table__events\",\n]);\n\nconst cellEventsClass = defineClasses([\n    \"tableCellEventsClass\",\n    \"o-dpck__table__cell--events\",\n    null,\n    hasEvents,\n]);\n</script>\n\n<template>\n    <div :class=\"tableRowClasses\">\n        <div\n            v-if=\"datepicker.showWeekNumber\"\n            :class=\"tableCellClasses\"\n            :style=\"{\n                cursor: datepicker.weekNumberClickable ? 'pointer' : 'auto',\n            }\"\n            :tabindex=\"datepicker.weekNumberClickable ? 0 : null\"\n            role=\"button\"\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\n            <span>{{ getWeekNumber(week[6]) }}</span>\n        </div>\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\n            <div\n                v-if=\"\n                    !datepicker.disabled &&\n                    !datepicker.readonly &&\n                    isDateSelectable(weekDay, month)\n                \"\n                :ref=\"(el) => setDayRef(weekDay, el)\"\n                :class=\"cellClasses(weekDay)\"\n                role=\"button\"\n                :tabindex=\"\n                    day === weekDay.getDate() && month === weekDay.getMonth()\n                        ? null\n                        : 0\n                \"\n                @click.prevent=\"selectDate(weekDay)\"\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\n                @focus=\"setRangeHoverEndDate(weekDay)\"\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n                <div\n                    v-if=\"eventsDateMatch(weekDay).length\"\n                    :class=\"tableEventsClasses\">\n                    <div\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\n                        :key=\"index\"\n                        :class=\"eventClasses(event)\" />\n                </div>\n            </div>\n            <div v-else :class=\"cellClasses(weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n            </div>\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weekBuilder } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\n\ndefineOptions({\n    name: \"ODatepickerTable\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    dayNames: { type: Array as PropType<string[]>, required: true },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\");\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst visibleDayNames = computed(() => {\n    const visibleDayNames = [];\n    let index = datepicker.value.firstDayOfWeek;\n    while (visibleDayNames.length < props.dayNames.length) {\n        const currentDayName = props.dayNames[index % props.dayNames.length];\n        visibleDayNames.push(currentDayName);\n        index++;\n    }\n    if (datepicker.value.showWeekNumber) visibleDayNames.unshift(\"\");\n    return visibleDayNames;\n});\n\n/** Return array of all events in the specified month */\nconst eventsInThisMonth = computed(() => {\n    if (!datepicker.value.events) return [];\n    return datepicker.value.events\n        .map((event) =>\n            !event.date && event instanceof Date ? { date: event } : event,\n        )\n        .filter(\n            (event) =>\n                event.date.getMonth() === focusedDateModel.value.month &&\n                event.date.getFullYear() === focusedDateModel.value.year,\n        );\n});\n\n/** Return array of all weeks in the specified month */\nconst weeksInThisMonth = computed(() => {\n    validateFocusedDay();\n    const month = focusedDateModel.value.month;\n    const year = focusedDateModel.value.year;\n    const weeksInThisMonth = [];\n\n    let startingDay = 1;\n\n    while (weeksInThisMonth.length < 6) {\n        const newWeek = weekBuilder(\n            startingDay,\n            month,\n            year,\n            datepicker.value.firstDayOfWeek,\n        );\n        weeksInThisMonth.push(newWeek);\n        startingDay += 7;\n    }\n\n    return weeksInThisMonth;\n});\n\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\n    if (!datepicker.value.events) return [];\n    return eventsInThisMonth.value.filter((event) => {\n        const stripped = new Date(event.date);\n        stripped.setHours(0, 0, 0, 0);\n        const timed = stripped.getTime();\n        return week.some((weekDate) => weekDate.getTime() === timed);\n    });\n}\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || selectedEndDate.value) return [];\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction validateFocusedDay(): void {\n    const currentDate = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month,\n        focusedDateModel.value.day,\n    );\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\n\n    let day = 0;\n    // Number of days in the current month\n    const monthDays = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month + 1,\n        0,\n    ).getDate();\n    let firstFocusable = null;\n    while (!firstFocusable && ++day < monthDays) {\n        const date = new Date(\n            focusedDateModel.value.year,\n            focusedDateModel.value.month,\n            day,\n        );\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\n            firstFocusable = currentDate;\n            focusedDateModel.value = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n            };\n        }\n    }\n}\n\n// --- Event Handlers ---\n\n/** Emit input event with selected date as payload for v-model in parent */\nfunction onSelectedDate(date: Date): void {\n    if (datepicker.value.disabled) return;\n    if (!datepicker.value.range && !datepicker.value.multiple)\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\n/*\n * If selected date already exists list of selected dates, remove it from the list\n * Otherwise, add date to list of selected dates\n */\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n\n    let multipleSelectedDates = props.modelValue;\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates = [...multipleSelectedDates, date];\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction onRangeHoverEndDate(date: Date): void {\n    hoveredEndDate.value = date;\n}\n\nfunction onChangeFocus(date: Date): void {\n    focusedDateModel.value = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n    };\n}\n\n// --- Computed Component Classes ---\n\nconst tableClasses = defineClasses([\"tableClass\", \"o-dpck__table\"]);\n\nconst tableHeadClasses = defineClasses([\n    \"tableHeadClass\",\n    \"o-dpck__table__head\",\n]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableHeadCellClasses = defineClasses([\n    \"tableHeadCellClass\",\n    \"o-dpck__table__head-cell\",\n]);\n\nconst tableBodyClasses = defineClasses([\n    \"tableBodyClass\",\n    \"o-dpck__table__body\",\n]);\n</script>\n\n<template>\n    <section :class=\"tableClasses\">\n        <header :class=\"tableHeadClasses\">\n            <div\n                v-for=\"(day, index) in visibleDayNames\"\n                :key=\"index\"\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\n                <span>{{ day }}</span>\n            </div>\n        </header>\n        <div :class=\"tableBodyClasses\">\n            <o-datepicker-table-row\n                v-for=\"(week, index) in weeksInThisMonth\"\n                :key=\"index\"\n                :selected-date=\"modelValue\"\n                :day=\"focusedDateModel.day\"\n                :week=\"week\"\n                :month=\"focusedDateModel.month\"\n                :events=\"eventsInThisWeek(week)\"\n                :hovered-date-range=\"hoveredDateRange\"\n                :picker-props=\"props.pickerProps\"\n                @select=\"onSelectedDate\"\n                @hover-enddate=\"onRangeHoverEndDate\"\n                @change-focus=\"onChangeFocus\"\n                @week-number-click=\"$emit('week-number-click', $event)\" />\n        </div>\n    </section>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    nextTick,\n    watch,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerMonth\",\n    configField: \"datepicker\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n}>();\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!datepicker.value.events?.length);\n\nconst monthRefs = ref(new Map());\n\nfunction setMonthRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `month-${date.getMonth()}`;\n    if (el) monthRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.focusedDate.month,\n    (month) => {\n        const refKey = `month-${month}`;\n        nextTick(() => {\n            // $nextTick is needed when month is changed\n            const ref = monthRefs.value.get(refKey);\n            if (ref?.length > 0 && ref[0]) {\n                ref[0].focus();\n            }\n        });\n    },\n);\n\n/** Return array of all events in the specified month */\nconst eventsInThisYear = computed(() => {\n    if (!datepicker.value.events) return [];\n\n    return datepicker.value.events\n        .map((event) => {\n            if (!event.date && event instanceof Date) event = { date: event };\n            if (!event.type) event.type = \"is-primary\";\n            return event;\n        })\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\n});\n\nconst monthDates = computed(() => {\n    const year = props.focusedDate.year;\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        const d = new Date(year, i, 1);\n        d.setHours(0, 0, 0, 0);\n        months.push(d);\n    }\n    return months;\n});\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || !selectedEndDate.value) return [];\n\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction eventsDateMatch(day): DatepickerEvent[] {\n    if (!eventsInThisYear.value.length) return [];\n    return eventsInThisYear.value.filter(\n        (event) => event.date.getMonth() === day.getMonth(),\n    );\n}\n\nfunction isDateSelectable(date: Date): boolean {\n    const validity = [];\n\n    if (datepicker.value.minDate)\n        validity.push(date >= datepicker.value.minDate);\n    if (datepicker.value.maxDate)\n        validity.push(date <= datepicker.value.maxDate);\n\n    validity.push(date.getFullYear() === props.focusedDate.year);\n\n    if (datepicker.value.selectableDates) {\n        if (typeof datepicker.value.selectableDates === \"function\") {\n            if (datepicker.value.selectableDates(date)) return true;\n            else validity.push(false);\n        } else {\n            for (let i = 0; i < datepicker.value.selectableDates.length; i++) {\n                const enabledDate = datepicker.value.selectableDates[i];\n                if (\n                    date.getFullYear() === enabledDate.getFullYear() &&\n                    date.getMonth() === enabledDate.getMonth()\n                )\n                    return true;\n                else validity.push(false);\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDates) {\n        if (typeof datepicker.value.unselectableDates === \"function\") {\n            validity.push(!datepicker.value.unselectableDates(date));\n        } else {\n            for (\n                let i = 0;\n                i < datepicker.value.unselectableDates.length;\n                i++\n            ) {\n                const disabledDate = datepicker.value.unselectableDates[i];\n                validity.push(\n                    date.getFullYear() !== disabledDate.getFullYear() ||\n                        date.getMonth() !== disabledDate.getMonth(),\n                );\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDaysOfWeek) {\n        for (\n            let i = 0;\n            i < datepicker.value.unselectableDaysOfWeek.length;\n            i++\n        ) {\n            const dayOfWeek = datepicker.value.unselectableDaysOfWeek[i];\n            validity.push(date.getDay() !== dayOfWeek);\n        }\n    }\n\n    return validity.indexOf(false) < 0;\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/*\n * Emit update:modelValue event with selected date as payload for v-model in parent\n */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled || datepicker.value.readonly) return;\n    if (\n        !datepicker.value.range &&\n        !datepicker.value.multiple &&\n        isDateSelectable(date)\n    )\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\nconst multipleSelectedDates = computed(() =>\n    datepicker.value.multiple && props.modelValue ? props.modelValue : [],\n);\n\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n    let multipleSelectedDates = props.modelValue;\n\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates.push(date);\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction changeFocus(month: Date, inc: number): void {\n    month.setMonth(month.getMonth() + inc);\n    const focused = {\n        day: month.getDate(),\n        month: month.getMonth(),\n        year: month.getFullYear(),\n    };\n    emits(\"update:focusedDate\", focused);\n}\n\nfunction onRangeHoverEndDate(day: Date): void {\n    if (datepicker.value.range) hoveredEndDate.value = day;\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\n    // if either date is null or undefined, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    return (\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || !multiple) return false;\n    return dates.some(\n        (date) =>\n            dateOne.getDate() === date.getDate() &&\n            dateOne.getFullYear() === date.getFullYear() &&\n            dateOne.getMonth() === date.getMonth(),\n    );\n}\n\nconst monthClasses = defineClasses([\"monthClass\", \"o-dpck__month\"]);\n\nconst monthBodyClasses = defineClasses([\n    \"monthBodyClass\",\n    \"o-dpck__month__body\",\n]);\n\nconst monthTableClasses = defineClasses([\n    \"monthTableClass\",\n    \"o-dpck__month__table\",\n]);\n\nconst monthCellClasses = defineClasses(\n    [\"monthCellClass\", \"o-dpck__month__cell\"],\n    [\"monthCellEventsClass\", \"o-dpck__month__cell--events\", null, hasEvents],\n);\n\n/**\n * Build cellClasses for cell using validations\n */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"monthCellSelectedClass\",\n            \"o-dpck__month__cell--selected\",\n            null,\n            dateMatch(day, props.modelValue, datepicker.value.multiple) ||\n                dateWithin(day, props.modelValue, datepicker.value.multiple) ||\n                dateMultipleSelected(\n                    day,\n                    multipleSelectedDates.value,\n                    datepicker.value.multiple,\n                ),\n        ],\n\n        [\n            \"monthCellFirstSelectedClass\",\n            \"o-dpck__month__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinSelectedClass\",\n            \"o-dpck__month__cell--within-selected\",\n            null,\n            dateWithin(day, props.modelValue, datepicker.value.multiple),\n        ],\n        [\n            \"monthCellLastSelectedClass\",\n            \"o-dpck__month__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredRangeClass\",\n            \"o-dpck__month__cell--within-hovered-range\",\n            null,\n            hoveredDateRange.value &&\n                hoveredDateRange.value.length === 2 &&\n                (dateMatch(day, hoveredDateRange.value) ||\n                    dateWithin(day, hoveredDateRange.value)),\n        ],\n        [\n            \"monthCellFirstHoveredClass\",\n            \"o-dpck__month__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[0],\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredClass\",\n            \"o-dpck__month__cell--within-hovered\",\n            null,\n            dateWithin(day, hoveredDateRange.value),\n        ],\n        [\n            \"monthCellLastHoveredClass\",\n            \"o-dpck__month__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[1],\n            ),\n        ],\n        [\n            \"monthCellTodayClass\",\n            \"o-dpck__month__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"monthCellSelectableclass\",\n            \"o-dpck__month__cell--selectable\",\n            null,\n            isDateSelectable(day) &&\n                !datepicker.value.disabled &&\n                !datepicker.value.readonly,\n        ],\n        [\n            \"monthCellUnselectableClass\",\n            \"o-dpck__month__cell--unselectable\",\n            null,\n            !isDateSelectable(day) || datepicker.value.disabled,\n        ],\n    );\n\n    return [...monthCellClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <section :class=\"monthClasses\">\n        <div :class=\"monthBodyClasses\">\n            <div :class=\"monthTableClasses\">\n                <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\n                    <div\n                        v-if=\"\n                            !datepicker.disabled &&\n                            !datepicker.readonly &&\n                            isDateSelectable(date)\n                        \"\n                        :ref=\"(el) => setMonthRef(date, el)\"\n                        :class=\"cellClasses(date)\"\n                        role=\"button\"\n                        :tabindex=\"\n                            focusedDate.month === date.getMonth() ? null : 0\n                        \"\n                        @click.prevent=\"selectDate(date)\"\n                        @mouseenter=\"onRangeHoverEndDate(date)\"\n                        @focus=\"onRangeHoverEndDate(date)\"\n                        @keydown.prevent=\"onKeydown($event, date)\">\n                        {{ monthNames[date.getMonth()] }}\n                        <div v-if=\"eventsDateMatch(date).length\" class=\"events\">\n                            <div\n                                v-for=\"(event, index) in eventsDateMatch(date)\"\n                                :key=\"index\"\n                                class=\"event\"\n                                :class=\"event.type\" />\n                        </div>\n                    </div>\n                    <div v-else :class=\"cellClasses(date)\">\n                        {{ monthNames[date.getMonth()] }}\n                    </div>\n                </template>\n            </div>\n        </div>\n    </section>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\nimport ODatepickerTable from \"./DatepickerTable.vue\";\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDate } from \"@/utils/helpers\";\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ComponentClass, OrugaOptions } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile\n * @displayName Datepicker\n * @style _datepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatepicker\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Define picker mode\n     * @values date, month\n     */\n    type: {\n        type: String,\n        default: \"date\",\n        validator: (value: string) => [\"month\", \"date\"].indexOf(value) >= 0,\n    },\n    /** Set custom day names, else use names based on locale */\n    dayNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.dayNames\", undefined),\n    },\n    /** Set custom month names, else use names based on locale */\n    monthNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.monthNames\", undefined),\n    },\n    /**\n     * Size of the control input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datepicker.size\"),\n    },\n    /** Set default date to focus on */\n    focusedDate: { type: Date, default: undefined },\n    /** Events to display on picker */\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    /** Event indicators for style class definiton */\n    indicators: { type: String, default: \"dots\" },\n    /** Min date to select */\n    minDate: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDate: { type: Date, default: undefined },\n    /** Enable date range selection */\n    range: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.closeOnClick\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    dateFormatter: {\n        type: Function as PropType<(date: Date | Date[]) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    dateParser: {\n        type: Function as PropType<(date: string) => Date | Date[]>,\n        default: (\n            date: string,\n            defaultFunction: (date: string) => Date | Date[],\n        ) => getOption(\"datepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    dateCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"datepicker.dateCreator\", () => new Date())(),\n    },\n    /** Define a list of dates which can be selected */\n    selectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of dates which can not be selected */\n    unselectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of weeks which can not be selected */\n    unselectableDaysOfWeek: {\n        type: Array as PropType<number[]>,\n        default: () =>\n            getOption(\"datepicker.unselectableDaysOfWeek\", undefined),\n    },\n    /** Show nearby month days */\n    nearbyMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbyMonthDays\", true),\n    },\n    /** Define if nearby month days can be selected */\n    nearbySelectableMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbySelectableMonthDays\", false),\n    },\n    /** Show weeek numbers */\n    showWeekNumber: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.showWeekNumber\", false),\n    },\n    /** Define if weeek numbers are clickable */\n    weekNumberClickable: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.weekNumberClickable\", false),\n    },\n    /** Set the first day of a week */\n    firstDayOfWeek: {\n        type: Number,\n        default: () => getOption(\"datepicker.firstDayOfWeek\", 0),\n    },\n    /** Rules for the first week : 1 for the 1st January, 4 for the 4th January */\n    rulesForFirstWeek: { type: Number, default: () => 4 },\n    /** Define the range of years to show */\n    yearsRange: {\n        type: Array as PropType<number[]>,\n        default: () => getOption(\"datepicker.yearsRange\", [-100, 10]),\n    },\n    /** Trap dropdown on focus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.trapFocus\", true),\n    },\n    /** Position of the dropdown relative to the input */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileModal\", true),\n    },\n    /**\n     * Enable mobile native input if mobile agent\n     * (Default will be switched to `false` in 0.9)\n     */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileNative\", true), // TODO: make false\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"datepicker.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"datepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Next Page\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Previous Page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker header inside the box */\n    headerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box */\n    headerButtonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box when a size is choosen */\n    headerButtonsSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button inside the Datepicker box */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button inside the Datepicker box */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the month and year selects container inside the Datepicker box */\n    listsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Datepicker header with days of the week inside the table */\n    tableHeadClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell inside the table header */\n    tableHeadCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box */\n    tableBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table row */\n    tableRowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell */\n    tableCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby month days are hidden */\n    tableCellInvisibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected */\n    tableCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range */\n    tableCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected */\n    tableCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection */\n    tableCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection */\n    tableCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection */\n    tableCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection */\n    tableCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day */\n    tableCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable */\n    tableCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable */\n    tableCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby days (prev/next month) are selectable */\n    tableCellNearbyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell of a row when at least one event is present */\n    tableCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the events container */\n    tableEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event */\n    tableEventClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator when a `variant` is specified */\n    tableEventVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator */\n    tableEventIndicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box when type is month */\n    monthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box when type is month */\n    monthBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table container when type is month */\n    monthTableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when type is month */\n    monthCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected when type is month */\n    monthCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range when type is month */\n    monthCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected when type is month */\n    monthCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection when type is month */\n    monthCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection when type is month */\n    monthCellWithinHoveredRangeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection when type is month */\n    monthCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection and cell is in range when type is month */\n    monthCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection when type is month */\n    monthCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day when type is month */\n    monthCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable when type is month */\n    monthCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable when type is month */\n    monthCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**Class of the events container when type is month */\n    monthCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"input\"]>(\"datepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"dropdown\"]>(\n                \"datepicker.dropdownClasses\",\n                {},\n            ),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"select\"]>(\"datepicker.selectClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { defaultDateFormatter, defaultDateParser } = useDatepickerMixins(props);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\n/** modelvalue of selected date */\nconst vmodel = defineModel<Date | Date[]>({ default: null });\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\n/** modelValue formated into string */\nconst formattedValue = computed(() =>\n    Array.isArray(vmodel.value)\n        ? (props.dateFormatter as any)([...vmodel.value], defaultDateFormatter)\n        : (props.dateFormatter as any)(vmodel.value, defaultDateFormatter),\n);\n\nconst isTypeMonth = computed(() => props.type === \"month\");\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        const isArray = Array.isArray(value);\n        const currentDate = isArray\n            ? value.length\n                ? value[value.length - 1]\n                : props.dateCreator()\n            : value\n              ? value\n              : props.dateCreator();\n        if (\n            !isArray ||\n            (isArray &&\n                Array.isArray(vmodel.value) &&\n                value.length > vmodel.value.length)\n        )\n            // updateInternalState\n            focusedDateData.value = {\n                day: currentDate.getDate(),\n                month: currentDate.getMonth(),\n                year: currentDate.getFullYear(),\n            };\n    },\n);\n\nwatch(\n    () => props.focusedDate,\n    (value) => {\n        if (value) {\n            focusedDateData.value = {\n                day: value.getDate(),\n                month: value.getMonth(),\n                year: value.getFullYear(),\n            };\n        }\n    },\n);\n\nconst _initialDate =\n    (Array.isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue) ||\n    props.focusedDate ||\n    props.dateCreator();\n\nif (\n    !props.modelValue &&\n    props.maxDate &&\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\n) {\n    _initialDate.setFullYear(props.maxDate.getFullYear());\n}\n\nconst focusedDateData = ref<FocusedDate>({\n    day: _initialDate.getDate(),\n    month: _initialDate.getMonth(),\n    year: _initialDate.getFullYear(),\n});\n\n/*\n * Emit input event on month and/or year change\n */\nwatch(\n    () => focusedDateData.value.month,\n    (value) => emits(\"change-month\", value),\n);\nwatch(\n    () => focusedDateData.value.year,\n    (value) => emits(\"change-year\", value),\n);\n\nconst computedMonthNames = computed(() =>\n    Array.isArray(props.monthNames)\n        ? props.monthNames\n        : getMonthNames(props.locale),\n);\n\nconst listOfMonths = computed(() => {\n    let minMonth = 0;\n    let maxMonth = 12;\n    if (\n        props.minDate &&\n        focusedDateData.value.year === props.minDate.getFullYear()\n    ) {\n        minMonth = props.minDate.getMonth();\n    }\n    if (\n        props.maxDate &&\n        focusedDateData.value.year === props.maxDate.getFullYear()\n    ) {\n        maxMonth = props.maxDate.getMonth();\n    }\n    return computedMonthNames.value.map((name, index) => ({\n        name: name,\n        index: index,\n        disabled: index < minMonth || index > maxMonth,\n    }));\n});\n\nconst computedDayNames = computed(() => {\n    if (Array.isArray(props.dayNames)) return props.dayNames;\n    return getWeekdayNames(props.locale);\n});\n\n/*\n * Returns an array of years for the year dropdown. If earliest/latest\n * dates are set by props, range of years will fall within those dates.\n */\nconst listOfYears = computed(() => {\n    let latestYear = focusedDateData.value.year + props.yearsRange[1];\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\n        latestYear = Math.max(\n            props.maxDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    let earliestYear = focusedDateData.value.year + props.yearsRange[0];\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\n        earliestYear = Math.min(\n            props.minDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    return Array.from(\n        { length: latestYear - earliestYear + 1 || 1 },\n        (value, index) => earliestYear + index,\n    ).reverse();\n});\n\nconst showPrev = computed(() => {\n    if (!props.minDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year > props.minDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.minDate.getFullYear(),\n        props.minDate.getMonth(),\n    );\n    return dateToCheck > date;\n});\n\n/**\n * Either decrement month by 1 if not January or decrement year by 1\n * and set month to 11 (December) or decrement year when 'month'\n */\nfunction prev(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        if (focusedDateData.value.month > 0) {\n            focusedDateData.value.month -= 1;\n        } else {\n            focusedDateData.value.month = 11;\n            focusedDateData.value.year -= 1;\n        }\n    }\n}\n\nconst showNext = computed(() => {\n    if (!props.maxDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year < props.maxDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.maxDate.getFullYear(),\n        props.maxDate.getMonth(),\n    );\n    return dateToCheck < date;\n});\n\n/**\n * Either increment month by 1 if not December or increment year by 1\n * and set month to 0 (January) or increment year when 'month'\n */\nfunction next(): void {\n    if (props.disabled) return;\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        if (focusedDateData.value.month < 11) {\n            focusedDateData.value.month += 1;\n        } else {\n            focusedDateData.value.month = 0;\n            focusedDateData.value.year += 1;\n        }\n    }\n}\n\nfunction formatNative(value: Date | Date[]): string {\n    if (Array.isArray(value)) value = value[0];\n    const date = new Date(value);\n    // return null if no value is given or value can't parse to proper date\n    if (!value || !date || isNaN(date.getTime())) return null;\n\n    if (isTypeMonth.value) {\n        // Format date into string 'YYYY-MM'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        return year + \"-\" + ((month < 10 ? \"0\" : \"\") + month);\n    } else {\n        // Format date into string 'YYYY-MM-DD'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day)\n        );\n    }\n}\n\n// --- Event Handler ---\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.dateParser as any)(value, defaultDateParser);\n\n    const isValid =\n        isDate(date) ||\n        (Array.isArray(date) &&\n            date.length === 2 &&\n            isDate(date[0]) &&\n            isDate(date[1]));\n\n    vmodel.value = isValid ? date : null;\n}\n\n/** Parse date from string */\nfunction onChangeNativePicker(value: string): void {\n    const s = value ? value.split(\"-\") : [];\n    if (s.length === 3) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1]) - 1;\n        const day = parseInt(s[2]);\n        vmodel.value = new Date(year, month, day);\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-dpck\"],\n    [\n        \"sizeClass\",\n        \"o-dpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-dpck--mobile\", null, isMobile],\n    [\"expandedClass\", \"o-dpck--expanded\", null, computed(() => props.expanded)],\n);\n\nconst headerClasses = defineClasses([\"headerClass\", \"o-dpck__header\"]);\n\nconst headerButtonsClasses = defineClasses(\n    [\"headerButtonsClass\", \"o-dpck__header__buttons\"],\n    [\n        \"headerButtonsSizeClass\",\n        \"o-dpck__header__buttons--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst prevButtonClasses = defineClasses([\n    \"prevButtonClass\",\n    \"o-dpck__header__previous\",\n]);\n\nconst nextButtonClasses = defineClasses([\n    \"nextButtonClass\",\n    \"o-dpck__header__next\",\n]);\n\nconst listsClasses = defineClasses([\"listsClass\", \"o-dpck__header__list\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-dpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-dpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"datepicker\"\n        :value=\"vmodel\"\n        :picker=\"props\"\n        :formatted-value=\"formattedValue\"\n        :native-type=\"!isTypeMonth ? 'date' : 'month'\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxDate)\"\n        :native-min=\"formatNative(minDate)\"\n        :stay-open=\"multiple\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <header :class=\"headerClasses\">\n            <!--\n                @slot Override the header\n            -->\n            <slot name=\"header\">\n                <div :class=\"headerButtonsClasses\">\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"prevButtonClasses\"\n                        :disabled=\"!showPrev\"\n                        :aria-label=\"ariaPreviousLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconPrev\"\n                        outlined\n                        @click.prevent=\"prev\"\n                        @keydown.enter.prevent=\"prev\"\n                        @keydown.space.prevent=\"prev\" />\n\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"nextButtonClasses\"\n                        :disabled=\"!showNext\"\n                        :aria-label=\"ariaNextLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconNext\"\n                        outlined\n                        @click.prevent=\"next\"\n                        @keydown.enter.prevent=\"next\"\n                        @keydown.space.prevent=\"next\" />\n\n                    <div :class=\"listsClasses\">\n                        <o-select\n                            v-if=\"!isTypeMonth\"\n                            v-model=\"focusedDateData.month\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"month in listOfMonths\"\n                                :key=\"month.name\"\n                                :value=\"month.index\"\n                                :disabled=\"month.disabled\">\n                                {{ month.name }}\n                            </option>\n                        </o-select>\n                        <o-select\n                            v-model=\"focusedDateData.year\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"year in listOfYears\"\n                                :key=\"year\"\n                                :value=\"year\">\n                                {{ year }}\n                            </option>\n                        </o-select>\n                    </div>\n                </div>\n            </slot>\n        </header>\n        <!--\n            @slot Override the body\n        -->\n        <slot name=\"body\">\n            <o-datepicker-month\n                v-if=\"isTypeMonth\"\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n            <o-datepicker-table\n                v-else\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :day-names=\"computedDayNames\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n        </slot>\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datepicker from \"./Datepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datepicker specific types */\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\n\n/** export datepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datepicker);\n    },\n} as Plugin;\n\n/** export datepicker components */\nexport { Datepicker as ODatepicker };\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { TimepickerProps } from \"./types\";\n\nconst AM = \"AM\" as const;\nconst PM = \"PM\" as const;\nconst HOUR_FORMAT_24 = \"24\" as const;\nconst HOUR_FORMAT_12 = \"12\" as const;\n\nexport function useTimepickerMixins(props: TimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const isHourFormat24 = computed(\n        () =>\n            (props.hourFormat && props.hourFormat === HOUR_FORMAT_24) ||\n            (!props.hourFormat && !localeOptions.value.hour12),\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.timeCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) {\n                return dayPeriod.value;\n            }\n        }\n        return PM;\n    });\n\n    const meridiens = computed(() => [amString.value, pmString.value]);\n\n    const hourLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const minuteLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const secondLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\n            );\n            if (literal) return literal.value;\n        }\n        return undefined;\n    });\n\n    function defaultTimeFormatter(time: Date): string {\n        return dtf.value.format(time);\n    }\n\n    function defaultTimeParser(time: string): Date {\n        if (!time) return null;\n\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = dtf.value\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") {\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${amString.value}|${\n                            pmString.value\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const timeGroups = matchWithGroups(formatRegex, time);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            timeGroups.hour = timeGroups.hour\n                ? parseInt(timeGroups.hour, 10)\n                : null;\n            timeGroups.minute = timeGroups.minute\n                ? parseInt(timeGroups.minute, 10)\n                : null;\n            timeGroups.second = timeGroups.second\n                ? parseInt(timeGroups.second, 10)\n                : null;\n            if (\n                timeGroups.hour &&\n                timeGroups.hour >= 0 &&\n                timeGroups.hour < 24 &&\n                timeGroups.minute &&\n                timeGroups.minute >= 0 &&\n                timeGroups.minute < 59\n            ) {\n                if (\n                    timeGroups.dayPeriod &&\n                    (timeGroups.dayPeriod.toLowerCase() ===\n                        pmString.value.toLowerCase() ||\n                        timeGroups.dayPeriod.toLowerCase() ===\n                            PM.toLowerCase()) &&\n                    timeGroups.hour < 12\n                ) {\n                    timeGroups.hour += 12;\n                }\n                const date = sampleTime.value;\n                date.setHours(timeGroups.hour);\n                date.setMinutes(timeGroups.minute);\n                date.setSeconds(timeGroups.second || 0);\n                return date;\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        let am = false;\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            const dateString12 = time.split(\" \");\n            time = dateString12[0];\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\n        }\n        const timeSplit = time.split(\":\");\n        let hours = parseInt(timeSplit[0], 10);\n        const minutes = parseInt(timeSplit[1], 10);\n        const seconds = props.enableSeconds ? parseInt(timeSplit[2], 10) : 0;\n        if (\n            isNaN(hours) ||\n            hours < 0 ||\n            hours > 23 ||\n            (props.hourFormat === HOUR_FORMAT_12 &&\n                (hours < 1 || hours > 12)) ||\n            isNaN(minutes) ||\n            minutes < 0 ||\n            minutes > 59\n        ) {\n            return null;\n        }\n        const date = sampleTime.value;\n        date.setSeconds(seconds);\n        date.setMinutes(minutes);\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            if (am && hours === 12) {\n                hours = 0;\n            } else if (!am && hours !== 12) {\n                hours += 12;\n            }\n        }\n        date.setHours(hours);\n        return new Date(date.getTime());\n    }\n\n    return {\n        defaultTimeFormatter,\n        defaultTimeParser,\n        pmString,\n        amString,\n        meridiens,\n        isHourFormat24,\n        hourLiteral,\n        minuteLiteral,\n        secondLiteral,\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia, getActiveClasses } from \"@/composables\";\n\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile\n * @displayName Timepicker\n * @style _timepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTimepicker\",\n    configField: \"timepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date as PropType<Date>, default: undefined },\n    /** The active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** Min time to select */\n    minTime: { type: Date as PropType<Date>, default: undefined },\n    /** Max time to select */\n    maxTime: { type: Date as PropType<Date>, default: undefined },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Size of the button\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"timepicker.size\"),\n    },\n    hourFormat: {\n        type: [String, Number] as PropType<\"12\" | \"24\" | 12 | 24>,\n        validator: (value: string | number) =>\n            [\"12\", \"24\", 12, 24, undefined].includes(value),\n        default: undefined,\n    },\n    incrementHours: { type: Number, default: 1 },\n    incrementMinutes: { type: Number, default: 1 },\n    incrementSeconds: { type: Number, default: 1 },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.closeOnClick\", true),\n    },\n    enableSeconds: { type: Boolean, default: false },\n    defaultMinutes: { type: Number, default: undefined },\n    defaultSeconds: { type: Number, default: undefined },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    timeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"timepicker.timeFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    timeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"timepicker.timeParser\", defaultFunction)(date),\n    },\n    /** time creator function, default is `new Date()` */\n    timeCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"timepicker.timeCreator\", () => new Date())(),\n    },\n    /** Define a list of times which can not be selected */\n    unselectableTimes: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Reset the time inputs when meridian changes */\n    resetOnMeridianChange: {\n        type: Boolean,\n        default: false,\n    },\n    /** Dropdown trapFocus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.trapFocus\", true),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileModal\", true),\n    },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"timepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"timepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"timepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"timepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"timepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker separator */\n    separatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.dropdownClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.selectClasses\", {}),\n    },\n});\n\ndefineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst {\n    defaultTimeFormatter,\n    defaultTimeParser,\n    pmString,\n    amString,\n    meridiens,\n    isHourFormat24,\n    hourLiteral,\n    minuteLiteral,\n    secondLiteral,\n} = useTimepickerMixins(props);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\nconst vmodel = defineModel<Date>({ default: undefined });\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst hoursSelected = ref();\nconst minutesSelected = ref();\nconst secondsSelected = ref();\nconst meridienSelected = ref();\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n *   2. If it's invalid, validate again.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value) {\n            hoursSelected.value = value.getHours();\n            minutesSelected.value = value.getMinutes();\n            secondsSelected.value = value.getSeconds();\n            meridienSelected.value =\n                value.getHours() >= 12 ? pmString.value : amString.value;\n        } else {\n            hoursSelected.value = null;\n            minutesSelected.value = null;\n            secondsSelected.value = null;\n            meridienSelected.value = amString.value;\n        }\n    },\n    { immediate: true },\n);\n\n/** Format date into string */\nconst formattedValue = computed(() =>\n    (props.timeFormatter as any)(props.modelValue, defaultTimeFormatter),\n);\n\nconst nativeStep = computed(() => (props.enableSeconds ? \"1\" : null));\n\nwatch(\n    () => props.hourFormat,\n    () => {\n        if (hoursSelected.value !== null) {\n            meridienSelected.value =\n                hoursSelected.value >= 12 ? pmString.value : amString.value;\n        }\n    },\n);\n\nwatch(\n    () => props.locale,\n    (value) => {\n        // see updateInternalState default\n        if (!value) meridienSelected.value = amString.value;\n    },\n);\n\nfunction formatNumber(value: number, prependZero: boolean): string {\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\n}\n\nfunction pad(value: number): string {\n    return (value < 10 ? \"0\" : \"\") + value;\n}\n\nconst hours = computed(() => {\n    if (!props.incrementHours || props.incrementHours < 1)\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\n    const hours = [];\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\n        let value = i;\n        let label = value;\n        if (!isHourFormat24.value) {\n            value = i + 1;\n            label = value;\n            if (meridienSelected.value === amString.value) {\n                if (value === 12) {\n                    value = 0;\n                }\n            } else if (meridienSelected.value === pmString.value) {\n                if (value !== 12) {\n                    value += 12;\n                }\n            }\n        }\n        hours.push({\n            label: formatNumber(label, false),\n            value: value,\n        });\n    }\n    return hours;\n});\n\nconst minutes = computed(() => {\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\n    const minutes = [];\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\n        minutes.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return minutes;\n});\n\nconst seconds = computed(() => {\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\n        throw new Error(\"Second increment cannot be null or less than 1.\");\n    const seconds = [];\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\n        seconds.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return seconds;\n});\n\nfunction isHourDisabled(hour: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const noMinutesAvailable = minutes.value.every((minute) => {\n            return isMinuteDisabledForHour(hour, minute.value);\n        });\n        disabled = hour < minHours || noMinutesAvailable;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            disabled = hour > maxHours;\n        }\n    }\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hour);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(secondsSelected.value);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && secondsSelected.value !== null) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else if (minutesSelected.value !== null) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value\n                    );\n                }\n                return false;\n            });\n            if (unselectable.length > 0) {\n                disabled = true;\n            } else {\n                disabled = minutes.value.every((minute) => {\n                    return (\n                        (props.unselectableTimes as Date[]).filter((time) => {\n                            return (\n                                time.getHours() === hour &&\n                                time.getMinutes() === minute.value\n                            );\n                        }).length > 0\n                    );\n                });\n            }\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const minMinutes = props.minTime.getMinutes();\n        disabled = hour === minHours && minute < minMinutes;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            const maxMinutes = props.maxTime.getMinutes();\n            disabled = hour === maxHours && minute > maxMinutes;\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabled(minute: number): boolean {\n    if (hoursSelected.value === null) return false;\n\n    let disabled = isHourDisabled(hoursSelected.value)\n        ? true\n        : isMinuteDisabledForHour(hoursSelected.value, minute);\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minute);\n            date.setSeconds(secondsSelected.value);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && secondsSelected.value !== null) {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute\n                    );\n                }\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n}\n\nfunction isSecondDisabled(second: number): boolean {\n    if (minutesSelected.value == null) return false;\n    let disabled = false;\n\n    if (isMinuteDisabled(minutesSelected.value)) {\n        disabled = true;\n    } else {\n        if (props.minTime) {\n            const minHours = props.minTime.getHours();\n            const minMinutes = props.minTime.getMinutes();\n            const minSeconds = props.minTime.getSeconds();\n            disabled =\n                hoursSelected.value === minHours &&\n                minutesSelected.value === minMinutes &&\n                second < minSeconds;\n        }\n        if (props.maxTime) {\n            if (!disabled) {\n                const maxHours = props.maxTime.getHours();\n                const maxMinutes = props.maxTime.getMinutes();\n                const maxSeconds = props.maxTime.getSeconds();\n                disabled =\n                    hoursSelected.value === maxHours &&\n                    minutesSelected.value === maxMinutes &&\n                    second > maxSeconds;\n            }\n        }\n    }\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(second);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                return (\n                    time.getHours() === hoursSelected.value &&\n                    time.getMinutes() === minutesSelected.value &&\n                    time.getSeconds() === second\n                );\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n}\n\nfunction isMeridienDisabled(meridienString: string): boolean {\n    const offset = meridienString == \"AM\" ? 0 : 12;\n    for (let i = 0; i < 12; i++) {\n        if (!isHourDisabled(i + offset)) return false;\n    }\n    return true;\n}\n\nfunction updateDateSelected(\n    hours: number,\n    minutes: number,\n    seconds: number,\n    meridiens,\n): void {\n    if (\n        hours != null &&\n        minutes != null &&\n        ((!isHourFormat24.value && meridiens !== null) || isHourFormat24.value)\n    ) {\n        let time: Date = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        time.setHours(hours);\n        time.setMinutes(minutes);\n        time.setSeconds(seconds);\n        if (!isNaN(time.getTime())) {\n            vmodel.value = new Date(time.getTime());\n        }\n    }\n}\n\n/** Format date into string 'HH-MM-SS'*/\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    // return null if no value is given or value can't parse to proper date\n    if (!value || !date || isNaN(date.getTime())) return null;\n\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return (\n        formatNumber(hours, true) +\n        \":\" +\n        formatNumber(minutes, true) +\n        \":\" +\n        formatNumber(seconds, true)\n    );\n}\n\n// --- Event Handler ---\n\nfunction onMeridienChange(value: string): void {\n    if (hoursSelected.value !== null && props.resetOnMeridianChange) {\n        hoursSelected.value = null;\n        minutesSelected.value = null;\n        secondsSelected.value = null;\n        vmodel.value = null;\n    } else if (hoursSelected.value !== null) {\n        if (value === pmString.value) hoursSelected.value += 12;\n        else if (value === amString.value) hoursSelected.value -= 12;\n    }\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        value,\n    );\n}\n\nfunction onHoursChange(value: string): void {\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\n        minutesSelected.value = props.defaultMinutes;\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        parseInt(value, 10),\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onMinutesChange(value: string): void {\n    if (!secondsSelected.value && props.defaultSeconds)\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        hoursSelected.value,\n        parseInt(value, 10),\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onSecondsChange(value: string): void {\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        parseInt(value, 10),\n        meridienSelected.value,\n    );\n}\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.timeParser as any)(value, defaultTimeParser);\n    vmodel.value = date ? date : null;\n}\n\n/** Parse time from string */\nfunction onChangeNativePicker(date: string): void {\n    if (date) {\n        let time = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        const t = date.split(\":\");\n        time.setHours(parseInt(t[0], 10));\n        time.setMinutes(parseInt(t[1], 10));\n        time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\n        vmodel.value = new Date(time.getTime());\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst selectSelectClasses = defineClasses([\n    \"selectClasses.selectClass\",\n    \"o-tpck__select\",\n]);\n\nconst selectPlaceholderClasses = defineClasses([\n    \"selectClasses.placeholderClass\",\n    \"o-tpck__select-placeholder\",\n]);\n\nconst selectBind = computed(() => ({\n    \"select-class\": getActiveClasses(selectSelectClasses.value),\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses.value),\n    ...props.selectClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tpck\"],\n    [\n        \"sizeClass\",\n        \"o-tpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-tpck--mobile\", null, isMobile],\n);\n\nconst separatorClasses = defineClasses([\"separatorClass\", \"o-tpck__separtor\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-tpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-tpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"timepicker\"\n        :value=\"vmodel\"\n        :picker=\"props\"\n        :formatted-value=\"formattedValue\"\n        native-type=\"time\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxTime)\"\n        :native-min=\"formatNative(minTime)\"\n        :native-step=\"nativeStep\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"hoursSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onHoursChange($event.target.value)\">\n            <option\n                v-for=\"hour in hours\"\n                :key=\"hour.value\"\n                :value=\"hour.value\"\n                :disabled=\"isHourDisabled(hour.value)\">\n                {{ hour.label }}\n            </option>\n        </o-select>\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"minutesSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onMinutesChange($event.target.value)\">\n            <option\n                v-for=\"minute in minutes\"\n                :key=\"minute.value\"\n                :value=\"minute.value\"\n                :disabled=\"isMinuteDisabled(minute.value)\">\n                {{ minute.label }}\n            </option>\n        </o-select>\n        <template v-if=\"enableSeconds\">\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\n            <o-select\n                v-bind=\"selectBind\"\n                v-model=\"secondsSelected\"\n                override\n                :disabled=\"disabled\"\n                placeholder=\"00\"\n                @change=\"onSecondsChange($event.target.value)\">\n                <option\n                    v-for=\"second in seconds\"\n                    :key=\"second.value\"\n                    :value=\"second.value\"\n                    :disabled=\"isSecondDisabled(second.value)\">\n                    {{ second.label }}\n                </option>\n            </o-select>\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\n        </template>\n        <o-select\n            v-if=\"!isHourFormat24\"\n            v-bind=\"selectBind\"\n            v-model=\"meridienSelected\"\n            override\n            :disabled=\"disabled\"\n            @change=\"onMeridienChange($event.target.value)\">\n            <option\n                v-for=\"meridien in meridiens\"\n                :key=\"meridien\"\n                :value=\"meridien\"\n                :disabled=\"isMeridienDisabled(meridien)\">\n                {{ meridien }}\n            </option>\n        </o-select>\n\n        <footer v-if=\"$slots.default\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional content on footer\n            -->\n            <slot />\n        </footer>\n    </OPickerWrapper>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { matchWithGroups } from \"../datepicker/utils\";\n\nimport type { DatepickerProps } from \"../datepicker/types\";\nimport type { TimepickerProps } from \"../timepicker/types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\n * @displayName Datetimepicker\n * @style _datetimepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatetimepicker\",\n    configField: \"datetimepicker\",\n    inheritAttrs: false,\n});\n\nconst AM = \"AM\";\nconst PM = \"PM\";\nconst HOUR_FORMAT_24 = \"24\";\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date, default: undefined },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Define props for the underlying datepicker component */\n    datepicker: {\n        type: Object as PropType<DatepickerProps>,\n        default: undefined,\n    },\n    /** Define props for the underlying timepicker component */\n    timepicker: {\n        type: Object as PropType<TimepickerProps>,\n        default: undefined,\n    },\n    /** Min date to select */\n    minDatetime: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDatetime: { type: Date, default: undefined },\n    /**\n     * Size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datetimepicker.size\"),\n    } /** Makes input full width when inside a grouped or addon field */,\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Display datetimepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    datetimeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    datetimeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    datetimeCreator: {\n        type: Function as PropType<(date: Date) => Date>,\n        default: (date: Date) =>\n            getOption(\n                \"datetimepicker.datetimeCreator\",\n                (d: Date) => new Date(d),\n            )(date),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datetimepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datetimepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the Datepicker wrapper */\n    datepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker wrapper */\n    timepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst timepickerProps = ref<TimepickerProps>(props.timepicker);\nwatch(\n    () => props.timepicker,\n    (value) => (timepickerProps.value = value),\n    { deep: true },\n);\nconst datepickerProps = ref<DatepickerProps>(props.datepicker);\nwatch(\n    () => props.datepicker,\n    (value) => (datepickerProps.value = value),\n    { deep: true },\n);\n\nconst isMobileNative = computed(\n    () => props.mobileNative && isMobileAgent.any(),\n);\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\n);\n\n// use form input functionality for native input\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\n    elementRef,\n    emits,\n    props,\n);\n\nwatch([() => isMobileNative.value, () => props.inline], () => {\n    // $refs attached, it's time to refresh datepicker (input)\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\n});\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst vmodel = defineModel<Date>({ default: undefined });\n\nfunction updateVModel(value: Date | Date[]): void {\n    if (!value) {\n        vmodel.value = undefined;\n        return;\n    }\n    if (Array.isArray(value)) {\n        updateVModel(value[0]);\n        return;\n    }\n    let date = new Date(value.getTime());\n    if (!props.modelValue) {\n        date = props.datetimeCreator(value);\n    } else {\n        // restore time part\n        if (\n            (value.getDate() !== props.modelValue.getDate() ||\n                value.getMonth() !== props.modelValue.getMonth() ||\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\n            value.getHours() === 0 &&\n            value.getMinutes() === 0 &&\n            value.getSeconds() === 0\n        ) {\n            date.setHours(\n                props.modelValue.getHours(),\n                props.modelValue.getMinutes(),\n                props.modelValue.getSeconds(),\n                0,\n            );\n        }\n    }\n    // check min and max range\n    if (props.minDatetime && date < props.minDatetime) {\n        date = props.minDatetime;\n    } else if (props.maxDatetime && date > props.maxDatetime) {\n        date = props.maxDatetime;\n    }\n    vmodel.value = new Date(date.getTime());\n}\n\nconst minDate = computed(() => {\n    if (!props.minDatetime)\n        return datepickerProps.value ? datepickerProps.value.minDate : null;\n    return new Date(\n        props.minDatetime.getFullYear(),\n        props.minDatetime.getMonth(),\n        props.minDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\nconst maxDate = computed(() => {\n    if (!props.maxDatetime)\n        return datepickerProps.value ? datepickerProps.value.maxDate : null;\n    return new Date(\n        props.maxDatetime.getFullYear(),\n        props.maxDatetime.getMonth(),\n        props.maxDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\n// Only enable min/max time if local (not necessarily UTC) date portion matches\nconst minTime = computed(() => {\n    if (\n        !props.minDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\n        vmodel.value.getDate() != props.minDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.minTime : null;\n    }\n    return props.minDatetime;\n});\n\nconst maxTime = computed(() => {\n    if (\n        !props.maxDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\n        vmodel.value.getDate() != props.maxDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.maxTime : null;\n    }\n    return props.maxDatetime;\n});\n\nconst datepickerSize = computed(() =>\n    datepickerProps.value?.size ? datepickerProps.value.size : props.size,\n);\n\nconst timepickerSize = computed(() =>\n    timepickerProps.value?.size ? timepickerProps.value.size : props.size,\n);\n\nconst timepickerDisabled = computed(() =>\n    timepickerProps.value?.disabled\n        ? timepickerProps.value.disabled\n        : props.disabled,\n);\n\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    if (value && !isNaN(date.getTime())) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day) +\n            \"T\" +\n            ((hours < 10 ? \"0\" : \"\") + hours) +\n            \":\" +\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\n            \":\" +\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\n        );\n    }\n    return \"\";\n}\n\n// --- Time Format Feature ---\n\nconst enableSeconds = computed(() =>\n    timepickerRef.value?.enableSeconds\n        ? timepickerRef.value.enableSeconds\n        : false,\n);\n\nconst localeOptions = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: \"numeric\",\n            month: \"numeric\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: enableSeconds.value ? \"numeric\" : undefined,\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\n);\n\nconst isHourFormat24 = computed(\n    () =>\n        (timepickerProps.value?.hourFormat &&\n            timepickerProps.value.hourFormat === HOUR_FORMAT_24) ||\n        (!timepickerProps.value?.hourFormat && !localeOptions.value.hour12),\n);\n\nconst dtf = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: localeOptions.value.year || \"numeric\",\n            month: localeOptions.value.month || \"numeric\",\n            day: localeOptions.value.day || \"numeric\",\n            hour: localeOptions.value.hour || \"numeric\",\n            minute: localeOptions.value.minute || \"numeric\",\n            second: enableSeconds.value\n                ? localeOptions.value.second || \"numeric\"\n                : undefined,\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n        }),\n);\n\nconst amString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(10);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return AM;\n});\n\nconst pmString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(20);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return PM;\n});\n\nfunction defaultDatetimeParser(value: string): Date {\n    function defaultParser(date: string): Date {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\n            if (timepickerRef.value) {\n                dayPeriods.push(amString.value);\n                dayPeriods.push(pmString.value);\n            }\n            const parts = dtf.value.formatToParts(new Date());\n            const formatRegex = parts\n                .map((part, idx) => {\n                    if (part.type === \"literal\") {\n                        if (\n                            idx + 1 < parts.length &&\n                            parts[idx + 1].type === \"hour\"\n                        ) {\n                            return `[^\\\\d]+`;\n                        }\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\n                            \"|\",\n                        )})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const datetimeGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                datetimeGroups.year &&\n                datetimeGroups.year.length === 4 &&\n                datetimeGroups.month &&\n                datetimeGroups.month <= 12 &&\n                datetimeGroups.day &&\n                datetimeGroups.day <= 31 &&\n                datetimeGroups.hour &&\n                datetimeGroups.hour >= 0 &&\n                datetimeGroups.hour < 24 &&\n                datetimeGroups.minute &&\n                datetimeGroups.minute >= 0 &&\n                datetimeGroups.minute <= 59\n            ) {\n                const d = new Date(\n                    datetimeGroups.year,\n                    datetimeGroups.month - 1,\n                    datetimeGroups.day,\n                    datetimeGroups.hour,\n                    datetimeGroups.minute,\n                    datetimeGroups.second || 0,\n                );\n                return d;\n            }\n        }\n\n        return new Date(Date.parse(date));\n    }\n    const date = (props.datetimeParser as any)(value, defaultParser);\n    return date;\n}\n\nfunction defaultDatetimeFormatter(date: Date): string {\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\n        date ? dtf.value.format(date) : \"\",\n    );\n}\n\n// --- Event Handler ---\n\n/** Parse date from string */\nfunction onChangeNativePicker(event: Event): void {\n    const date = (event.target as HTMLInputElement).value;\n    const s = date ? date.split(/\\D/) : [];\n    if (s.length >= 5) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1], 10) - 1;\n        const day = parseInt(s[2], 10);\n        const hours = parseInt(s[3], 10);\n        const minutes = parseInt(s[4], 10);\n        // Seconds are omitted intentionally; they are unsupported by input\n        // type=datetime-local and cause the control to fail native validation\n        updateVModel(new Date(year, month, day, hours, minutes));\n    } else {\n        updateVModel(null);\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst datepickerWrapperClasses = defineClasses([\n    \"datepickerWrapperClass\",\n    \"o-dtpck__date\",\n]);\n\nconst timepickerWrapperClasses = defineClasses([\n    \"timepickerWrapperClass\",\n    \"o-dtpck__time\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-datepicker\n        v-if=\"!isMobileNative || inline\"\n        ref=\"datepickerRef\"\n        v-bind=\"{ ...$attrs, ...datepicker }\"\n        v-model:active=\"isActive\"\n        :model-value=\"vmodel\"\n        data-oruga=\"datetimepicker\"\n        :class=\"datepickerWrapperClasses\"\n        :rounded=\"rounded\"\n        :open-on-focus=\"openOnFocus\"\n        :position=\"position\"\n        :inline=\"inline\"\n        :readonly=\"readonly\"\n        :expanded=\"expanded\"\n        :close-on-click=\"false\"\n        :date-formatter=\"defaultDatetimeFormatter\"\n        :date-parser=\"defaultDatetimeParser\"\n        :min-date=\"minDate\"\n        :max-date=\"maxDate\"\n        :icon=\"icon\"\n        :icon-right=\"iconRight\"\n        :icon-right-clickable=\"iconRightClickable\"\n        :icon-pack=\"iconPack\"\n        :size=\"datepickerSize\"\n        :placeholder=\"placeholder\"\n        :range=\"false\"\n        :disabled=\"disabled\"\n        :mobile-native=\"isMobileNative\"\n        :locale=\"locale\"\n        :teleport=\"teleport\"\n        @update:model-value=\"updateVModel\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change-month=\"$emit('change-month', $event)\"\n        @change-year=\"$emit('change-year', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template #footer>\n            <div :class=\"timepickerWrapperClasses\">\n                <o-timepicker\n                    ref=\"timepickerRef\"\n                    v-bind=\"timepicker\"\n                    v-model=\"vmodel\"\n                    inline\n                    :readonly=\"readonly\"\n                    :min-time=\"minTime\"\n                    :max-time=\"maxTime\"\n                    :size=\"timepickerSize\"\n                    :disabled=\"timepickerDisabled\"\n                    :mobile-native=\"isMobileNative\"\n                    :locale=\"locale\" />\n            </div>\n            <template v-if=\"$slots.footer !== undefined\">\n                <!--\n                    @slot Define an additional footer\n                -->\n                <slot name=\"footer\" />\n            </template>\n        </template>\n    </o-datepicker>\n\n    <!-- Native Picker -->\n    <o-input\n        v-else\n        v-bind=\"$attrs\"\n        ref=\"nativeInputRef\"\n        type=\"datetime-local\"\n        autocomplete=\"off\"\n        :value=\"formatNative(vmodel)\"\n        :max=\"formatNative(maxDate)\"\n        :min=\"formatNative(minDate)\"\n        :placeholder=\"placeholder\"\n        :size=\"datepickerSize\"\n        :icon-pack=\"iconPack\"\n        :icon=\"icon\"\n        :rounded=\"rounded\"\n        :disabled=\"disabled\"\n        :readonly=\"false\"\n        :use-html5-validation=\"false\"\n        @change=\"onChangeNativePicker\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\" />\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datetimepicker from \"./Datetimepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datetimepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datetimepicker);\n    },\n} as Plugin;\n\n/** export datetimepicker components */\nexport { Datetimepicker as ODatetimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Dropdown from \"./Dropdown.vue\";\nimport DropdownItem from \"./DropdownItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export dropdown plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Dropdown);\n        registerComponent(app, DropdownItem);\n    },\n} as Plugin;\n\n/** export dropdown components */\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\n","import type { App, Plugin } from \"vue\";\n\nimport Field from \"./Field.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export field plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Field);\n    },\n} as Plugin;\n\n/** export field components */\nexport { Field as OField };\n","import type { App, Plugin } from \"vue\";\n\nimport Icon from \"./Icon.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export icon plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Icon);\n    },\n} as Plugin;\n\n/** export icon components */\nexport { Icon as OIcon };\n","import type { App, Plugin } from \"vue\";\n\nimport Input from \"./Input.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export input plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Input);\n    },\n} as Plugin;\n\n/** export input components */\nexport { Input as OInput };\n","<script setup lang=\"ts\">\nimport { ref, onMounted, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProgrammaticComponent,\n    usePropBinding,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A simple loading overlay\n * @displayName Loading\n * @style _loading.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OLoading\",\n    configField: \"loading\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether loading is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Loader will overlay the full page. */\n    fullPage: { type: Boolean, default: true },\n    /** Notification label, unnecessary when default slot is used. */\n    label: { type: String, default: undefined },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"loading.animation\", \"fade\"),\n    },\n    /** Is Loading cancable by pressing escape or clicking outside. */\n    cancelable: { type: Boolean, default: false },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /** Icon name to show, unnecessary when default slot is used. */\n    icon: {\n        type: String,\n        default: () => getOption(\"loading.icon\", \"loading\"),\n    },\n    /** Enable spin effect on icon */\n    iconSpin: {\n        type: Boolean,\n        default: () => getOption(\"loading.iconSpin\", true),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"loading.iconSize\", \"medium\"),\n    },\n    /**\n     * DOM element where the loading component will be created on (for programmatic usage).\n     * Note that this also changes fullPage to false.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"loading.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when fullpage */\n    fullPageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the loading overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * fullPage prop two-way binding\n     * @param value {boolean} - updated fullPage prop\n     */\n    (e: \"update:fullPage\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\nconst displayInFullPage = usePropBinding(\"fullPage\", props, emits);\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"outside\"],\n    },\n);\n\nonMounted(() => {\n    if (props.programmatic && props.container) displayInFullPage.value = false;\n});\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-load\"],\n    [\"fullPageClass\", \"o-load--fullpage\", null, displayInFullPage],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-load__overlay\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-load__icon\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-load__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <div\n            v-if=\"isActive\"\n            ref=\"rootRef\"\n            data-oruga=\"loading\"\n            role=\"dialog\"\n            :class=\"rootClasses\">\n            <div\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"cancel('outside')\" />\n            <!-- \n                @slot Override icon and label\n                @binding {close} close - function to close the component\n            -->\n            <slot :close=\"close\">\n                <o-icon\n                    :icon=\"icon\"\n                    :spin=\"iconSpin\"\n                    :size=\"iconSize\"\n                    :class=\"iconClasses\"\n                    both />\n                <span v-if=\"label\" :class=\"labelClasses\">\n                    {{ label }}\n                </span>\n            </slot>\n        </div>\n    </transition>\n</template>\n","export default class InstanceRegistry<T> {\n    entries: Array<T>;\n\n    constructor() {\n        this.entries = [];\n    }\n\n    add(entry: T): void {\n        this.entries.push(entry);\n    }\n\n    remove(entry: T): void {\n        const index = this.entries.indexOf(entry);\n        this.entries.splice(index, 1);\n    }\n\n    walk(callback: (value: T) => boolean | void): void {\n        // Walk a copy of the array so that the callback is allowed to remove the instance\n        this.entries = [...this.entries].filter((e) => {\n            const ret = callback(e);\n            return !(ret === true);\n        });\n    }\n}\n","import { createVNode, render } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport type { LoadingProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        loading: typeof LoadingProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Loading>();\n\ntype LoadingProgrammaticProps = Readonly<\n    string | (LoadingProps & OrugaOptions[\"loading\"])\n>;\n\nconst LoadingProgrammatic = {\n    open(params: LoadingProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      label: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.label)) {\n            slot = componentParams.label;\n            delete componentParams.label;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Loading, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default LoadingProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export loading specific types */\nexport type { LoadingProps } from \"./types\";\n\n/** export loading plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Loading);\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\n    },\n} as Plugin;\n\n/** export loading components */\nexport { LoadingProgrammatic, Loading as OLoading };\n","<script setup lang=\"ts\">\nimport { ref, computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type { MenuComponent, MenuItemComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple menu\n * @displayName Menu\n * @requires ./MenuItem.vue\n * @style _menu.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenu\",\n    configField: \"menu\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Menu label */\n    label: { type: String, default: undefined },\n    /** If sub menu items are collapsible */\n    accordion: { type: Boolean, default: true },\n    /** If the menu items are clickable */\n    activable: { type: Boolean, default: true },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.ariaRole\", \"menu\"),\n        validator: (value: string) =>\n            [\"menu\", \"list\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list label */\n    listLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootRef = ref();\n\n// provided data is a computed ref to enjure reactivity\nconst provideData = computed<MenuComponent>(() => ({\n    activable: props.activable,\n    accordion: props.accordion,\n    resetMenu,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<MenuItemComponent>(rootRef, {\n    data: provideData,\n});\n\nfunction resetMenu(excludedItems: ProviderItem[] = []): void {\n    childItems.value.forEach((item) => {\n        if (!excludedItems.map((i) => i?.identifier).includes(item.identifier))\n            item.data.reset();\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\n\nconst labelClasses = defineClasses([\"listLabelClass\", \"o-menu__label\"]);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"menu\" :class=\"rootClasses\">\n        <div v-if=\"label || $slots.label\" :class=\"labelClasses\">\n            <!-- \n                @slot Override icon and label\n            -->\n            <slot name=\"label\">\n                <o-icon\n                    v-if=\"icon\"\n                    :icon=\"icon\"\n                    :pack=\"iconPack\"\n                    :size=\"iconSize\" />\n                <span>{{ label }}</span>\n            </slot>\n        </div>\n        <ul :class=\"listClasses\" :role=\"ariaRole\">\n            <!--\n                @slot Place menu items here \n            -->\n            <slot />\n        </ul>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, toRaw, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProviderChild,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type {\n    MenuComponent,\n    MenuItemComponent,\n    MenuItemProvider,\n} from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A menu list item\n * @displayName Menu Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenuItem\",\n    configField: \"menu\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** The active state of the menu item, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Menu item label */\n    label: { type: String, default: undefined },\n    /** Menu item will be expanded */\n    expanded: { type: Boolean, default: false },\n    /** Menu item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    /** Transition name to apply on menu list */\n    animation: {\n        type: String,\n        default: () => getOption(\"menu.animation\", \"slide\"),\n    },\n    /** Menu item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"menu.menuTag\", \"button\"),\n    },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * @values listitem, menuitem\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.itemAriaRole\", \"menuitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the menu item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the active menu item */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled menu item */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon of menu item */\n    itemIconTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu item when is a submenu */\n    itemSubmenuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element of menu item */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\ndefineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * expanded prop two-way binding\n     * @param value {boolean} updated expanded prop\n     */\n    (e: \"update:expanded\", value: boolean): void;\n}>();\n\nconst providedData = computed<MenuItemComponent>(() => ({\n    reset,\n}));\n\n// inject functionalities and data from the parent menu component\nconst { parent, item } = useProviderChild<MenuComponent>({\n    data: providedData,\n});\n\n// inject functionalities and data from the parent menu-item component\nconst providedItem = useProviderChild<MenuItemProvider>({\n    key: \"menu-item\",\n    needParent: false,\n});\n\nconst itemParent = computed(() => providedItem.parent?.value);\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst isExpanded = defineModel<boolean>(\"expanded\", { default: false });\n\n/** template identifier */\nconst identifier = computed(() =>\n    itemParent.value\n        ? `menu-item-${providedItem.item.value.identifier}`\n        : `menu-${item.value.identifier}`,\n);\n\nfunction onClick(): void {\n    if (props.disabled) return;\n    triggerReset();\n    if (parent.value.accordion) isExpanded.value = !isExpanded.value;\n    if (parent.value.activable) isActive.value = !isActive.value;\n}\n\nfunction triggerReset(child?: ProviderItem): void {\n    // The point of this method is to collect references to the clicked item and any parent,\n    // this way we can skip resetting those elements.\n    if (typeof itemParent.value?.triggerReset === \"function\") {\n        itemParent.value.triggerReset(toRaw(item.value));\n    }\n    // else if not a sub item reset parent menu\n    else if (typeof parent.value.resetMenu === \"function\") {\n        parent.value.resetMenu([toRaw(item.value), child]);\n    }\n}\n\nfunction reset(): void {\n    if (parent.value.accordion) isExpanded.value = false;\n    if (parent.value.activable) isActive.value = false;\n}\n\nconst rootRef = ref();\n\n// provided data is a computed ref to enjure reactivity\nconst provideData = computed<MenuItemProvider>(() => ({\n    triggerReset,\n}));\n\n/** provide functionalities and data to child item components */\nuseProviderParent(rootRef, { key: \"menu-item\", data: provideData });\n\n// --- Computed Component Classes ---\n\nconst wrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-menu__item__wrapper\",\n]);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-menu__item\"],\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\n    [\n        \"itemDisabledClass\",\n        \"o-menu__item--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"itemIconTextClass\",\n        \"o-menu__item--icon-text\",\n        null,\n        computed(() => !!props.icon),\n    ],\n);\n\nconst submenuClasses = defineClasses([\n    \"itemSubmenuClass\",\n    \"o-menu__item__submenu\",\n]);\n</script>\n\n<template>\n    <li\n        ref=\"rootRef\"\n        :role=\"ariaRole\"\n        :class=\"wrapperClasses\"\n        :data-id=\"identifier\"\n        data-oruga=\"menu-item\"\n        aria-roledescription=\"item\">\n        <component\n            :is=\"tag\"\n            v-bind=\"$attrs\"\n            :class=\"itemClasses\"\n            role=\"button\"\n            :disabled=\"disabled\"\n            @keyup.enter=\"onClick()\"\n            @click=\"onClick()\">\n            <o-icon\n                v-if=\"icon\"\n                :icon=\"icon\"\n                :pack=\"iconPack\"\n                :size=\"iconSize\" />\n            <!-- \n                @slot Override label\n                @binding {boolean} expanded - item expanded state\n                @binding {boolean} active - item active state\n            -->\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\n                <span>{{ label }}</span>\n            </slot>\n        </component>\n\n        <!-- sub menu items -->\n        <template v-if=\"$slots.default\">\n            <transition :name=\"animation\">\n                <ul v-show=\"isExpanded\" :class=\"submenuClasses\">\n                    <!--\n                        @slot Place menu items here \n                    -->\n                    <slot />\n                </ul>\n            </transition>\n        </template>\n    </li>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Menu from \"./Menu.vue\";\nimport MenuItem from \"./MenuItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export menu plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Menu);\n        registerComponent(app, MenuItem);\n    },\n} as Plugin;\n\n/** export menu components */\nexport { Menu as OMenu, MenuItem as OMenuItem };\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    nextTick,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { getOption } from \"@/utils/config\";\nimport { removeElement, toCssDimension } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * Classic modal overlay to include any content you may need\n * @displayName Modal\n * @style _modal.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OModal\",\n    configField: \"modal\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Display modal as full screen */\n    fullScreen: { type: Boolean, default: false },\n    /** Text content, unnecessary when default slot is used */\n    content: { type: String, default: undefined },\n    /** Width of the Modal */\n    width: {\n        type: [String, Number],\n        default: () => getOption(\"modal.width\", 960),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"modal.animation\", \"zoom-out\"),\n    },\n    /**\n     * Is Modal cancleable by clicking 'X', pressing escape or clicking outside\n     * @values escape, x, outside, button, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"modal.cancelable\", [\"escape\", \"x\", \"outside\", \"button\"]),\n    },\n    /** Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"modal.scroll\", \"keep\"),\n        validator: (value: string) => [\"keep\", \"clip\"].indexOf(value) >= 0,\n    },\n    /** Trap focus inside the modal */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.trapFocus\", true),\n    },\n    /**\n     * Role attribute to be passed to the div wrapper for better accessibility.\n     * @values dialog, alertdialog\n     */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"modal.ariaRole\"),\n        validator: (value: string) =>\n            [\"dialog\", \"alertdialog\"].indexOf(value) >= 0,\n    },\n    /** Accessibility aria-label to be passed to the div wrapper element */\n    ariaLabel: { type: String, default: () => getOption(\"modal.ariaLabel\") },\n    /** Destroy modal on hide - default `true` for programmatic usage */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"modal.destroyOnHide\", false),\n    },\n    /** Automatically focus modal when active */\n    autoFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.autoFocus\", true),\n    },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"modal.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"modal.closeIconSize\", \"medium\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"modal.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"modal.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component modal programmatically.\n     * Close modal within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the modal component will be created on (for programmatic usage) */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"modal.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when fullscreen */\n    fullScreenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is clip */\n    scrollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is not clip */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"modal.cancelable\", [\n            \"escape\",\n            \"x\",\n            \"outside\",\n            \"button\",\n        ]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    handleScroll();\n    if (value && rootRef.value && props.autoFocus)\n        nextTick(() => rootRef.value.focus());\n    // mark the modal as destoyed after it get closed\n    if (!value && props.destroyOnHide)\n        // wait for transition finish\n        setTimeout(() => removeElement(rootRef.value));\n});\n\nconst showX = computed(() =>\n    Array.isArray(props.cancelable)\n        ? props.cancelable.indexOf(\"x\") >= 0\n        : props.cancelable,\n);\n\nconst customStyle = computed(() =>\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\n);\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        // reset scroll\n        const scrollto = savedScrollTop.value\n            ? savedScrollTop.value\n            : document.documentElement.scrollTop;\n        if (scrollClass.value) {\n            document.body.classList.remove(...scrollClass.value);\n            document.documentElement.classList.remove(...scrollClass.value);\n        }\n        document.documentElement.scrollTop = scrollto;\n        document.body.style.top = null;\n    }\n});\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value) {\n            if (isActive.value)\n                document.documentElement.classList.add(...scrollClass.value);\n            else\n                document.documentElement.classList.remove(...scrollClass.value);\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-modal\"],\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\n    [\"activeClass\", \"o-modal--active\", null, isActive],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-modal__content\"],\n    [\n        \"fullScreenClass\",\n        \"o-modal__content--full-screen\",\n        null,\n        computed(() => props.fullScreen),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <transition\n            :name=\"animation\"\n            @after-enter=\"afterEnter\"\n            @before-leave=\"beforeLeave\">\n            <div\n                v-show=\"isActive\"\n                v-bind=\"$attrs\"\n                ref=\"rootRef\"\n                v-trap-focus=\"trapFocus\"\n                data-oruga=\"modal\"\n                :class=\"rootClasses\"\n                :tabindex=\"-1\"\n                :role=\"ariaRole\"\n                :aria-label=\"ariaLabel\"\n                :aria-modal=\"isActive\">\n                <div\n                    :class=\"overlayClasses\"\n                    tabindex=\"-1\"\n                    aria-hidden=\"true\"\n                    @click=\"cancel('outside')\" />\n\n                <div :class=\"contentClasses\" :style=\"customStyle\">\n                    <!-- injected component for programmatic usage -->\n                    <component\n                        v-bind=\"$props.props\"\n                        :is=\"component\"\n                        v-if=\"component\"\n                        v-on=\"$props.events\"\n                        @close=\"close\" />\n                    <!--\n                        @slot Modal default content, default is content prop\n                        @binding {(...args): void} close - function to close the component\n                    -->\n                    <slot v-else :close=\"close\">\n                        <div v-if=\"content\">{{ content }}</div>\n                    </slot>\n\n                    <o-icon\n                        v-if=\"showX\"\n                        v-show=\"!isAnimating\"\n                        clickable\n                        both\n                        :class=\"closeClasses\"\n                        :icon=\"closeIcon\"\n                        :size=\"closeIconSize\"\n                        @click=\"cancel('x')\" />\n                </div>\n            </div>\n        </transition>\n    </Teleport>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport type { ModalProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        modal: typeof ModalProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Modal>();\n\ntype ModalProgrammaticProps = Readonly<\n    string | (ModalProps & OrugaOptions[\"modal\"])\n>;\n\nconst ModalProgrammatic = {\n    open(params: ModalProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      content: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.content)) {\n            slot = componentParams.content;\n            delete componentParams.content;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n            destroyOnHide: true, // set destroy on hide true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Modal, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default ModalProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport ModalProgrammatic from \"./ModalProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export modal specific types */\nexport type { ModalProps } from \"./types\";\n\n/** export modal plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Modal);\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\n    },\n} as Plugin;\n\n/** export modal components */\nexport { ModalProgrammatic, Modal as OModal };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Bold notification blocks to alert your users of something\n * @displayName Notification\n * @requires ./NotificationNotice.vue\n * @style _notification.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotification\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: true },\n    /**\n     * Type (color) of the notification\n     * @values info, success, warning, danger\n     */\n    type: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"info\", \"success\", \"warning\", \"danger\", undefined].indexOf(value) >\n            -1,\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"notification.variant\"),\n    },\n    /**\n     * Which position the notification will appear when programmatically\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Message text (can contain HTML), unnecessary when default slot is used */\n    message: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: undefined,\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"notification.animation\", \"fade\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"notification.ariaCloseLabel\", \"Close\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"notification.iconPack\"),\n    },\n    /** Icon name to use */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"notification.iconSize\", \"large\"),\n    },\n    /** Add close button to the item that closes the notification */\n    closable: { type: Boolean, default: false },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"notification.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"notification.closeIconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button container */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content element */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon on the left */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when positioned */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notification variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\n/** Icon name (MDI) based on type. */\nconst computedIcon = computed(() => {\n    if (props.icon) return props.icon;\n\n    switch (props.type) {\n        case \"info\":\n            return \"information\";\n        case \"success\":\n            return \"check-circle\";\n        case \"warning\":\n            return \"alert\";\n        case \"danger\":\n            return \"alert-circle\";\n        default:\n            return null;\n    }\n});\n\n/** Close the Message and emit events. */\nfunction close(...args: any[]): void {\n    isActive.value = false;\n    emits(\"close\", ...args);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-notification\"],\n    [\n        \"variantClass\",\n        \"o-notification--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-notification--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\n    \"wrapperClass\",\n    \"o-notification__wrapper\",\n]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\n\nconst contentClasses = defineClasses([\n    \"contentClass\",\n    \"o-notification__content\",\n]);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <article\n            v-show=\"isActive\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"notification\">\n            <button\n                v-if=\"closable\"\n                :class=\"closeClasses\"\n                type=\"button\"\n                :aria-label=\"ariaCloseLabel\"\n                @click=\"close({ action: 'close', method: 'x' })\">\n                <o-icon\n                    clickable\n                    :pack=\"iconPack\"\n                    both\n                    :icon=\"closeIcon\"\n                    :size=\"closeIconSize\" />\n            </button>\n\n            <!--\n                @slot Notification inner content, outside of the message container\n                @binding {(...args): void} close - function to close the notification\n            -->\n            <slot name=\"inner\" :close=\"close\" />\n\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\n                <o-icon\n                    v-if=\"computedIcon\"\n                    :icon=\"computedIcon\"\n                    :pack=\"iconPack\"\n                    :class=\"iconClasses\"\n                    both\n                    :size=\"iconSize\"\n                    aria-hidden />\n                <div :class=\"contentClasses\">\n                    <!--\n                        @slot Notification default content, default is message prop\n                        @binding {(...args): void} close - function to close the notification\n                    -->\n                    <slot :close=\"close\">\n                        <span v-if=\"message\" v-html=\"message\" />\n                    </slot>\n                </div>\n            </div>\n        </article>\n    </transition>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    onMounted,\n    onBeforeMount,\n    watch,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { NotifcationProps } from \"./types\";\nimport type { ProgrammaticInstance, ComponentClass } from \"@/types\";\n\n/**\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage\n * @displayName Notification Notice\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotificationNotice\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether notification is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: true },\n    /**\n     * Which position the notification will appear when programmatically.\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Hide notification after duration (in miliseconds) */\n    duration: {\n        type: Number,\n        default: () => getOption(\"notification.duration\", 2000),\n    },\n    /** Show the Notification infinitely until it is dismissed. */\n    infinite: { type: Boolean, default: false },\n    /** If notice should queue with others notices (snackbar/toast/notification). */\n    queue: {\n        type: Boolean,\n        default: () => getOption(\"notification.queue\"),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Component to be injected.\n     * Close notification within the component by emitting a 'close' event — $emit('close').\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /**\n     * DOM element the toast will be created on (for programmatic usage).\n     * Note that this also changes the position of the toast from fixed to absolute.\n     * Meaning that the container should be fixed.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"notification.container\", \"body\"),\n    },\n    /**\n     * Props passed to the internal notification component.\n     * @ignore\n     */\n    notification: {\n        type: Object as PropType<NotifcationProps>,\n        default: () => ({}),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Root class of the notice */\n    noticeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notice when positioned */\n    noticePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the custom container element */\n    noticeCustomContainerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst notificationRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, container } = useProgrammaticComponent(\n    () => notificationRef.value.$el,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"x\"],\n    },\n);\n\nconst parentTop = ref(null);\nconst parentBottom = ref(null);\n\nconst timer = ref();\n\nwatch(\n    () => isActive,\n    (value) => {\n        if (value) setAutoClose();\n        else if (timer.value) clearTimeout(timer.value);\n    },\n);\n\n/** Create or inject notice dom container elements. */\nonBeforeMount(() => {\n    if (\n        noticeClasses.value &&\n        positionBottomClasses.value &&\n        positionTopClasses.value\n    ) {\n        const rootClasses = getActiveClasses(noticeClasses.value);\n        const topClasses = getActiveClasses(positionTopClasses.value);\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\n\n        parentTop.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\n        );\n        parentBottom.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\n        );\n\n        if (parentTop.value && parentBottom.value) return;\n\n        if (!parentTop.value) {\n            parentTop.value = document.createElement(\"div\");\n            parentTop.value.className = `${rootClasses.join(\n                \" \",\n            )} ${topClasses.join(\" \")}`;\n        }\n\n        if (!parentBottom.value) {\n            parentBottom.value = document.createElement(\"div\");\n            parentBottom.value.className = `${rootClasses.join(\n                \" \",\n            )} ${bottomClasses.join(\" \")}`;\n        }\n\n        container.value.appendChild(parentTop.value);\n        container.value.appendChild(parentBottom.value);\n\n        if (container.value.tagName !== \"BODY\") {\n            const classes = getActiveClasses(\n                noticeCustomContainerClasses.value,\n            );\n            if (classes?.length)\n                classes\n                    .filter((c) => !!c)\n                    .forEach((c: string) => {\n                        parentTop.value.classList.add(c);\n                        parentBottom.value.classList.add(c);\n                    });\n        }\n    }\n});\n\nonMounted(() => {\n    showNotice();\n    setAutoClose();\n});\n\nconst correctParent = computed(() => {\n    switch (props.position) {\n        case \"top-right\":\n        case \"top\":\n        case \"top-left\":\n            return parentTop.value;\n\n        case \"bottom-right\":\n        case \"bottom\":\n        case \"bottom-left\":\n            return parentBottom.value;\n        default:\n            return null;\n    }\n});\n\nconst shouldQueue = computed(() =>\n    props.queue\n        ? parentTop.value.childElementCount > 0 ||\n          parentBottom.value.childElementCount > 0\n        : false,\n);\n\nfunction showNotice(): void {\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\n    correctParent.value.insertAdjacentElement(\n        \"afterbegin\",\n        notificationRef.value.$el,\n    );\n    isActive.value = true;\n}\n\n/** Set timer to auto close message */\nfunction setAutoClose(): void {\n    if (!props.infinite) {\n        // clear old timer\n        if (timer.value) clearTimeout(timer.value);\n        // set new timer\n        timer.value = setTimeout(() => {\n            if (isActive.value)\n                handleClose({ action: \"close\", method: \"timeout\" });\n        }, props.duration);\n    }\n}\n\nfunction handleClose(...args: any[]): void {\n    clearTimeout(timer.value);\n    close(...args);\n}\n\n// --- Computed Component Classes ---\n\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\n\nconst positionTopClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"top\",\n]);\nconst positionBottomClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"bottom\",\n]);\n\nconst noticeCustomContainerClasses = defineClasses([\n    \"noticeCustomContainerClass\",\n    \"o-notices__custom-container\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close: handleClose, promise: props.promise });\n</script>\n\n<template>\n    <o-notification\n        v-bind=\"notification\"\n        ref=\"notificationRef\"\n        v-model:active=\"isActive\"\n        :position=\"position\"\n        @close=\"handleClose\">\n        <template #inner=\"{ close }\">\n            <!-- injected component for programmatic usage -->\n            <component\n                v-bind=\"$props.props\"\n                :is=\"component\"\n                v-if=\"component\"\n                v-on=\"$props.events\"\n                @close=\"close\" />\n        </template>\n        <slot />\n    </o-notification>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport NotificationNotice from \"./NotificationNotice.vue\";\nimport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport { getOption } from \"@/utils/config\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        notification: typeof NotificationProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof NotificationNotice>();\n\ntype NotifcationProgrammaticProps = Readonly<\n    | string\n    | (NotifcationNoticeProps &\n          NotifcationProps &\n          OrugaOptions[\"notification\"] &\n          Record<string, unknown>)\n>;\n\nconst NotificationProgrammatic = {\n    open(params: NotifcationProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      message: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.message)) {\n            slot = componentParams.message;\n            delete componentParams.message;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n            position: getOption(\"notification.position\", \"top-right\"),\n        };\n\n        const notificationParams = componentParams.notification\n            ? componentParams.notification\n            : componentParams;\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.notification = merge({}, notificationParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(NotificationNotice, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default NotificationProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Notification from \"./Notification.vue\";\nimport NotificationProgrammatic from \"./NotificationProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export notification specific types */\nexport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\n/** export notification plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Notification);\n        registerComponentProgrammatic(\n            app,\n            \"notification\",\n            NotificationProgrammatic,\n        );\n    },\n} as Plugin;\n\n/** export notification components */\nexport { Notification as ONotification, NotificationProgrammatic };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport type { ClassBind, DynamicComponent } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OPaginationButton\",\n    configField: \"pagination\",\n});\n\nconst props = defineProps({\n    number: { type: Number, default: undefined },\n    isCurrent: { type: Boolean, default: false },\n    click: {\n        type: Function as PropType<(event: Event) => void>,\n        required: true,\n    },\n    ariaLabel: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: \"button\" as DynamicComponent,\n    },\n    class: { type: String, default: undefined },\n    linkClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    linkCurrentClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\n// --- Computed Component Classes ---\n\nconst linkClasses = computed(() => [\n    ...props.linkClass,\n    props.class,\n    ...(props.isCurrent ? props.linkCurrentClass : []),\n]);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        role=\"button\"\n        :tabindex=\"disabled ? null : 0\"\n        :disabled=\"disabled\"\n        :class=\"linkClasses\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-current=\"isCurrent\"\n        @click.prevent=\"click\"\n        @keydown.enter.prevent=\"click\">\n        <slot>{{ number }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, watch, nextTick, type PropType } from \"vue\";\n\nimport OPaginationButton from \"./PaginationButton.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A responsive and flexible pagination\n * @displayName Pagination\n * @style _pagination.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OPagination\",\n    configField: \"pagination\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Total count of items */\n    total: { type: Number, default: undefined },\n    /** Items count for each page */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"pagination.perPage\", 20),\n    },\n    /** Current page number, use v-model:current to make it two-way binding. */\n    current: { type: Number, default: 1 },\n    /** Number of pagination items to show before current page. */\n    rangeBefore: { type: Number, default: 1 },\n    /** Number of pagination items to show after current page. */\n    rangeAfter: { type: Number, default: 1 },\n    /**\n     * Pagination size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"pagination.size\"),\n    },\n    /** Simple style */\n    simple: {\n        type: Boolean,\n        default: () => getOption(\"pagination.simple\", false),\n    },\n    /** Rounded button style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"pagination.rounded\", false),\n    },\n    /**\n     * Buttons order\n     * @values centered, right, left\n     */\n    order: {\n        type: String,\n        default: () => getOption(\"pagination.order\", \"right\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Pagination button tag name */\n    buttonTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"pagination.buttonTag\", \"button\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"pagination.iconPack\"),\n    },\n    /** Icon to use for previous button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"pagination.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for next button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"pagination.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"pagination.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaNextLabel\", \"Next page\"),\n    },\n    /** Accessibility label for the previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () =>\n            getOption(\"pagination.ariaPreviousLabel\", \"Previous page\"),\n    },\n    /** Accessibility label for the page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaPageLabel\", \"page\"),\n    },\n    /** Accessibility label for the current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaCurrentLabel\", \"Current page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list items */\n    listItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the link button */\n    linkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the current link */\n    linkCurrentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination ellipsis */\n    ellipsisClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the info in `simple` mode */\n    infoClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination order */\n    orderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination in `simple` mode */\n    simpleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled link */\n    linkDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the pagination size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of pagination component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst current = usePropBinding(\"current\", props, emits);\n\n/** Total page size (count). */\nconst pageCount = computed(() =>\n    Math.ceil(props.total / Number(props.perPage)),\n);\n\n/** If current page is trying to be greater than page count, set to last. */\nwatch(\n    () => pageCount.value,\n    (value) => {\n        if (props.current > value) last();\n    },\n);\n\n/** First item of the page (count). */\nconst firstItem = computed(() => {\n    const perPage = Number(props.perPage);\n    const firstItem = props.current * perPage - perPage + 1;\n    return firstItem >= 0 ? firstItem : 0;\n});\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => props.current > 1);\n\n/** Check if first page button should be visible. */\nconst hasFirst = computed(() => props.current >= 2 + props.rangeBefore);\n\n/** Check if first ellipsis should be visible. */\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\n\n/** Check if last page button should be visible. */\nconst hasLast = computed(\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\n);\n\n/** Check if last ellipsis should be visible. */\nconst hasLastEllipsis = computed(\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\n);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => props.current < pageCount.value);\n\n/**\n * Get near pages, 1 before and 1 after the current.\n * Also add the click event to the array.\n */\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\n    if (props.simple) return;\n\n    let left = Math.max(1, props.current - props.rangeBefore);\n    if (left - 1 === 2) {\n        left--; // Do not show the ellipsis if there is only one to hide\n    }\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\n    if (pageCount.value - right === 2) {\n        right++; // Do not show the ellipsis if there is only one to hide\n    }\n\n    const pages = [];\n    for (let i = left; i <= right; i++) {\n        pages.push(getPage(i));\n    }\n    return pages;\n});\n\n/** Get properties for a page */\nfunction getPage(\n    num: number,\n    ariaLabel?: string,\n): {\n    number: number;\n    isCurrent: boolean;\n    click: (event: Event) => void;\n    ariaLabel: string;\n    tag: DynamicComponent;\n} {\n    return {\n        number: num,\n        isCurrent: props.current === num,\n        click: (event: Event): void => changePage(num, event),\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\n        tag: props.buttonTag,\n    };\n}\n\n/** Get text for aria-label according to page number. */\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\n        return (\n            props.ariaCurrentLabel +\n            \", \" +\n            props.ariaPageLabel +\n            \" \" +\n            pageNumber +\n            \".\"\n        );\n    return null;\n}\n\n/** Previous button click listener. */\nfunction prev(event?: Event): void {\n    changePage(props.current - 1, event);\n}\n\n/** Next button click listener. */\nfunction next(event?: Event): void {\n    changePage(props.current + 1, event);\n}\n\n/** First button click listener. */\nfunction first(event?: Event): void {\n    changePage(1, event);\n}\n\n/** Last button click listener. */\nfunction last(event?: Event): void {\n    changePage(pageCount.value, event);\n}\n\nfunction changePage(page: number, event: Event): void {\n    if (props.current === page || page < 1 || page > pageCount.value) return;\n    emits(\"change\", page);\n    current.value = page;\n\n    // Set focus on element to keep tab order\n    if (event && event.target)\n        nextTick(() => (event.target as HTMLElement).focus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-pag\"],\n    [\n        \"orderClass\",\n        \"o-pag--\",\n        computed(() => props.order),\n        computed(() => !!props.order),\n    ],\n    [\n        \"sizeClass\",\n        \"o-pag--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"simpleClass\", \"o-pag--simple\", null, computed(() => props.simple)],\n    [\"mobileClass\", \"o-pag--mobile\", null, isMobile],\n);\n\nconst prevBtnClasses = defineClasses(\n    [\"prevButtonClass\", \"o-pag__previous\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasPrev.value),\n    ],\n);\n\nconst nextBtnClasses = defineClasses(\n    [\"nextButtonClass\", \"o-pag__next\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasNext.value),\n    ],\n);\n\nconst infoClasses = defineClasses([\"infoClass\", \"o-pag__info\"]);\n\nconst ellipsisClasses = defineClasses([\"ellipsisClass\", \"o-pag__ellipsis\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-pag__list\"]);\n\nconst linkClasses = defineClasses(\n    [\"linkClass\", \"o-pag__link\"],\n    [\n        \"roundedClass\",\n        \"o-pag__link--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst linkCurrentClasses = defineClasses([\n    \"linkCurrentClass\",\n    \"o-pag__link--current\",\n]);\n\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pag__item\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ last, first, prev, next });\n</script>\n\n<template>\n    <nav :class=\"rootClasses\" data-oruga=\"pagination\">\n        <!-- \n            @slot Previous button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"previous\" v-bind=\"getPage(current - 1, ariaPreviousLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current - 1, ariaPreviousLabel)\"\n                :class=\"prevBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconPrev\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n        <!-- \n            @slot Next button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"next\" v-bind=\"getPage(current + 1, ariaNextLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current + 1, ariaNextLabel)\"\n                :class=\"nextBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconNext\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n\n        <small v-if=\"simple\" :class=\"infoClasses\">\n            <template v-if=\"perPage == 1\">\n                {{ firstItem }} / {{ total }}\n            </template>\n            <template v-else>\n                {{ firstItem }}-{{ Math.min(current * Number(perPage), total) }}\n                /\n                {{ total }}\n            </template>\n        </small>\n\n        <ul v-else :class=\"listClasses\">\n            <!--First-->\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\n                <slot v-bind=\"getPage(1)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(1)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n\n            <!--Pages-->\n            <li\n                v-for=\"page in pagesInRange\"\n                :key=\"page.number\"\n                :class=\"listItemClasses\">\n                <slot v-bind=\"page\">\n                    <o-pagination-button\n                        v-bind=\"page\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n\n            <!--Last-->\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\n                <!-- \n                    @slot Pagination button slot\n                    @binding {number} number - page number \n                    @binding {boolean} isCurrent - if page is current\n                    @binding {(event:Event): void} click - onClick handler\n                    @binding {string} ariaLabel - aria-label attribute\n                -->\n                <slot v-bind=\"getPage(pageCount)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(pageCount)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n        </ul>\n    </nav>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Pagination from \"./Pagination.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export pagination plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Pagination);\n    },\n} as Plugin;\n\n/** export pagination components */\nexport { Pagination as OPagination };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an option from a set\n * @displayName Radio\n * @style _radio.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ORadio\",\n    configField: \"radio\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"radio.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"radio.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when radio is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\n\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-radio\"],\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-radio--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-radio--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-radio--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-radio__input\"],\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"radio\"\n        role=\"radio\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"radio\"\n            data-oruga-input=\"radio\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Radio from \"./Radio.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export radio plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Radio);\n    },\n} as Plugin;\n\n/** export radio components */\nexport { Radio as ORadio };\n","import type { App, Plugin } from \"vue\";\n\nimport Select from \"./Select.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export select specific types */\nexport type { OptionsItem } from \"./types\";\n\n/** export select plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Select);\n    },\n} as Plugin;\n\n/** export select components */\nexport { Select as OSelect };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { toCssDimension } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A placeholder for content to load\n * @displayName Skeleton\n * @style _skeleton.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSkeleton\",\n    configField: \"skeleton\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Show or hide loader\t */\n    active: { type: Boolean, default: true },\n    /** Show a loading animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.animated\", true),\n    },\n    /** Custom width */\n    width: { type: [Number, String], default: undefined },\n    /** Custom height */\n    height: { type: [Number, String], default: undefined },\n    /** Show a circle shape */\n    circle: { type: Boolean, default: false },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.rounded\", true),\n    },\n    /** Number of shapes to display */\n    count: { type: Number, default: 1 },\n    /**\n     * Size of skeleton\n     * @values small, medium, large\n     */\n    size: { type: String, default: undefined },\n    /**\n     * Skeleton position in relation to the element\n     * @values left, centered, right\n     */\n    position: {\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\n        default: \"left\",\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton animation */\n    animationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item rounded */\n    itemRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst itemStyle = computed(() => ({\n    height: toCssDimension(props.height),\n    width: toCssDimension(props.width),\n    borderRadius: props.circle ? \"50%\" : null,\n}));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-sklt\"],\n    [\n        \"positionClass\",\n        \"o-sklt--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-sklt__item\"],\n    [\n        \"itemRoundedClass\",\n        \"o-sklt__item--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n    [\n        \"animationClass\",\n        \"o-sklt__item--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n    [\n        \"sizeClass\",\n        \"o-sklt__item--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n</script>\n\n<template>\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\n        <div\n            v-for=\"i in count\"\n            :key=\"i\"\n            :class=\"itemClasses\"\n            :style=\"itemStyle\" />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Skeleton from \"./Skeleton.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export skeleton plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Skeleton);\n    },\n} as Plugin;\n\n/** export skeleton components */\nexport { Skeleton as OSkeleton };\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    onMounted,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useClickOutside,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A sidebar to use as left/right overlay or static\n * @displayName Sidebar\n * @style _sidebar.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSidebar\",\n    configField: \"sidebar\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Color of the sidebar\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"sidebar.variant\"),\n    },\n    /** Show an overlay like modal */\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\n    /** Display the Sidebear inline */\n    inline: { type: Boolean, default: false },\n    /**\n     * Sidebar position\n     * @values top, right, bottom, left\n     */\n    position: {\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\n        default: () => getOption(\"sidebar.position\", \"left\"),\n    },\n    /** Show sidebar in fullheight */\n    fullheight: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullheight\", false),\n    },\n    /** Show sidebar in fullwidth */\n    fullwidth: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullwidth\", false),\n    },\n    /** Show a small sidebar */\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\n    /**\n     * Custom layout on mobile\n     * @values fullwidth, reduced, hidden\n     */\n    mobile: {\n        type: String,\n        default: getOption(\"sidebar.mobile\"),\n        validator: (value: string) =>\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\n    },\n    /** Expand sidebar on hover when reduced or mobile is reduce */\n    expandOnHover: {\n        type: Boolean,\n        default: getOption(\"sidebar.expandOnHover\", false),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"sidebar.animation\"),\n    },\n    /**\n     * Is Sidebar cancleable by pressing escape or clicking outside.\n     * @values escape, outside, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\n    },\n    /** Destroy sidebar on hide */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"sidebar.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component sidebar programmatically.\n     * Close sidebar within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"sidebar.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar when teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullheight */\n    fullheightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullwidth */\n    fullwidthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when its inlined */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when reduced */\n    reduceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when expanded on hover */\n    expandOnHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar clipped */\n    crollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar is not clipped */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is hidden */\n    hiddenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is visible */\n    visibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\nconst sidebarContent = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    if (props.overlay) handleScroll();\n    if (value) addHandler();\n    else removeHandler();\n});\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst transitionName = computed(() => {\n    if (props.animation) return props.animation;\n\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\n    const right = props.position === \"right\";\n    const open = right ? !isActive.value : isActive.value;\n\n    return open\n        ? vertical\n            ? \"slide-down\"\n            : \"slide-next\"\n        : vertical\n          ? \"slide-up\"\n          : \"slide-prev\";\n});\n\nconst hideOnMobile = computed(\n    () => props.mobile === \"hidden\" && isMobile.value,\n);\n\nonMounted(() => {\n    if (props.active) addHandler();\n});\n\nonBeforeUnmount(() => {\n    removeHandler();\n    if (isClient) {\n        if (props.overlay) {\n            // reset scroll\n            const scrollto = savedScrollTop.value\n                ? savedScrollTop.value\n                : document.documentElement.scrollTop;\n            if (scrollClass.value) {\n                document.body.classList.remove(...scrollClass.value);\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n            document.documentElement.scrollTop = scrollto;\n            document.body.style.top = null;\n        }\n    }\n});\n\nlet removeOutsideListener = null;\n\n/** add outside click event listener */\nfunction addHandler(): void {\n    if (isClient && !props.overlay) {\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\n    }\n}\n\n/** remove outside click event listener */\nfunction removeHandler(): void {\n    if (removeOutsideListener !== null) removeOutsideListener();\n}\n\n/** Close fixed sidebar if clicked outside. */\nfunction clickedOutside(event: Event): void {\n    if (props.inline || !isActive.value || isAnimating.value) return;\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\n        event.preventDefault();\n    cancel(\"outside\");\n}\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value?.length) {\n            if (isActive.value) {\n                document.documentElement.classList.add(...scrollClass.value);\n            } else {\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-side\"],\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\n    [\"activeClass\", \"o-side--active\", null, isActive],\n    [\n        \"teleportClass\",\n        \"o-side--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-side__content\"],\n    [\n        \"variantClass\",\n        \"o-side__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-side__content--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"fullheightClass\",\n        \"o-side__content--fullheight\",\n        null,\n        computed(() => props.fullheight),\n    ],\n    [\n        \"fullwidthClass\",\n        \"o-side__content--fullwidth\",\n        null,\n        computed(\n            () =>\n                props.fullwidth ||\n                (props.mobile === \"fullwidth\" && isMobile.value),\n        ),\n    ],\n    [\n        \"reduceClass\",\n        \"o-side__content--reduced\",\n        null,\n        computed(\n            () =>\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\n        ),\n    ],\n    [\n        \"expandOnHoverClass\",\n        \"o-side__content--reduced-expand\",\n        null,\n        computed(\n            () =>\n                props.expandOnHover &&\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\n        ),\n    ],\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\n    [\n        \"hiddenClass\",\n        \"o-side__content--hidden\",\n        null,\n        computed(() => !isActive.value),\n    ],\n);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <div\n            v-show=\"!hideOnMobile\"\n            ref=\"rootRef\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"sidebar\">\n            <div\n                v-if=\"overlay && isActive\"\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"(evt) => clickedOutside(evt)\" />\n            <transition\n                :name=\"transitionName\"\n                @after-enter=\"afterEnter\"\n                @before-leave=\"beforeLeave\">\n                <div\n                    v-show=\"isActive\"\n                    ref=\"sidebarContent\"\n                    :class=\"contentClasses\">\n                    <!--\n                        @slot Sidebar default content, default is component prop\n                        @binding {(...args):void} close - function to close the component\n                    -->\n                    <slot :close=\"close\">\n                        <!-- injected component for programmatic usage -->\n                        <component\n                            v-bind=\"$props.props\"\n                            :is=\"component\"\n                            v-if=\"component\"\n                            v-on=\"$props.events\"\n                            @close=\"close\" />\n                    </slot>\n                </div>\n            </transition>\n        </div>\n    </Teleport>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport type { SidebarProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        sidebar: typeof SidebarProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Sidebar>();\n\ntype SidebarProgrammaticProps = Readonly<\n    SidebarProps & OrugaOptions[\"sidebar\"]\n>;\n\nconst SidebarProgrammatic = {\n    open(params: SidebarProgrammaticProps): ProgrammaticExpose {\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, params);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const app = VueInstance;\n        const vnode = createVNode(Sidebar, propsData);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default SidebarProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export sidebar specific types */\nexport type { SidebarProps } from \"./types\";\n\n/** export sidebar plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Sidebar);\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\n    },\n} as Plugin;\n\n/** export sidebar components */\nexport { SidebarProgrammatic, Sidebar as OSidebar };\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Display a brief helper text to your user\n * @displayName Tooltip\n * @style _tooltip.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTooltip\",\n    configField: \"tooltip\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Tooltip text, unnecessary when content slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tooltip.variant\"),\n    },\n    /**\n     * Position of the Tooltip relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"tooltip.position\", \"auto\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Tooltip will be always active */\n    always: { type: Boolean, default: false },\n    /** Tooltip will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Tooltip default animation */\n    animation: {\n        type: String,\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\n    },\n    /** Tooltip will be multilined */\n    multiline: { type: Boolean, default: false },\n    /** Tooltip trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\n    },\n    /**\n     * Tooltip trigger events\n     * @values hover, click, focus, contextmenu\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Tooltip delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\n     * @values true, false, content, outside, escape\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content when is multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger when is always visible */\n    alwaysClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow position */\n    arrowPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on active change to false event */\n    (e: \"close\"): void;\n    /** on active change to true event */\n    (e: \"open\"): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\nwatch(isActive, (value) => {\n    if (value) emits(\"open\");\n    else emits(\"close\");\n});\n\nconst timer = ref();\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = ref([]);\n\nwatch(isActive, (value) => {\n    // on active set event handler\n    if (value && isClient) {\n        setTimeout(() => {\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                // set outside handler\n                eventCleanups.value.push(\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\n                );\n            }\n\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                // set keyup handler\n                eventCleanups.value.push(\n                    useEventListener(\"keyup\", onKeyPress, document, {\n                        immediate: true,\n                    }),\n                );\n            }\n        });\n    } else if (!value) {\n        // on close cleanup event handler\n        eventCleanups.value.forEach((fn) => fn());\n        eventCleanups.value.length = 0;\n    }\n});\n\nconst cancelOptions = computed<string[]>(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close tooltip if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.always) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    nextTick(() => setTimeout(() => open()));\n}\n\nfunction onContextMenu(event: Event): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nfunction onHover(): void {\n    if (props.triggers.indexOf(\"hover\") < 0) return;\n    open();\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer.value = setTimeout(() => {\n            isActive.value = true;\n            timer.value = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    isActive.value = !props.closeable;\n    if (timer.value && props.closeable) clearTimeout(timer.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tip\"],\n    [\n        \"teleportClass\",\n        \"o-tip--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\n\nconst arrowClasses = defineClasses(\n    [\"arrowClass\", \"o-tip__arrow\"],\n    [\n        \"arrowPositionClass\",\n        \"o-tip__arrow--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantArrowClass\",\n        \"o-tip__arrow--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tip__content\"],\n    [\n        \"positionClass\",\n        \"o-tip__content--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-tip__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"multilineClass\",\n        \"o-tip__content--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n    [\n        \"alwaysClass\",\n        \"o-tip__content--always\",\n        null,\n        computed(() => props.always),\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"rootClasses\"\n            :trigger=\"triggerRef\"\n            default-position=\"top\"\n            :disabled=\"!isActive\">\n            <transition :name=\"animation\">\n                <div\n                    v-show=\"isActive || (always && !disabled)\"\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\n                    :class=\"contentClasses\">\n                    <span :class=\"arrowClasses\"></span>\n\n                    <!--\n                        @slot Tooltip content, default is label prop\n                    -->\n                    <slot name=\"content\">{{ label }}</slot>\n                </div>\n            </transition>\n        </PositionWrapper>\n\n        <component\n            :is=\"triggerTag\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            aria-haspopup=\"true\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\"\n            @blur.capture=\"onClose\"\n            @mouseleave=\"onClose\">\n            <!--\n                @slot Tooltip trigger slot\n                @binding {boolean} active - tooltip active state\n            -->\n            <slot :active=\"isActive\" />\n        </component>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport OTooltip from \"../tooltip/Tooltip.vue\";\n\nimport { isClient } from \"@/utils/ssr\";\n\nimport type { SliderProps } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\n/**\n * @displayName Slider Thumb\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderThumb\",\n    configField: \"slider\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** parent slider component props  */\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\n    modelValue: { type: Number, required: true },\n    sliderSize: { type: Function as PropType<() => number>, required: true },\n    thumbWrapperClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    thumbClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /** on value change event */\n    (e: \"change\"): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\nconst slider = computed<SliderProps>(() => props.sliderProps);\n\nconst isFocused = ref(false);\nconst dragging = ref(false);\nconst startX = ref(0);\nconst startPosition = ref(0);\nconst newPosition = ref(null);\nconst oldValue = ref(props.modelValue);\n\nconst tooltip = computed(() => slider.value.tooltip);\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\nconst disabled = computed(() => slider.value.disabled);\nconst max = computed(() => slider.value.max);\nconst min = computed(() => slider.value.min);\nconst step = computed(() => slider.value.step);\nconst indicator = computed(() => slider.value.indicator);\n\nconst ariaLabel = computed(() =>\n    Array.isArray(slider.value.ariaLabel)\n        ? slider.value.ariaLabel[0]\n        : slider.value.ariaLabel,\n);\n\nconst precision = computed(() => {\n    const precisions = [min.value, max.value, step.value].map((item) => {\n        const decimal = (\"\" + item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    });\n    return Math.max(...precisions);\n});\n\nconst computedTooltipVariant = computed(() =>\n    slider.value.tooltipVariant\n        ? slider.value.tooltipVariant\n        : slider.value.variant,\n);\n\nconst currentPosition = computed(\n    () =>\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\n);\n\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\n\nconst formattedValue = computed(() => {\n    if (typeof slider.value.customFormatter !== \"undefined\")\n        return slider.value.customFormatter(props.modelValue);\n\n    if (slider.value.format === \"percent\")\n        return new Intl.NumberFormat(slider.value.locale, {\n            style: \"percent\",\n        }).format((props.modelValue - min.value) / (max.value - min.value));\n\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\n});\n\nfunction onFocus(): void {\n    isFocused.value = true;\n}\n\nfunction onBlur(): void {\n    isFocused.value = false;\n}\n\nfunction onButtonDown(event): void {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n\n    if (isClient) {\n        document.addEventListener(\"mousemove\", onDragging);\n        document.addEventListener(\"touchmove\", onDragging);\n        document.addEventListener(\"mouseup\", onDragEnd);\n        document.addEventListener(\"touchend\", onDragEnd);\n        document.addEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction onLeftKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) -\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onRightKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) +\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onHomeKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value = 0;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onEndKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value = 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onDragStart(event): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\n\n    startX.value = event.clientX;\n    startPosition.value = parseFloat(currentPosition.value);\n    newPosition.value = startPosition.value;\n}\n\nfunction onDragging(event): void {\n    if (dragging.value) {\n        if (event.type === \"touchmove\")\n            event.clientX = event.touches[0].clientX;\n\n        const diff =\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\n        newPosition.value = startPosition.value + diff;\n        setPosition(newPosition.value);\n    }\n}\n\nfunction onDragEnd(): void {\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.modelValue !== oldValue.value) emits(\"change\");\n\n    setPosition(newPosition.value);\n    if (isClient) {\n        document.removeEventListener(\"mousemove\", onDragging);\n        document.removeEventListener(\"touchmove\", onDragging);\n        document.removeEventListener(\"mouseup\", onDragEnd);\n        document.removeEventListener(\"touchend\", onDragEnd);\n        document.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction setPosition(percent: number): void {\n    if (percent === null || isNaN(percent)) return;\n    if (percent < 0) percent = 0;\n    else if (percent > 100) percent = 100;\n\n    const stepLength = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(percent / stepLength);\n    let value =\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emits(\"update:modelValue\", value);\n\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\n}\n\ndefineExpose({ setPosition });\n</script>\n\n<template>\n    <div\n        :class=\"thumbWrapperClasses\"\n        :style=\"wrapperStyle\"\n        data-oruga=\"slider-thumb\">\n        <o-tooltip\n            :label=\"formattedValue\"\n            :variant=\"computedTooltipVariant\"\n            :disabled=\"disabled || !tooltip\"\n            :always=\"tooltipAlways || dragging || isFocused\">\n            <div\n                v-bind=\"$attrs\"\n                :class=\"thumbClasses\"\n                :tabindex=\"disabled ? null : 0\"\n                role=\"slider\"\n                :aria-label=\"ariaLabel\"\n                :aria-valuenow=\"modelValue\"\n                :aria-valuemin=\"min\"\n                :aria-valuemax=\"max\"\n                :aria-disabled=\"disabled\"\n                aria-orientation=\"horizontal\"\n                @mousedown=\"onButtonDown\"\n                @touchstart=\"onButtonDown\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @keydown.left.prevent=\"onLeftKeyDown\"\n                @keydown.right.prevent=\"onRightKeyDown\"\n                @keydown.down.prevent=\"onLeftKeyDown\"\n                @keydown.up.prevent=\"onRightKeyDown\"\n                @keydown.home.prevent=\"onHomeKeyDown\"\n                @keydown.end.prevent=\"onEndKeyDown\">\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\n            </div>\n        </o-tooltip>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * @displayName Slider Tick\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderTick\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Value of single tick */\n    value: { type: Number, required: true },\n    /** Tick label */\n    label: { type: String, default: undefined },\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent } = useProviderChild<SliderComponent>();\n\nconst position = computed(() => {\n    const pos =\n        ((props.value - parent.value.min) /\n            (parent.value.max - parent.value.min)) *\n        100;\n    return pos >= 0 && pos <= 100 ? pos : 0;\n});\n\nconst hidden = computed(\n    () => props.value === parent.value.min || props.value === parent.value.max,\n);\n\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"tickClass\", \"o-slide__tick\"],\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\n);\n\nconst tickLabelClasses = defineClasses([\n    \"tickLabelClass\",\n    \"o-slide__tick-label\",\n]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\n            <!-- \n                @slot Override tick content, default is label prop\n             -->\n            <slot> {{ label }} </slot>\n        </span>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSliderThumb from \"./SliderThumb.vue\";\nimport OSliderTick from \"./SliderTick.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderParent } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A slider to select a value or range from a given range\n * @displayName Slider\n * @requires ./SliderTick.vue\n * @style _slider.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSlider\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Number, Array] as PropType<number | number[]>,\n        default: 0,\n    },\n    /** Minimum value */\n    min: { type: Number, default: 0 },\n    /** Maximum  value */\n    max: { type: Number, default: 100 },\n    /** Step interval of ticks */\n    step: { type: Number, default: 1 },\n    /**\n     * Color of the slider\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"slider.variant\"),\n    },\n    /**\n     * Vertical size of slider\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"slider.size\"),\n    },\n    /** Show tick marks */\n    ticks: { type: Boolean, default: false },\n    /** Show tooltip when thumb is being dragged */\n    tooltip: {\n        type: Boolean,\n        default: () => getOption(\"slider.tooltip\", true),\n    },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    tooltipVariant: {\n        type: String,\n        default: () => getOption(\"slider.tooltipVariant\"),\n    },\n    /** Tooltip displays always */\n    tooltipAlways: { type: Boolean, default: false },\n    /** Rounded thumb */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"slider.rounded\", false),\n    },\n    /** Slider will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Update v-model only when dragging is finished */\n    lazy: { type: Boolean, default: false },\n    /** Function to format the tooltip label for display */\n    customFormatter: { type: Function, default: undefined },\n    /** Increases slider size on focus */\n    biggerSliderFocus: { type: Boolean, default: false },\n    /** Show indicators */\n    indicator: { type: Boolean, default: false },\n    /**\n     * Define v-model format\n     * @values row, percent\n     */\n    format: {\n        type: String,\n        default: () => getOption(\"slider.format\", \"raw\"),\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\n    },\n    /** Date format locale */\n    locale: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"locale\"),\n    },\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\n    ariaLabel: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"slider.ariaLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the vertical slider size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider track */\n    trackClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the filled part of the slider */\n    fillClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the slider is rounded */\n    thumbRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the thumb gets dragged */\n    thumbDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb wrapper */\n    thumbWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb */\n    thumbClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider tick */\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display on the wrapper element when the slider is dragged */\n    thumbWrapperDraggingClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /**\n     * on value change event\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"change\", value: number | number[]): void;\n    /**\n     * on dragging event\n     * @param value {number | number[]} updated modelValue prop\n     * */\n    (e: \"dragging\", value: number | number[]): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\nfunction emitValue(event: any): void {\n    const val = isRange.value\n        ? [minValue.value, maxValue.value]\n        : valueStart.value || 0;\n    emits(event, val);\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<SliderComponent>(() => ({\n    max: props.max,\n    min: props.min,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(undefined, { data: provideData });\n\nconst sliderRef = ref();\nconst thumbStartRef = ref();\nconst thumbEndRef = ref();\n\nconst valueStart = ref<number>(null);\nconst valueEnd = ref<number>(null);\nconst dragging = ref(false);\nconst isRange = ref(false);\n\nconst isThumbReversed = ref();\nconst isTrackClickDisabled = ref();\n\nsetValues(props.modelValue);\n\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\n\n/** When min, max or v-model is changed set the new active step. */\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\n    setValues(props.modelValue),\n);\n\nconst tickValues = computed(() => {\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\n    const result = [];\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\n        result.push(i);\n    }\n    return result;\n});\n\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\n\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\n\nconst barSize = computed(() =>\n    isRange.value\n        ? `${\n              (100 * (maxValue.value - minValue.value)) /\n              (props.max - props.min)\n          }%`\n        : `${\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\n          }%`,\n);\n\nconst barStart = computed(() =>\n    isRange.value\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n        : \"0%\",\n);\n\nconst barStyle = computed(() => ({\n    width: barSize.value,\n    left: barStart.value,\n}));\n\nfunction setValues(newValue: number | number[]): void {\n    if (props.min > props.max) return;\n\n    if (Array.isArray(newValue)) {\n        isRange.value = true;\n        const smallValue =\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\n                ? props.min\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\n        const largeValue =\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\n                ? props.max\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\n    } else {\n        isRange.value = false;\n        valueStart.value = isNaN(newValue)\n            ? props.min\n            : Math.min(props.max, Math.max(props.min, newValue));\n        valueEnd.value = null;\n    }\n}\n\nfunction onInternalValueUpdate(): void {\n    if (isRange.value)\n        isThumbReversed.value = valueStart.value > valueEnd.value;\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\n    if (dragging.value) emitValue(\"dragging\");\n}\n\nfunction sliderSize(): number {\n    return sliderRef.value.getBoundingClientRect().width;\n}\n\nfunction onSliderClick(event: MouseEvent): void {\n    if (props.disabled || isTrackClickDisabled.value) return;\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\n    const diffFirst = Math.abs(targetValue - valueStart.value);\n    if (!isRange.value) {\n        if (diffFirst < props.step / 2) return;\n        thumbStartRef.value.setPosition(percent);\n    } else {\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\n        if (diffFirst <= diffSecond) {\n            if (diffFirst < props.step / 2) return;\n            thumbStartRef.value.setPosition(percent);\n        } else {\n            if (diffSecond < props.step / 2) return;\n            thumbEndRef.value.setPosition(percent);\n        }\n    }\n    emitValue(\"change\");\n}\n\nfunction onDragStart(): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n}\n\nfunction onDragEnd(): void {\n    isTrackClickDisabled.value = true;\n    // avoid triggering onSliderClick after dragend\n    setTimeout(() => (isTrackClickDisabled.value = false));\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.lazy) emitValue(\"update:modelValue\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-slide\"],\n    [\n        \"sizeClass\",\n        \"o-slide--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-slide--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\n\nconst fillClasses = defineClasses(\n    [\"fillClass\", \"o-slide__fill\"],\n    [\n        \"variantClass\",\n        \"o-slide__fill--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst thumbClasses = defineClasses(\n    [\"thumbClass\", \"o-slide__thumb\"],\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\n    [\n        \"thumbRoundedClass\",\n        \"o-slide__thumb--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst thumbWrapperClasses = defineClasses(\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\n    [\n        \"thumbWrapperDraggingClass\",\n        \"o-slide__thumb-wrapper--dragging\",\n        null,\n        dragging,\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\n            <template v-if=\"ticks\">\n                <o-slider-tick\n                    v-for=\"(val, key) in tickValues\"\n                    :key=\"key\"\n                    :value=\"val\"\n                    :tick-class=\"tickClass\"\n                    :tick-hidden-class=\"tickHiddenClass\"\n                    :tick-label-class=\"tickLabelClass\" />\n            </template>\n\n            <!--\n                @slot Define additional slider ticks here\n             -->\n            <slot />\n\n            <o-slider-thumb\n                ref=\"thumbStartRef\"\n                v-model=\"valueStart\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n\n            <o-slider-thumb\n                v-if=\"isRange\"\n                ref=\"thumbEndRef\"\n                v-model=\"valueEnd\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Slider from \"./Slider.vue\";\nimport SliderTick from \"./SliderTick.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export slider specific types */\nexport type * from \"./types\";\n\n/** export slider plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Slider);\n        registerComponent(app, SliderTick);\n    },\n} as Plugin;\n\n/** export slider components */\nexport { Slider as OSlider, SliderTick as OSliderTick };\n","<script setup lang=\"ts\">\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\n\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal process steps\n * @displayName Steps\n * @requires ./StepItem.vue\n * @style _steps.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSteps\",\n    configField: \"steps\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"steps.variant\"),\n    },\n    /**\n     * Step size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"steps.size\"),\n    },\n    /** Show step in vertical layout */\n    vertical: { type: Boolean, default: false },\n    /**\n     * Position of the step\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Icon pack to use for the navigation\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Icon to use for navigation button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for navigation button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\n    },\n    /**\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\n     */\n    hasNavigation: { type: Boolean, default: true },\n    /** Destroy stepItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Step navigation is animated */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"steps.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"steps.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"steps.animateInitially\", false),\n    },\n    /**\n     * Position of the marker label\n     * @values bottom, right, left\n     */\n    labelPosition: {\n        type: String,\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\n    },\n    /** Rounded step markers */\n    rounded: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"steps.mobileBreakpoint\"),\n    },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaNextLabel\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the steps */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the steps container */\n    stepsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Steps component when animation gets triggered */\n    animatedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps markers trigger when are rounded */\n    stepMarkerRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component dividers */\n    stepDividerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component marker */\n    stepMarkerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content */\n    stepContentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content when transition is happening */\n    stepContentTransitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component navigation element */\n    stepNavigationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link */\n    stepLinkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link when clickable */\n    stepLinkClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label */\n    stepLinkLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label when positioned */\n    stepLinkLabelPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of steps component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on step change event\n     * @param value {string | number} new step value\n     * @param value {string | number} old step value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<StepsComponent>(() => ({\n    activeValue: vmodel.value,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<StepItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/** When v-model is changed set the new active step. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => !!prevItem.value);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => !!nextItem.value);\n\n/** Retrieves the previous visible item */\nconst prevItem = computed(() => {\n    if (!activeItem.value) return null;\n\n    let prevItem = null;\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\n        if (items.value[idx].visible) {\n            prevItem = items.value[idx];\n            break;\n        }\n    }\n    return prevItem;\n});\n\n/** Retrieves the next visible item */\nconst nextItem = computed(() => {\n    let nextItem = null;\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\n    for (; idx < items.value.length; idx++) {\n        if (items.value[idx].visible) {\n            nextItem = items.value[idx];\n            break;\n        }\n    }\n    return nextItem;\n});\n\n/**\n * Return if the step should be clickable or not.\n */\nfunction isItemClickable(item: StepItem): boolean {\n    if (item.clickable === undefined)\n        return item.index < activeItem.value?.index;\n    return item.clickable;\n}\n\n/** Previous button click listener. */\nfunction prev(): void {\n    if (hasPrev.value) itemClick(prevItem.value);\n}\n\n/** Previous button click listener. */\nfunction next(): void {\n    if (hasNext.value) itemClick(nextItem.value);\n}\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: StepItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = activeItem.value.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-steps__wrapper\"],\n    [\n        \"sizeClass\",\n        \"o-steps--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"verticalClass\",\n        \"o-steps__wrapper-vertical\",\n        null,\n        computed(() => props.vertical),\n    ],\n    [\n        \"positionClass\",\n        \"o-steps__wrapper-position-\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\n);\n\nconst wrapperClasses = defineClasses(\n    [\"stepsClass\", \"o-steps\"],\n    [\n        \"animatedClass\",\n        \"o-steps--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n);\n\nconst stepDividerClasses = defineClasses([\n    \"stepDividerClass\",\n    \"o-steps__divider\",\n]);\n\nconst stepMarkerClasses = defineClasses(\n    [\"stepMarkerClass\", \"o-steps__marker\"],\n    [\n        \"stepMarkerRoundedClass\",\n        \"o-steps__marker--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst stepContentClasses = defineClasses(\n    [\"stepContentClass\", \"o-steps__content\"],\n    [\n        \"stepContentTransitioningClass\",\n        \"o-steps__content-transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nconst stepNavigationClasses = defineClasses([\n    \"stepNavigationClass\",\n    \"o-steps__navigation\",\n]);\n\nconst stepLinkLabelClasses = defineClasses([\n    \"stepLinkLabelClass\",\n    \"o-steps__title\",\n]);\n\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\n    const classes = defineClasses(\n        [\"stepLinkClass\", \"o-steps__link\"],\n        [\n            \"stepLinkLabelPositionClass\",\n            \"o-steps__link-label-\",\n            props.labelPosition,\n            !!props.labelPosition,\n        ],\n        [\n            \"stepLinkClickableClass\",\n            \"o-steps__link-clickable\",\n            null,\n            isItemClickable(childItem),\n        ],\n    );\n\n    return classes.value;\n}\n\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\n        [\n            \"itemHeaderVariantClass\",\n            \"o-steps__nav-item--\",\n            childItem.variant || props.variant,\n            !!childItem.variant || !!props.variant,\n        ],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-steps__nav-item-active\",\n            null,\n            childItem.value === activeItem.value.value,\n        ],\n        [\n            \"itemHeaderPreviousClass\",\n            \"o-steps__nav-item-previous\",\n            null,\n            activeItem.value.index > childItem.index,\n        ],\n    );\n\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\n        <ol :class=\"wrapperClasses\">\n            <li\n                v-for=\"(childItem, index) in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :aria-current=\"\n                    childItem.value === activeItem.value ? 'step' : undefined\n                \"\n                :class=\"itemClasses(childItem)\">\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\n\n                <component\n                    :is=\"childItem.tag\"\n                    role=\"button\"\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\n                    :class=\"stepLinkClasses(childItem)\"\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\n                    @keydown.enter=\"\n                        isItemClickable(childItem) && itemClick(childItem)\n                    \">\n                    <div :class=\"stepMarkerClasses\">\n                        <o-icon\n                            v-if=\"childItem.icon\"\n                            :icon=\"childItem.icon\"\n                            :pack=\"childItem.iconPack\"\n                            :size=\"size\" />\n                        <span v-else-if=\"childItem.step\">\n                            {{ childItem.step }}\n                        </span>\n                    </div>\n\n                    <div :class=\"stepLinkLabelClasses\">\n                        {{ childItem.label }}\n                    </div>\n                </component>\n            </li>\n        </ol>\n\n        <section :class=\"stepContentClasses\">\n            <!--\n                @slot Place step items here\n            -->\n            <slot />\n        </section>\n\n        <!--\n            @slot Override step navigation\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\n        -->\n        <slot\n            name=\"navigation\"\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\n            :next=\"{ disabled: !hasNext, action: next }\">\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconPrev\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasPrev\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\" />\n\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconNext\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasNext\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\" />\n            </nav>\n        </slot>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { StepsComponent, StepItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Step Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OStepItem\",\n    configField: \"steps\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Step marker content (when there is no icon) */\n    step: { type: [String, Number], default: undefined },\n    /**\n     * Default style for the step.\n     * This will override parent type.\n     * Could be used to set a completed step to \"success\" for example\n     */\n    variant: { type: String, default: undefined },\n    /**\n     * Item can be used directly to navigate.\n     * If undefined, previous steps are clickable while the others are not\n     */\n    clickable: { type: Boolean, default: undefined },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"steps.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Step item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the content item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item behind the active one */\n    itemHeaderPreviousClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item with variant (default value by parent steps component) */\n    itemHeaderVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on step item activate event */\n    (e: \"activate\"): void;\n    /** on step item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<StepItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<StepsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`steps-${item.identifier}`\"\n                data-oruga=\"steps-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                @slot Step item content\n            -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Steps from \"./Steps.vue\";\nimport StepItem from \"./StepItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export steps specific types */\nexport type * from \"./types\";\n\n/** export steps plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Steps);\n        registerComponent(app, StepItem);\n    },\n} as Plugin;\n\n/** export steps components */\nexport { Steps as OSteps, StepItem as OStepItem };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Switch between two opposing states\n * @displayName Switch\n * @style _switch.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSwitch\",\n    configField: \"switch\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"switch.variant\"),\n    },\n    /**\n     * Color of the switch when is passive\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    passiveVariant: {\n        type: String,\n        default: () => getOption(\"switch.passiveVariant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"switch.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Name attribute on native checkbox */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Rounded style */\n    rounded: { type: Boolean, default: true },\n    /** Label position */\n    position: { type: String, default: \"right\" },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when switch is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check */\n    switchClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check when checked */\n    switchCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the inner switch check */\n    switchCheckClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch passive variant */\n    passiveVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of switch label position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Root class of the native input checkbox */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\n    passive: true,\n});\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-switch\"],\n    [\n        \"sizeClass\",\n        \"o-switch--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-switch--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-switch--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-switch--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"passiveVariantClass\",\n        \"o-switch--\",\n        computed(() => props.passiveVariant + \"-passive\"),\n        computed(() => !!props.passiveVariant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-switch__input\"],\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\n);\n\nconst switchClasses = defineClasses(\n    [\"switchClass\", \"o-switch__check\"],\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst switchCheckClasses = defineClasses(\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"switch\"\n        role=\"switch\"\n        :aria-checked=\"isChecked\"\n        @click=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            role=\"switch\"\n            data-oruga-input=\"switch\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span :class=\"switchClasses\">\n            <span :class=\"switchCheckClasses\"></span>\n        </span>\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Switch from \"./Switch.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export switch plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Switch);\n    },\n} as Plugin;\n\n/** export switch components */\nexport { Switch as OSwitch };\n","import type { DefineComponent, PropType } from \"vue\";\nimport { defineComponent, h } from \"vue\";\nimport type { DynamicComponent } from \"@/types\";\n\n/** This components renders a specific slot and only the slot of another component */\nexport default defineComponent({\n    name: \"OSlotComponent\",\n    props: {\n        /** Component to be get the slot from */\n        component: { type: Object, required: true },\n        /** Slot name */\n        name: { type: String, default: \"default\" },\n        /** Props passed to the slot */\n        props: { type: Object, default: () => {} },\n        /** Tag name of the slot wrapper element */\n        tag: {\n            type: [String, Object, Function] as PropType<DynamicComponent>,\n            default: \"div\" as DynamicComponent,\n        },\n    },\n    render() {\n        const slot = (this.component as DefineComponent).$slots[this.name]\n            ? (this.component as DefineComponent).$slots[this.name](this.props)\n            : {};\n\n        return h(this.tag, {}, slot);\n    },\n});\n","<script setup lang=\"ts\">\nimport { computed, watch, ref, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OField from \"../field/Field.vue\";\n\nimport { getValueByPath } from \"@/utils/helpers\";\n\nimport type { TableColumn } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTableMobileSort\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    currentSortColumn: {\n        type: Object as PropType<TableColumn>,\n        default: undefined,\n    },\n    columns: {\n        type: Array as PropType<TableColumn[]>,\n        default: undefined,\n    },\n    placeholder: { type: String, default: undefined },\n    iconPack: { type: String, default: undefined },\n    sortIcon: { type: String, default: \"arrow-up\" },\n    sortIconSize: { type: String, default: \"small\" },\n    isAsc: { type: Boolean, default: false },\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"sort\", column: TableColumn, event: Event);\n}>();\n\nconst mobileSort = ref<string>(\n    getValueByPath(props.currentSortColumn, \"identifier\"),\n);\n\nconst showPlaceholder = computed(\n    () =>\n        !props.columns ||\n        !props.columns.some(\n            (column) =>\n                getValueByPath(column, \"identifier\") === mobileSort.value,\n        ),\n);\n\nconst sortableColumns = computed(() =>\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\n);\n\nconst isCurrentSort = computed(\n    () =>\n        getValueByPath(props.currentSortColumn, \"identifier\") ===\n        mobileSort.value,\n);\n\nwatch(mobileSort, (value) => {\n    if (props.currentSortColumn.identifier === value) return;\n    sort();\n});\n\nwatch(\n    () => props.currentSortColumn,\n    (column) => {\n        mobileSort.value = getValueByPath(column, \"identifier\");\n    },\n);\n\nfunction sort(event?: Event): void {\n    const column = sortableColumns.value.filter(\n        (c) => getValueByPath(c, \"identifier\") === mobileSort.value,\n    )[0];\n    emits(\"sort\", column, event);\n}\n</script>\n\n<template>\n    <div :class=\"mobileSortClasses\">\n        <o-field>\n            <o-select v-model=\"mobileSort\" expanded>\n                <template v-if=\"placeholder\">\n                    <option\n                        v-show=\"showPlaceholder\"\n                        :value=\"{}\"\n                        selected\n                        disabled\n                        hidden>\n                        {{ placeholder }}\n                    </option>\n                </template>\n                <option\n                    v-for=\"(column, index) in sortableColumns\"\n                    :key=\"index\"\n                    :value=\"column.identifier\">\n                    {{ column.label }}\n                </option>\n            </o-select>\n            <o-button @click=\"sort($event)\">\n                <o-icon\n                    v-show=\"isCurrentSort\"\n                    :icon=\"sortIcon\"\n                    :pack=\"iconPack\"\n                    :size=\"sortIconSize\"\n                    both\n                    :rotation=\"!isAsc ? 180 : 0\" />\n            </o-button>\n        </o-field>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { toRaw, computed, getCurrentInstance, type PropType } from \"vue\";\n\nimport { useProviderChild } from \"@/composables\";\nimport { toCssDimension } from \"@/utils/helpers\";\n\nimport type { TableColumnComponent } from \"./types\";\n\n/**\n * @displayName Table Column\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTableColumn\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    /** Define the column label */\n    label: { type: String, default: undefined },\n    /** Define an object property key if data is an object */\n    field: { type: String, default: undefined },\n    /** Define a column sub heading  */\n    subheading: { type: String, default: undefined },\n    /** Add addtional meta information for the column for custom purpose*/\n    meta: {\n        type: [String, Number, Boolean, Function, Object, Array],\n        default: undefined,\n    },\n    /** Column fixed width */\n    width: { type: [Number, String], default: undefined },\n    /** Define column value as number */\n    numeric: { type: Boolean, default: false },\n    /**\n     * Position of the column content\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    /** Enable an additional searchbar below the column header */\n    searchable: { type: Boolean, default: false },\n    /** Enable column sortability */\n    sortable: { type: Boolean, default: false },\n    /** Define whether the column is visible or not */\n    visible: { type: Boolean, default: true },\n    /** Define a custom sort function */\n    customSort: {\n        type: Function as PropType<\n            (a: unknown, b: unknown, isAsc: boolean) => number\n        >,\n        default: undefined,\n    },\n    /** Define a custom funtion for the filter search */\n    customSearch: {\n        type: Function as PropType<(row: unknown, filter: string) => boolean>,\n        default: undefined,\n    },\n    /** Whether the column is sticky or not */\n    sticky: { type: Boolean, default: false },\n    /** Make header selectable */\n    headerSelectable: { type: Boolean, default: false },\n    /**\n     * Adds native attributes to th\n     * @deprecated will be moved to table component in v0.9\n     */\n    thAttrs: {\n        type: Function as PropType<(column: typeof props) => object>,\n        default: () => ({}),\n    },\n    /**\n     * Adds native attributes to td\n     * @deprecated will be moved to table component in v0.9\n     */\n    tdAttrs: {\n        type: Function as PropType<\n            (row: unknown, column: typeof props) => object\n        >,\n        default: () => ({}),\n    },\n});\n\nconst style = computed(() => ({\n    width: toCssDimension(props.width),\n}));\n\nconst isHeaderUnselectable = computed(\n    () => !props.headerSelectable && props.sortable,\n);\n\nconst vm = getCurrentInstance();\n\nconst providedData = computed<TableColumnComponent>(() => ({\n    ...toRaw(props), // TODO: remove toRaw when tdAttrs/thAttrs are moved to table component\n    label: props.label,\n    field: props.field,\n    subheading: props.subheading,\n    meta: props.meta,\n    width: props.width,\n    numeric: props.numeric,\n    position: props.position,\n    searchable: props.searchable,\n    sortable: props.sortable,\n    visible: props.visible,\n    customSort: props.customSort,\n    customSearch: props.customSearch,\n    sticky: props.sticky,\n    headerSelectable: props.headerSelectable,\n    $el: vm.proxy,\n    $slots: vm.slots,\n    style: style.value,\n    isHeaderUnselectable: isHeaderUnselectable.value,\n}));\n\nconst { item } = useProviderChild({ data: providedData });\n</script>\n\n<template>\n    <span :data-id=\"item.identifier\" data-oruga=\"table-column\">\n        {{ label }}\n\n        <!--\n            Do not render these slots here.\n            These are only for documentation purposes.\n            Slots are defined in table component.\n        -->\n        <template v-if=\"false\">\n            <!--\n                @slot Default Slot\n                @binding {unknown} row - row data \n                @binding {Column} column - column definition \n                @binding {number} index - row index \n                @binding {number} colindex - column index \n                @binding {(row): void} toggle-details - toggle details function \n            -->\n            <slot\n                :row=\"null\"\n                :column=\"null\"\n                :index=\"null\"\n                :colindex=\"null\"\n                :toggle-details=\"null\" />\n            <!--\n                @slot Override header label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"header\" :column=\"null\" :index=\"null\" />\n            <!--\n                @slot Override subheading label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"subheading\" :column=\"null\" :index=\"null\" />\n\n            <!--\n                @slot Override searchable input \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n                @binding {Record<string,string>} filters - active filters object\n            -->\n            <slot\n                name=\"searchable\"\n                :column=\"null\"\n                :index=\"null\"\n                :filters=\"null\" />\n        </template>\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\n\nimport OPagination from \"../pagination/Pagination.vue\";\n\nimport { usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTablePagination\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    current: { type: Number, default: undefined },\n    paginated: { type: Boolean, default: false },\n    rootClass: {\n        type: [String, Array, Object] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst currentPage = usePropBinding(\"current\", props, emits);\n\n/** Paginator change listener. */\nfunction pageChanged(page: number): void {\n    const newPage = page > 0 ? page : 1;\n    currentPage.value = newPage;\n    emits(\"change\", newPage);\n}\n</script>\n\n<template>\n    <div :class=\"rootClass\">\n        <div>\n            <slot />\n        </div>\n        <div>\n            <o-pagination\n                v-if=\"paginated\"\n                v-bind=\"$attrs\"\n                :current=\"currentPage\"\n                @change=\"pageChanged\" />\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    watch,\n    onMounted,\n    nextTick,\n    useSlots,\n    toValue,\n    type PropType,\n} from \"vue\";\n\nimport OCheckbox from \"../checkbox/Checkbox.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OInput from \"../input/Input.vue\";\nimport OLoading from \"../loading/Loading.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport OTableMobileSort from \"./TableMobileSort.vue\";\nimport OTableColumn from \"./TableColumn.vue\";\nimport OTablePagination from \"./TablePagination.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    getValueByPath,\n    indexOf,\n    toCssDimension,\n    escapeRegExpChars,\n    removeDiacriticsFromString,\n    uuid,\n} from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useProviderParent,\n    usePropBinding,\n    useMatchMedia,\n    useDebounce,\n    getActiveClasses,\n} from \"@/composables\";\n\nimport type { Column, TableColumn, TableColumnComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Tabulated data are sometimes needed, it's even better when it's responsive\n * @displayName Table\n * @requires ./TableColumn.vue\n * @style _table.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTable\",\n    configField: \"table\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Table data */\n    data: { type: Array as PropType<unknown[]>, default: () => [] },\n    /** Table columns */\n    columns: { type: Array as PropType<Column[]>, default: () => [] },\n    /** Border to all cells */\n    bordered: {\n        type: Boolean,\n        default: () => getOption(\"table.bordered\", false),\n    },\n    /** Whether table is striped */\n    striped: {\n        type: Boolean,\n        default: () => getOption(\"table.striped\", false),\n    },\n    /** Makes the cells narrower */\n    narrowed: {\n        type: Boolean,\n        default: () => getOption(\"table.narrowed\", false),\n    },\n    /** Rows are highlighted when hovering */\n    hoverable: {\n        type: Boolean,\n        default: () => getOption(\"table.hoverable\", false),\n    },\n    /** Enable loading state */\n    loading: { type: Boolean, default: false },\n    /** Allow row details  */\n    detailed: { type: Boolean, default: false },\n    /** Rows can be checked (multiple) */\n    checkable: { type: Boolean, default: false },\n    /** Show check/uncheck all checkbox in table header when checkable */\n    headerCheckable: { type: Boolean, default: true },\n    /**\n     * Position of the checkbox when checkable\n     * @values left, right\n     */\n    checkboxPosition: {\n        type: String,\n        default: () => getOption(\"table.checkboxPosition\", \"left\"),\n        validator: (value: string) => [\"left\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Color of the checkbox when checkable\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    checkboxVariant: {\n        type: String,\n        default: () => getOption(\"table.checkboxVariant\"),\n    },\n    /** Set which row is selected, use v-model:selected to make it two-way binding */\n    selected: { type: Object, default: undefined },\n    /** Custom method to verify if a row is selectable, works when is selected. */\n    isRowSelectable: { type: Function, default: () => true },\n    /** Table can be focused and user can navigate with keyboard arrows (require selected) and rows are highlighted when hovering */\n    focusable: { type: Boolean, default: false },\n    /** Custom method to verify if row is checked, works when is checkable. Useful for backend pagination */\n    customIsChecked: {\n        type: Function as PropType<(row: unknown, data: unknown[]) => boolean>,\n        default: undefined,\n    },\n    /** Custom method to verify if a row is checkable, works when is checkable */\n    isRowCheckable: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.isRowCheckable\", (row) => true)(row),\n    },\n    /** Set which rows are checked, use v-model:checkedRows to make it two-way binding */\n    checkedRows: { type: Array, default: () => [] },\n    /** Rows appears as cards on mobile (collapse rows) */\n    mobileCards: {\n        type: Boolean,\n        default: () => getOption(\"table.mobileCards\", true),\n    },\n    /** Sets the default sort column and order — e.g. ['first_name', 'desc'] */\n    defaultSort: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"table.defaultSort\"),\n    },\n    /**\n     * Sets the default sort column direction on the first click\n     * @values asc, desc\n     */\n    defaultSortDirection: {\n        type: String,\n        default: () => getOption(\"table.defaultSortDirection\", \"asc\"),\n    },\n    /** Sets the header sorting icon */\n    sortIcon: {\n        type: String,\n        default: () => getOption(\"table.sortIcon\", \"arrow-up\"),\n    },\n    /**\n     * Sets the size of the sorting icon\n     * @values small, medium, large\n     */\n    sortIconSize: {\n        type: String,\n        default: () => getOption(\"table.sortIconSize\", \"small\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"table.iconPack\"),\n    },\n    /** Columns won't be sorted with Javascript, use with sort event to sort in your backend */\n    backendSorting: {\n        type: Boolean,\n        default: () => getOption(\"table.backendSorting\", false),\n    },\n    /** Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend */\n    backendFiltering: {\n        type: Boolean,\n        default: () => getOption(\"table.backendFiltering\", false),\n    },\n    /** Add a class to row based on the return */\n    rowClass: {\n        type: Function as PropType<(row: unknown, index: number) => string>,\n        default: (row: unknown, index: number) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.rowClass\", (row, index) => \"\")(row, index),\n    },\n    /** Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop) */\n    openedDetailed: { type: Array, default: () => [] },\n    /** Controls the visibility of the trigger that toggles the detailed rows. */\n    hasDetailedVisible: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.hasDetailedVisible\", (row) => true)(row),\n    },\n    /** Use a unique key of your data Object when use detailed or opened detailed. (id recommended) */\n    detailKey: {\n        type: String,\n        default: () => getOption(\"table.detailKey\"),\n    },\n    /** Allow chevron icon and column to be visible */\n    showDetailIcon: {\n        type: Boolean,\n        default: () => getOption(\"table.showDetailIcon\", true),\n    },\n    /** Icon name of detail action */\n    detailIcon: {\n        type: String,\n        default: () => getOption(\"table.detailIcon\", \"chevron-right\"),\n    },\n    /** Custom style on details */\n    customDetailRow: { type: Boolean, default: false },\n    /* Transition name to use when toggling row details. */\n    detailTransition: {\n        type: String,\n        default: () => getOption(\"table.detailTransition\", \"slide\"),\n    },\n    /** Text when nothing is selected */\n    mobileSortPlaceholder: {\n        type: String,\n        default: () => getOption(\"table.mobileSortPlaceholder\"),\n    },\n    /** Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended) */\n    customRowKey: {\n        type: String,\n        default: () => getOption(\"table.customRowKey\"),\n    },\n    /** Allows rows to be draggable */\n    draggable: { type: Boolean, default: false },\n    /** Allows columns to be draggable */\n    draggableColumn: { type: Boolean, default: false },\n    /** Add a horizontal scrollbar when table is too wide */\n    scrollable: { type: Boolean, default: undefined },\n    /** Show a sticky table header */\n    stickyHeader: { type: Boolean, default: false },\n    /** Table fixed height */\n    height: { type: [Number, String], default: undefined },\n    /** Add a native event to filter */\n    filtersEvent: { type: String, default: \"\" },\n    /** Filtering debounce time (in milliseconds) */\n    debounceSearch: {\n        type: Number,\n        default: () => getOption(\"table.debounceSearch\", undefined),\n    },\n    /** Show header */\n    showHeader: {\n        type: Boolean,\n        default: () => getOption(\"table.showHeader\", true),\n    },\n    /** Make the checkbox column sticky when checkable */\n    stickyCheckbox: { type: Boolean, default: false },\n    /** Adds pagination to the table */\n    paginated: {\n        type: Boolean,\n        default: () => getOption(\"table.paginated\", false),\n    },\n    /** Rows won't be paginated with Javascript, use with page-change event to paginate in your backend */\n    backendPagination: { type: Boolean, default: false },\n    /** Total number of table data if backend-pagination is enabled */\n    total: { type: Number, default: 0 },\n    /** Current page of table data (if paginated), use v-model:currentPage to make it two-way binding */\n    currentPage: { type: Number, default: 1 },\n    /** How many rows per page (if paginated) */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"table.perPage\", 20),\n    },\n    /**\n     * Pagination position (if paginated)\n     * @values bottom, top, both\n     */\n    paginationPosition: {\n        type: String,\n        default: () => getOption(\"table.paginationPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"top\", \"both\"].indexOf(value) >= 0,\n    },\n    /** Rounded pagination if paginated */\n    paginationRounded: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationRounded\", false),\n    },\n    /** Size of pagination if paginated */\n    paginationSize: {\n        type: String,\n        default: () => getOption(\"table.paginationSize\", \"small\"),\n    },\n    /** Enable simple style pagination if paginated */\n    paginationSimple: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationSimple\", false),\n    },\n    /**\n     * Pagination buttons order if paginated\n     * @values centered, right, left\n     */\n    paginationOrder: {\n        type: String,\n        default: () => getOption(\"table.paginationOrder\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"table.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the pagination next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaNextLabel\"),\n    },\n    /** Accessibility label for the pagination previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPreviousLabel\"),\n    },\n    /** Accessibility label for the pagination page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPageLabel\"),\n    },\n    /** Accessibility label for the pagination current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaCurrentLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when it is empty */\n    emptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row detail */\n    detailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is bordered */\n    borderedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are striped */\n    stripedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are narrowed */\n    narrowedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when header is sticky */\n    stickyHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when its content is scrollable */\n    scrollableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when selected */\n    trSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when checkable and checked */\n    trCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element */\n    thClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is positioned */\n    thPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is sticky\" */\n    thStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when is checkable */\n    thCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element currently sorted */\n    thCurrentSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable Table `th` element */\n    thSortableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element that is unsortable */\n    thUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table sort icon in the header */\n    thSortIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element of the detail column of triggers */\n    thDetailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` subheading element */\n    thSubheadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element */\n    tdClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is positioned */\n    tdPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is sticky */\n    tdStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when is checkable */\n    tdCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element that contains the chevron to trigger details */\n    tdDetailedChevronClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable form wrapper on mobile */\n    mobileSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table pagination wrapper */\n    paginationWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * currentPage prop two-way binding\n     * @param value {number} updated currentPage prop\n     */\n    (e: \"update:currentPage\", value: number): void;\n    /**\n     * on pagination page change event\n     * @param page {number} updated page\n     */\n    (e: \"page-change\", page: number): void;\n    /**\n     * select prop two-way binding\n     * @param value {typeof data} updated select prop\n     */\n    (e: \"update:selected\", value: unknown): void;\n    /**\n     * on row select event\n     * @param newRow {typeof data} new select value\n     * @param oldRow {typeof data} old select value\n     */\n    (e: \"select\", newrow: unknown, oldrow: unknown): void;\n    /**\n     * on row checked event\n     * @param value {Array<typeof data>} all checked rows\n     * @param row {typeof data} row data\n     */\n    (e: \"check\", value: Array<unknown>, row?: unknown): void;\n    /**\n     * on all rows checked event\n     * @param value {Array<typeof data>} all checked rows\n     */\n    (e: \"check-all\", value: Array<unknown>): void;\n    /**\n     * checkedRows prop two-way binding\n     * @param value {Array<typeof data>} updated checkedRows prop\n     */\n    (e: \"update:checkedRows\", value: Array<unknown>): void;\n    /**\n     * on column sort change event\n     * @param column {Column} column data\n     * @param direction {string}  'asc' or 'desc'\n     *\n     * @param event {Event} native  event\n     */\n    (e: \"sort\", column: Column, direction: \"asc\" | \"desc\", event: Event): void;\n    /**\n     * on filter change event\n     * @param filters {Record<string, string>} filter object\n     */\n    (e: \"filters-change\", value: Record<string, string>): void;\n    /**\n     * on natvie filter event based on props filtersEvent\n     * @param filtersEvent {string} props filtersEvent value\n     * @param filters {Record<string, string>} filter object\n     * @param event {Event} native  event\n     */\n    (\n        e: \"filters-event\",\n        filtersEvent: string,\n        filters: Record<string, string>,\n        event: Event,\n    ): void;\n    /**\n     * openedDetailed prop two-way binding\n     * @param value {Array<typeof data>} updated openedDetailed prop\n     */\n    (e: \"update:openedDetailed\", value: Array<unknown>): void;\n    /**\n     * on details open event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-open\", row: unknown): void;\n    /**\n     * on details close event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-close\", row: unknown): void;\n    /**\n     * on row click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"click\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row double click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"dblclick\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row right click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native contextmenu event\n     */\n    (e: \"contextmenu\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseenter event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseenter event\n     */\n    (e: \"mouseenter\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseleave event\n     */\n    (e: \"mouseleave\", row: unknown, index: number, event: Event): void;\n    /**\n     * on cell click event\n     * @param row {typeof data} row data\n     * @param column {Column} column data\n     * @param index {number} row index\n     * @param colindex {number} column index\n     * @param event {Event} native click event\n     */\n    (\n        e: \"cell-click\",\n        row: unknown,\n        column: Column,\n        index: number,\n        colindex: number,\n        event: Event,\n    ): void;\n    /**\n     * on row dragstart event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragstart event\n     */\n    (e: \"dragstart\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragend event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragend event\n     */\n    (e: \"dragend\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row drop event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native drop event\n     */\n    (e: \"drop\", row: unknown, index: number, event: DragEvent): void;\n\n    /**\n     * on row dragleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragleave event\n     */\n    (e: \"dragleave\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragover event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragover event\n     */\n    (e: \"dragover\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on column columndragstart event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragstart event\n     */\n    (\n        e: \"columndragstart\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragend event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragend event\n     */\n    (e: \"columndragend\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndrop event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndrop event\n     */\n    (e: \"columndrop\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndragleave event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragleave event\n     */\n    (\n        e: \"columndragleave\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragover event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragover event\n     */\n    (\n        e: \"columndragover\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\n\nconst rootRef = ref<HTMLElement>();\nconst slotRef = ref<HTMLElement>();\n\n/** Provide functionalities and data to child item components */\nconst provider = useProviderParent<TableColumnComponent>(slotRef);\n\nconst tableColumns = computed<TableColumn[]>(() =>\n    provider.sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n        thAttrsData: {},\n        tdAttrsData: [],\n    })),\n);\n\nconst tableData = computed(() => {\n    if (!props.data?.length) return [...props.data];\n    // if no customRowKey is given and data are objects, create unique row id for each row\n    return props.data.map((row) =>\n        !props.customRowKey && typeof row === \"object\"\n            ? Object.assign({ __rowKey: uuid() }, row)\n            : row,\n    );\n});\n\nconst tableRows = ref(tableData.value);\nconst dataTotal = ref(\n    props.backendPagination ? props.total : tableData.value.length,\n);\n\nconst tableCurrentPage = usePropBinding<number>(\"currentPage\", props, emits, {\n    passive: true,\n});\n\n/**\n * When table rows data change:\n *   1. Update internal value.\n *   2. Filter data if it's not backend-filtered.\n *   3. Sort again if it's not backend-sorted.\n *   4. Set new total if it's not backend-paginated.\n */\nwatch(\n    () => tableData.value,\n    (value) => {\n        // if not backend filtered, filter rows\n        if (!props.backendFiltering)\n            tableRows.value = value.filter((row) => isRowFiltered(row));\n        else tableRows.value = [...value];\n        // if not backend sorted, sort rows\n        if (!props.backendSorting) sort(currentSortColumn.value, true);\n        // if not backend paginated, set pagination total\n        if (!props.backendPagination) dataTotal.value = tableRows.value.length;\n    },\n    { deep: true },\n);\n\n/**\n * When Pagination total change, update internal total\n * only if it's backend-paginated.\n */\nwatch(\n    () => props.total,\n    (newTotal) => {\n        if (!props.backendPagination) return;\n        dataTotal.value = newTotal;\n    },\n);\n\nconst tableWrapperStyle = computed(() => ({\n    height: toCssDimension(props.height),\n}));\n\n/** Splitted data based on the pagination. */\nconst visibleRows = computed(() => {\n    if (!props.paginated) return tableRows.value;\n\n    const currentPage = tableCurrentPage.value;\n    const perPage = Number(props.perPage);\n\n    if (tableRows.value.length <= perPage) {\n        return tableRows.value;\n    } else {\n        const start = (currentPage - 1) * perPage;\n        const end = start + perPage;\n        return tableRows.value.slice(start, end);\n    }\n});\n\nconst visibleColumns = computed(() => {\n    if (!tableColumns.value) return [];\n    return tableColumns.value.filter(\n        (column) => column.visible || column.visible === undefined,\n    );\n});\n\n/** process thAttrs & tdAttrs when row or columns got changed */\nwatch([visibleRows, visibleColumns], () => {\n    if (visibleColumns.value.length && visibleRows.value.length) {\n        for (let i = 0; i < visibleColumns.value.length; i++) {\n            const col = visibleColumns.value[i];\n            col.thAttrsData =\n                typeof col.thAttrs === \"function\" ? col.thAttrs(col) : {};\n            col.tdAttrsData = visibleRows.value.map((data) =>\n                typeof col.tdAttrs === \"function\" ? col.tdAttrs(data, col) : {},\n            );\n        }\n    }\n});\n\n/** Return total column count based if it's checkable or expanded */\nconst columnCount = computed(() => {\n    let count = visibleColumns.value.length;\n    count += props.checkable ? 1 : 0;\n    count += props.detailed && props.showDetailIcon ? 1 : 0;\n    return count;\n});\n\n/** Check if has any searchable column. */\nconst hasSearchablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.searchable),\n);\n\n/** return if scrollable table */\nconst isScrollable = computed(() => {\n    if (props.scrollable) return true;\n    if (!tableColumns.value) return false;\n    return tableColumns.value.some((column) => column.sticky);\n});\n\nconst slots = useSlots();\n\nconst hasCustomSubheadings = computed(() => {\n    if (slots.subheading) return true;\n    return tableColumns.value.some((column) => !!column.subheading);\n});\n\n/** Check if footer slot has custom content. */\nfunction hasCustomFooterSlot(): boolean {\n    if (slots.footer) {\n        // [Vue warn]: Slot \"footer\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\n        const footer = slots.footer();\n        if (footer.length > 1) return true;\n\n        const tag = footer[0][\"tag\"];\n        if (tag !== \"th\" && tag !== \"td\") return false;\n    }\n    return true;\n}\n\n/** Table arrow keys listener, change selection. */\nfunction onArrowPressed(pos: number, event: KeyboardEvent): void {\n    if (!visibleRows.value.length) return;\n\n    let index = visibleRows.value.indexOf(props.selected) + pos;\n\n    // Prevent from going up from first and down from last\n    index =\n        index < 0\n            ? 0\n            : index > visibleRows.value.length - 1\n              ? visibleRows.value.length - 1\n              : index;\n\n    const row = visibleRows.value[index];\n\n    if (!props.isRowSelectable(row)) {\n        let newIndex = null;\n        if (pos > 0) {\n            for (\n                let i = index;\n                i < visibleRows.value.length && newIndex === null;\n                i++\n            ) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        } else {\n            for (let i = index; i >= 0 && newIndex === null; i--) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        }\n        if (newIndex >= 0) {\n            selectRow(visibleRows.value[newIndex], index, event);\n        }\n    } else {\n        selectRow(row, index, event);\n    }\n}\n\n/**\n * Row click listener.\n * Emit all necessary events.\n */\nfunction selectRow(row: unknown, index: number, event: Event): void {\n    emits(\"click\", row, index, event);\n\n    if (props.selected === row) return;\n    if (!props.isRowSelectable(row)) return;\n\n    // emit new and old row\n    emits(\"select\", row, props.selected);\n\n    // emit new row to update user variable\n    emits(\"update:selected\", row);\n}\n\nfunction isRowSelected(row: unknown, selectedRow: unknown): boolean {\n    return selectedRow ? getRowKey(row) === getRowKey(selectedRow) : false;\n}\n\nfunction getRowKey(row: unknown): unknown {\n    if (props.customRowKey) return row[props.customRowKey];\n    if (typeof row === \"object\") return row[\"__rowKey\"];\n    return row;\n}\n\n// --- Filter Feature ---\n\nconst filters = ref<Record<string, string>>({});\n\nwatch(\n    filters.value,\n    (value) => {\n        if (props.debounceSearch)\n            useDebounce(\n                () => handleFiltersChange(value),\n                props.debounceSearch,\n            )();\n        else handleFiltersChange(value);\n    },\n    { deep: true },\n);\n\nfunction onFiltersEvent(event: Event): void {\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\n}\n\nfunction handleFiltersChange(value: Record<string, string>): void {\n    if (props.backendFiltering) {\n        emits(\"filters-change\", value);\n    } else {\n        tableRows.value = props.data.filter((row) => isRowFiltered(row));\n        if (!props.backendPagination) {\n            dataTotal.value = tableRows.value.length;\n        }\n        if (!props.backendSorting) {\n            if (\n                currentSortColumn.value &&\n                Object.keys(currentSortColumn.value).length > 0\n            ) {\n                doSortSingleColumn(currentSortColumn.value);\n            }\n        }\n    }\n}\n\nfunction isRowFiltered(row: unknown): boolean {\n    for (const key in filters.value) {\n        if (!filters.value[key]) continue;\n        const input = filters.value[key];\n        const column = tableColumns.value.filter((c) => c.field === key)[0];\n        if (typeof column?.customSearch === \"function\") {\n            if (!column.customSearch(row, input)) return false;\n        } else {\n            const value = getValueByPath(row, key);\n            if (value == null) return false;\n            if (Number.isInteger(value)) {\n                if (value !== Number(input)) return false;\n            } else {\n                const re = new RegExp(escapeRegExpChars(input), \"i\");\n                if (Array.isArray(value)) {\n                    const valid = value.some(\n                        (val) =>\n                            re.test(removeDiacriticsFromString(val)) ||\n                            re.test(val),\n                    );\n                    if (!valid) return false;\n                } else {\n                    if (\n                        !re.test(removeDiacriticsFromString(value)) &&\n                        !re.test(value)\n                    ) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n    return true;\n}\n\n// --- Sort Feature ---\n\nconst currentSortColumn = ref<TableColumn>();\nconst isAsc = ref(true);\n\nonMounted(() => nextTick(() => checkSort()));\n\n/** Check if has any sortable column. */\nconst hasSortablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.sortable),\n);\n\n/** Check if the column is the current sort column. */\nfunction isColumnSorted(column: TableColumn): boolean {\n    return currentSortColumn.value?.identifier === column.identifier;\n}\n\n/** Call initSort only first time (For example async data). */\nfunction checkSort(): void {\n    if (tableColumns.value.length && !currentSortColumn.value) {\n        // is first time sort\n        initSort();\n    } else if (tableColumns.value.length) {\n        if (\n            currentSortColumn.value &&\n            Object.keys(currentSortColumn.value).length > 0\n        ) {\n            for (let i = 0; i < tableColumns.value.length; i++) {\n                if (\n                    currentSortColumn.value.field ===\n                    tableColumns.value[i].field\n                ) {\n                    currentSortColumn.value = tableColumns.value[i];\n                    break;\n                }\n            }\n        }\n    }\n}\n\n/** Initial sorted column based on the default-sort prop. */\nfunction initSort(): void {\n    if (!props.defaultSort) return;\n    let sortField = \"\";\n    let sortDirection = props.defaultSortDirection;\n    if (Array.isArray(props.defaultSort)) {\n        sortField = props.defaultSort[0];\n        if (props.defaultSort[1]) {\n            sortDirection = props.defaultSort[1];\n        }\n    } else {\n        sortField = props.defaultSort;\n    }\n    const sortColumn = tableColumns.value.filter(\n        (column) => column.field === sortField,\n    )[0];\n    if (sortColumn) {\n        isAsc.value = sortDirection.toLowerCase() !== \"desc\";\n        sort(sortColumn, true);\n    }\n}\n\n/**\n * Sort the column.\n * Toggle current direction on column if it's sortable\n * and not just updating the prop.\n */\nfunction sort(\n    column: TableColumn,\n    updateDirection = false,\n    event?: Event,\n): void {\n    if (!column || !column.sortable) return;\n\n    if (!updateDirection)\n        isAsc.value = isColumnSorted(column)\n            ? !isAsc.value\n            : props.defaultSortDirection.toLowerCase() !== \"desc\";\n\n    // if not first time sort\n    if (currentSortColumn.value)\n        emits(\"sort\", column, isAsc.value ? \"asc\" : \"desc\", event);\n\n    if (!props.backendSorting) doSortSingleColumn(column);\n\n    currentSortColumn.value = column;\n}\n\nfunction doSortSingleColumn(column: Column): void {\n    tableRows.value = sortBy(\n        tableRows.value,\n        column.field,\n        column.customSort,\n        isAsc.value,\n    );\n}\n\n/**\n * Sort an array by key without mutating original data.\n * Call the user sort function if it was passed.\n */\nfunction sortBy(\n    array: unknown[],\n    key: string,\n    fn: (a: unknown, b: unknown, asc: boolean) => number,\n    isAsc: boolean,\n): unknown[] {\n    let sorted = [];\n    // Sorting without mutating original data\n    if (fn && typeof fn === \"function\") {\n        sorted = [...array].sort((a, b) => fn(a, b, isAsc));\n    } else {\n        sorted = [...array].sort((a, b) => {\n            // Get nested values from objects\n            let newA = getValueByPath(a, key);\n            let newB = getValueByPath(b, key);\n\n            // sort boolean type\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n            }\n\n            if (!newA && newA !== 0) return 1;\n            if (!newB && newB !== 0) return -1;\n            if (newA === newB) return 0;\n\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\n\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n        });\n    }\n\n    return sorted;\n}\n\n// --- Checkable Feature ---\n\nconst newCheckedRows = ref([...props.checkedRows]);\nconst lastCheckedRowIndex = ref(null);\n\n/**\n * When checkedRows prop change, update internal value without\n * mutating original data.\n */\nwatch(\n    () => props.checkedRows,\n    (rows) => {\n        newCheckedRows.value = [...rows];\n    },\n    { deep: true },\n);\n\n/** Check if all rows in the page are checked. */\nconst isAllChecked = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    if (validVisibleData.length === 0) return false;\n    const isAllChecked = validVisibleData.some(\n        (currentVisibleRow) =>\n            indexOf(\n                newCheckedRows.value,\n                currentVisibleRow,\n                props.customIsChecked,\n            ) < 0,\n    );\n    return !isAllChecked;\n});\n\n/** Check if all rows in the page are checkable. */\nconst isAllUncheckable = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    return validVisibleData.length === 0;\n});\n\n/** Check if the row is checked (is added to the array). */\nfunction isRowChecked(row: unknown): boolean {\n    return indexOf(newCheckedRows.value, row, props.customIsChecked) >= 0;\n}\n\n/** Remove a checked row from the array. */\nfunction removeCheckedRow(row: unknown): void {\n    const index = indexOf(newCheckedRows.value, row, props.customIsChecked);\n    if (index >= 0) newCheckedRows.value.splice(index, 1);\n}\n\n/**\n * Header checkbox click listener.\n * Add or remove all rows in current page.\n */\nfunction checkAll(): void {\n    const allChecked = isAllChecked.value;\n    visibleRows.value.forEach((currentRow) => {\n        if (props.isRowCheckable(currentRow)) removeCheckedRow(currentRow);\n\n        if (!allChecked) {\n            if (props.isRowCheckable(currentRow))\n                newCheckedRows.value.push(currentRow);\n        }\n    });\n\n    emits(\"check\", newCheckedRows.value);\n    emits(\"check-all\", newCheckedRows.value);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Row checkbox click listener. */\nfunction checkRow(row: unknown, index: number): void {\n    if (!props.isRowCheckable(row)) return;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const lastIndex = lastCheckedRowIndex.value;\n    lastCheckedRowIndex.value = index;\n\n    // if (event.shiftKey && lastIndex !== null && index !== lastIndex) {\n    //         shiftCheckRow(row, index, lastIndex);\n\n    if (!isRowChecked(row)) newCheckedRows.value.push(row);\n    else removeCheckedRow(row);\n\n    emits(\"check\", newCheckedRows.value, row);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Check row when shift is pressed. */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction shiftCheckRow(\n    row: unknown,\n    index: number,\n    lastCheckedRowIndex: number,\n): void {\n    // Get the subset of the list between the two indicies\n    const subset = visibleRows.value.slice(\n        Math.min(index, lastCheckedRowIndex),\n        Math.max(index, lastCheckedRowIndex) + 1,\n    );\n\n    // Determine the operation based on the state of the clicked checkbox\n    const shouldCheck = !isRowChecked(row);\n\n    subset.forEach((item) => {\n        removeCheckedRow(item);\n        if (shouldCheck && props.isRowCheckable(item))\n            newCheckedRows.value.push(item);\n    });\n}\n\n// --- Detail Row Feature ---\n\nconst visibleDetailRows = ref(props.openedDetailed);\n\n/**\n * return if detailed row tabled\n * will be with chevron column & icon or not\n */\nconst showDetailRowIcon = computed(\n    () => props.detailed && props.showDetailIcon,\n);\n\n/**\n * When the user wants to control the detailed rows via props.\n * Or wants to open the details of certain row with the router for example.\n */\nwatch(\n    () => props.openedDetailed,\n    (expandedRows) => {\n        visibleDetailRows.value = expandedRows;\n    },\n);\n\n/** Toggle to show/hide details slot */\nfunction toggleDetails(row: unknown): void {\n    const found = isVisibleDetailRow(row);\n\n    if (found) {\n        closeDetailRow(row);\n        emits(\"details-close\", row);\n    } else {\n        openDetailRow(row);\n        emits(\"details-open\", row);\n    }\n\n    // Syncs the detailed rows with the parent component\n    emits(\"update:openedDetailed\", visibleDetailRows.value);\n}\n\nfunction openDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    visibleDetailRows.value.push(index);\n}\n\nfunction closeDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    const i = visibleDetailRows.value.indexOf(index);\n    if (i >= 0) visibleDetailRows.value.splice(i, 1);\n}\n\nfunction isVisibleDetailRow(row: unknown): boolean {\n    const index = handleDetailKey(row);\n    return visibleDetailRows.value.indexOf(index) >= 0;\n}\n\nfunction isActiveDetailRow(row: unknown): boolean {\n    return props.detailed && !props.customDetailRow && isVisibleDetailRow(row);\n}\n\nfunction isActiveCustomDetailRow(row: unknown): boolean {\n    return props.detailed && props.customDetailRow && isVisibleDetailRow(row);\n}\n\n/**\n * When the detailKey is defined we use the object[detailKey] as index.\n * If not, use the object reference by default.\n */\nfunction handleDetailKey(row: unknown): string {\n    const key = props.detailKey;\n    return !key?.length || !row ? row : row[key];\n}\n\n// --- Drag&Drop Feature ---\n\nconst isDraggingRow = ref(false);\nconst isDraggingColumn = ref(false);\n\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\n\nconst canDragColumn = computed(\n    () => props.draggableColumn && !isDraggingRow.value,\n);\n\n/** Emits drag start event*/\nfunction handleDragStart(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragstart\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragEnd(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragend\", row, index, event);\n}\n\n/** Emits drop event */\nfunction handleDrop(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"drop\", row, index, event);\n}\n\n/** Emits drag over event */\nfunction handleDragOver(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragover\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragLeave(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragleave\", row, index, event);\n}\n\n/** Emits drag start event (column) */\nfunction handleColumnDragStart(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = true;\n    emits(\"columndragstart\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragEnd(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = false;\n    emits(\"columndragend\", column, index, event);\n}\n\n/** Emits drop event (column) */\nfunction handleColumnDrop(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndrop\", column, index, event);\n}\n\n/** Emits drag over event (column) */\nfunction handleColumnDragOver(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragover\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragLeave(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragleave\", column, index, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-table__root\"],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-table\"],\n    [\n        \"borderedClass\",\n        \"o-table--bordered\",\n        null,\n        computed(() => props.bordered),\n    ],\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\n    [\n        \"narrowedClass\",\n        \"o-table--narrowed\",\n        null,\n        computed(() => props.narrowed),\n    ],\n    [\n        \"hoverableClass\",\n        \"o-table--hoverable\",\n        null,\n        computed(\n            () =>\n                (props.hoverable || props.focusable) &&\n                !!visibleRows.value.length,\n        ),\n    ],\n    [\n        \"emptyClass\",\n        \"o-table--table__empty\",\n        null,\n        computed(() => !visibleRows.value.length),\n    ],\n);\n\nconst tableWrapperClasses = defineClasses(\n    [\"wrapperClass\", \"o-table__wrapper\"],\n    [\n        \"stickyHeaderClass\",\n        \"o-table__wrapper--sticky-header\",\n        null,\n        computed(() => props.stickyHeader),\n    ],\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\n\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\n\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\n\nconst thCheckboxClasses = defineClasses([\n    \"thCheckboxClass\",\n    \"o-table__th-checkbox\",\n]);\n\nconst thDetailedClasses = defineClasses([\n    \"thDetailedClass\",\n    \"o-table__th--detailed\",\n]);\n\nconst thSubheadingClasses = defineClasses([\"thSubheadingClass\", \"o-table__th\"]);\n\nconst tdCheckboxClasses = defineClasses(\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.stickyCheckbox),\n    ],\n);\n\nconst detailedClasses = defineClasses([\"detailedClass\", \"o-table__detail\"]);\n\nconst tdDetailedChevronClasses = defineClasses([\n    \"tdDetailedChevronClass\",\n    \"o-table__td-chevron\",\n]);\n\nconst mobileSortClasses = defineClasses([\n    \"mobileSortClass\",\n    \"o-table__mobile-sort\",\n]);\n\nconst paginationWrapperClasses = defineClasses([\n    \"paginationWrapperClass\",\n    \"o-table__pagination\",\n]);\n\nconst paginationWrapperRootClasses = computed(() =>\n    getActiveClasses(paginationWrapperClasses.value),\n);\n\nconst thSortIconClasses = defineClasses([\n    \"thSortIconClass\",\n    \"o-table__th__sort-icon\",\n]);\n\nfunction thClasses(column: TableColumn): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"thCurrentSortClass\",\n            \"o-table__th-current-sort\",\n            null,\n            isColumnSorted(column),\n        ],\n        [\"thSortableClass\", \"o-table__th--sortable\", null, column.sortable],\n        [\n            \"thUnselectableClass\",\n            \"o-table__th--unselectable\",\n            null,\n            column.isHeaderUnselectable,\n        ],\n        [\n            \"thPositionClass\",\n            \"o-table__th--\",\n            column.position,\n            !!column.position,\n        ],\n        [\"thStickyClass\", \"o-table__th--sticky\", null, column.sticky],\n    );\n\n    return [...thBaseClasses.value, ...classes.value];\n}\n\nfunction rowClasses(row: unknown, index: number): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"trSelectedClass\",\n            \"o-table__tr--selected\",\n            null,\n            isRowSelected(row, props.selected),\n        ],\n        [\"trCheckedClass\", \"o-table__tr--checked\", null, isRowChecked(row)],\n    );\n\n    const rowClass = props.rowClass(row, index);\n\n    return [...classes.value, { [rowClass]: true }];\n}\n\nfunction tdClasses(row: unknown, column: TableColumnComponent): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tdPositionClass\",\n            \"o-table__td--\",\n            column.position,\n            !!column.position,\n        ],\n\n        [\"tdStickyClass\", \"o-table__td--sticky\", null, column.sticky],\n    );\n\n    return [...tdBaseClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"table\">\n        <div ref=\"slotRef\" style=\"display: none\">\n            <!--\n                @slot Place o-table-column here\n            -->\n            <slot>\n                <template v-if=\"columns?.length\">\n                    <o-table-column\n                        v-for=\"(column, idx) in columns\"\n                        :key=\"idx\"\n                        v-slot=\"{ row }\"\n                        v-bind=\"column\">\n                        {{ column.field ? row[column.field] : row }}\n                    </o-table-column>\n                </template>\n            </slot>\n        </div>\n\n        <o-table-mobile-sort\n            v-if=\"isMobileActive && hasSortablenewColumns\"\n            :current-sort-column=\"currentSortColumn\"\n            :columns=\"tableColumns\"\n            :placeholder=\"mobileSortPlaceholder\"\n            :icon-pack=\"iconPack\"\n            :sort-icon=\"sortIcon\"\n            :sort-icon-size=\"sortIconSize\"\n            :is-asc=\"isAsc\"\n            :mobile-sort-classes=\"mobileSortClasses\"\n            @sort=\"(column, event) => sort(column, null, event)\" />\n\n        <template\n            v-if=\"\n                paginated &&\n                (paginationPosition === 'top' || paginationPosition === 'both')\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"top-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\n            <table\n                :class=\"tableClasses\"\n                :tabindex=\"!focusable ? null : 0\"\n                @keydown.self.prevent.up=\"onArrowPressed(-1, $event)\"\n                @keydown.self.prevent.down=\"onArrowPressed(1, $event)\">\n                <caption v-if=\"$slots.caption\">\n                    <!--\n                        @slot Define a table caption here\n                    -->\n                    <slot name=\"caption\" />\n                </caption>\n                <thead v-if=\"tableColumns.length && showHeader\">\n                    <!--\n                        @slot Define preheader content here\n                    -->\n                    <slot name=\"preheader\" />\n                    <tr>\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'left'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <!--\n                                @slot Override check all checkbox\n                                @binding {boolean} is-all-checked - if all rows are checked\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                @binding {(): void} check-all - check all function\n                            -->\n                            <slot\n                                name=\"check-all\"\n                                :is-all-checked=\"isAllChecked\"\n                                :is-all-uncheckable=\"isAllUncheckable\"\n                                :check-all=\"checkAll\">\n                                <o-checkbox\n                                    v-if=\"headerCheckable\"\n                                    :model-value=\"isAllChecked\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"isAllUncheckable\"\n                                    @update:model-value=\"checkAll\" />\n                            </slot>\n                        </th>\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"column.identifier + ':' + index + 'header'\"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :draggable=\"canDragColumn\"\n                            @click.stop=\"sort(column, null, $event)\"\n                            @dragstart=\"\n                                handleColumnDragStart(column, index, $event)\n                            \"\n                            @dragend=\"\n                                handleColumnDragEnd(column, index, $event)\n                            \"\n                            @drop=\"handleColumnDrop(column, index, $event)\"\n                            @dragover=\"\n                                handleColumnDragOver(column, index, $event)\n                            \"\n                            @dragleave=\"\n                                handleColumnDragLeave(column, index, $event)\n                            \">\n                            <template v-if=\"column.$slots?.header\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"header\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                <span>\n                                    {{ column.label }}\n                                    <span\n                                        v-show=\"\n                                            column.sortable &&\n                                            isColumnSorted(column)\n                                        \"\n                                        :class=\"thSortIconClasses\">\n                                        <o-icon\n                                            :icon=\"sortIcon\"\n                                            :pack=\"iconPack\"\n                                            both\n                                            :size=\"sortIconSize\"\n                                            :rotation=\"!isAsc ? 180 : 0\" />\n                                    </span>\n                                </span>\n                            </template>\n                        </th>\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'right'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <template v-if=\"headerCheckable\">\n                                <!--\n                                    @slot Override check all checkbox\n                                    @binding {boolean} is-all-checked - if all rows are checked\n                                    @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                    @binding {(): void} check-all - check all function\n                                -->\n                                <slot\n                                    name=\"check-all\"\n                                    :is-all-checked=\"isAllChecked\"\n                                    :is-all-uncheckable=\"isAllUncheckable\"\n                                    :check-all=\"checkAll\">\n                                    <o-checkbox\n                                        :model-value=\"isAllChecked\"\n                                        autocomplete=\"off\"\n                                        :variant=\"checkboxVariant\"\n                                        :disabled=\"isAllUncheckable\"\n                                        @update:model-value=\"checkAll\" />\n                                </slot>\n                            </template>\n                        </th>\n                    </tr>\n                    <tr v-if=\"hasSearchablenewColumns\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'searchable'\n                            \"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\">\n                            <template v-if=\"column.searchable\">\n                                <template v-if=\"column.$slots?.searchable\">\n                                    <o-slot-component\n                                        :component=\"column.$el\"\n                                        name=\"searchable\"\n                                        tag=\"span\"\n                                        :props=\"{ column, index, filters }\" />\n                                </template>\n                                <o-input\n                                    v-else\n                                    v-model=\"filters[column.field]\"\n                                    :type=\"column.numeric ? 'number' : 'text'\"\n                                    @[filtersEvent]=\"onFiltersEvent\" />\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                    <tr v-if=\"hasCustomSubheadings\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'subheading'\n                            \"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :class=\"[...thBaseClasses, ...thSubheadingClasses]\">\n                            <template v-if=\"column.$slots?.subheading\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"subheading\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                {{ column.subheading }}\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    <template\n                        v-for=\"(row, index) in visibleRows\"\n                        :key=\"getRowKey(row) + 'row'\">\n                        <tr\n                            :class=\"rowClasses(row, index)\"\n                            :draggable=\"canDragRow\"\n                            @click=\"selectRow(row, index, $event)\"\n                            @dblclick=\"$emit('dblclick', row, index, $event)\"\n                            @mouseenter=\"\n                                $emit('mouseenter', row, index, $event)\n                            \"\n                            @mouseleave=\"\n                                $emit('mouseleave', row, index, $event)\n                            \"\n                            @contextmenu=\"\n                                $emit('contextmenu', row, index, $event)\n                            \"\n                            @dragstart=\"handleDragStart(row, index, $event)\"\n                            @dragend=\"handleDragEnd(row, index, $event)\"\n                            @drop=\"handleDrop(row, index, $event)\"\n                            @dragover=\"handleDragOver(row, index, $event)\"\n                            @dragleave=\"handleDragLeave(row, index, $event)\">\n                            <!-- detailed toggle column -->\n                            <td\n                                v-if=\"showDetailRowIcon\"\n                                :class=\"[\n                                    ...tdBaseClasses,\n                                    ...tdDetailedChevronClasses,\n                                ]\">\n                                <o-icon\n                                    v-if=\"hasDetailedVisible(row)\"\n                                    :icon=\"detailIcon\"\n                                    :pack=\"iconPack\"\n                                    :rotation=\"isVisibleDetailRow(row) ? 90 : 0\"\n                                    role=\"button\"\n                                    clickable\n                                    both\n                                    @click.stop=\"toggleDetails(row)\" />\n                            </td>\n\n                            <!-- checkable column left -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'left'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n\n                            <!-- row data columns -->\n                            <o-slot-component\n                                v-for=\"(column, colindex) in visibleColumns\"\n                                :key=\"\n                                    column.identifier + index + ':' + colindex\n                                \"\n                                v-bind=\"column.tdAttrsData[index]\"\n                                :component=\"column.$el\"\n                                name=\"default\"\n                                tag=\"td\"\n                                :class=\"tdClasses(row, column)\"\n                                :style=\"isMobileActive ? {} : column.style\"\n                                :data-label=\"column.label\"\n                                :props=\"{\n                                    row,\n                                    column,\n                                    index,\n                                    colindex,\n                                    toggleDetails,\n                                }\"\n                                @click=\"\n                                    $emit(\n                                        'cell-click',\n                                        row,\n                                        column,\n                                        index,\n                                        colindex,\n                                        $event,\n                                    )\n                                \" />\n\n                            <!-- checkable column right -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'right'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n                        </tr>\n\n                        <transition :name=\"detailTransition\">\n                            <tr\n                                v-if=\"isActiveDetailRow(row)\"\n                                :key=\"getRowKey(row) + 'detail'\"\n                                :class=\"detailedClasses\">\n                                <td :colspan=\"columnCount\">\n                                    <!--\n                                        @slot Place row detail content here\n                                        @binding {unknown} row - row content\n                                        @binding {number} index - row index\n                                    -->\n                                    <slot\n                                        name=\"detail\"\n                                        :row=\"row as any\"\n                                        :index=\"index\" />\n                                </td>\n                            </tr>\n                        </transition>\n                        <!--\n                            @slot Place row detail content here\n                            @binding {unknown} row - row content\n                            @binding {number} index - row index\n                        -->\n                        <slot\n                            v-if=\"isActiveCustomDetailRow(row)\"\n                            name=\"detail\"\n                            :row=\"row as any\"\n                            :index=\"index\" />\n                    </template>\n\n                    <tr v-if=\"!visibleRows.length\">\n                        <td :colspan=\"columnCount\">\n                            <!--\n                                @slot Define content if table is empty\n                            -->\n                            <slot name=\"empty\" />\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"$slots.footer\">\n                    <tr :class=\"footerClasses\">\n                        <!--\n                            @slot Define a custom footer\n                            @binding {number} column-count - counts of visible columns\n                            @binding {number} row-count - counts of visible rows\n                        -->\n                        <slot\n                            v-if=\"hasCustomFooterSlot()\"\n                            name=\"footer\"\n                            :column-count=\"columnCount\"\n                            :row-count=\"visibleRows?.length\" />\n                        <th v-else :colspan=\"columnCount\">\n                            <!--\n                                @slot Define a custom footer\n                                @binding {number} column-count - counts of visible columns\n                                @binding {number} row-count - counts of visible rows\n                            -->\n                            <slot\n                                name=\"footer\"\n                                :column-count=\"columnCount\"\n                                :row-count=\"visibleRows?.length\" />\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n            <!--\n                @slot Override loading component\n                @binding {boolean} loading - is loading enabled\n            -->\n            <slot name=\"loading\" :loading=\"loading\">\n                <o-loading :full-page=\"false\" :active=\"loading\" />\n            </slot>\n        </div>\n\n        <template\n            v-if=\"\n                (checkable && $slots['bottom-left']) ||\n                (paginated &&\n                    (paginationPosition === 'bottom' ||\n                        paginationPosition === 'both'))\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"bottom-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Table from \"./Table.vue\";\nimport TableColumn from \"./TableColumn.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export table specific types */\nexport type { Column } from \"./types\";\n\n/** export table plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Table);\n        registerComponent(app, TableColumn);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Table as OTable, TableColumn as OTableColumn };\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport { getOption } from \"@/utils/config\";\nimport { mod, isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal navigation tabs, switch between contents with ease\n * @displayName Tabs\n * @requires ./TabItem.vue\n * @style _tabs.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabs\",\n    configField: \"tabs\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: 0 },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tabs.variant\"),\n    },\n    /**\n     * Tab size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"tabs.size\"),\n    },\n    /** Show tab in vertical layout */\n    vertical: {\n        type: Boolean,\n        default: () => getOption(\"tabs.vertical\", false),\n    },\n    /**\n     * Position of the tabs\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Tab type\n     * @values boxed, toggle\n     */\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\n    /** Tabs will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Destroy tabItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Tab will have an animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"tabs.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animateInitially\", false),\n    },\n    /** Show tab items multiline when there is no space */\n    multiline: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when vertical */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav tabs */\n    navTabsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the navigation */\n    navSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav position */\n    navPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Type of the navigation */\n    navTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content when transitioning */\n    transitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item wrapper */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on tab change event\n     * @param value {string | number} new tab value\n     * @param value {string | number} old tab value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<TabsComponent>(() => ({\n    activeValue: vmodel.value,\n    type: props.type,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<TabItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/**  When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst activeIndex = computed(() => activeItem.value.index);\n\nfunction isActive(item: TabItem): boolean {\n    return item.value === activeItem.value.value;\n}\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: TabItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Go to the next item or wrap around */\nfunction next(): void {\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\n    clickFirstViableChild(newIndex, true);\n}\n\n/** Go to the previous item or wrap around */\nfunction prev(): void {\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\n    clickFirstViableChild(newIndex, false);\n}\n\n/** Go to the first viable item */\nfunction homePressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(0, true);\n}\n\n/** Go to the last viable item */\nfunction endPressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(items.value.length - 1, false);\n}\n\n/**\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex !== activeIndex.value;\n        newIndex = mod(newIndex + direction, items.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\n            break;\n    }\n    itemClick(items.value[newIndex]);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = vmodel.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tabs\"],\n    [\n        \"positionClass\",\n        \"o-tabs--\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\n        \"expandedClass\",\n        \"o-tabs--fullwidth\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\n    [\n        \"multilineClass\",\n        \"o-tabs--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst itemWrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-tabs__nav-item-wrapper\",\n]);\n\nconst navClasses = defineClasses(\n    [\"navTabsClass\", \"o-tabs__nav\"],\n    [\n        \"navSizeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"navPositionClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.position),\n        computed(() => props.position && !props.vertical),\n    ],\n    [\n        \"navTypeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.type),\n        computed(() => !!props.type),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tabs__content\"],\n    [\n        \"transitioningClass\",\n        \"o-tabs__content--transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nfunction itemHeaderClasses(\n    childItem: (typeof items.value)[number],\n): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-tabs__nav-item-{*}--active\",\n            props.type,\n            isActive(childItem),\n        ],\n        [\n            \"itemHeaderDisabledClass\",\n            \"o-tabs__nav-item-{*}--disabled\",\n            props.type,\n            childItem.disabled,\n        ],\n    );\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\n        <nav\n            :class=\"navClasses\"\n            role=\"tablist\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <!--\n                @slot Additional slot before tabs\n            -->\n            <slot name=\"start\" />\n            <div\n                v-for=\"childItem in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :class=\"itemWrapperClasses\"\n                role=\"tab\"\n                :aria-controls=\"`${childItem.value}-content`\"\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\n                <o-slot-component\n                    v-if=\"childItem.$slots.header\"\n                    :component=\"childItem\"\n                    :tag=\"childItem.tag\"\n                    name=\"header\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\" />\n\n                <component\n                    :is=\"childItem.tag\"\n                    v-else\n                    role=\"button\"\n                    :tabindex=\"0\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\">\n                    <o-icon\n                        v-if=\"childItem.icon\"\n                        :root-class=\"\n                            getActiveClasses(childItem.headerIconClasses)\n                        \"\n                        :icon=\"childItem.icon\"\n                        :pack=\"childItem.iconPack\"\n                        :size=\"size\" />\n                    <span :class=\"childItem.headerTextClasses\">\n                        {{ childItem.label }}\n                    </span>\n                </component>\n            </div>\n            <!--\n                @slot Additional slot after tabs\n            -->\n            <slot name=\"end\" />\n        </nav>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place tab items here\n            -->\n            <slot />\n        </section>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { TabsComponent, TabItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Tab Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabItem\",\n    configField: \"tabs\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"tabs.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"tabs.iconPack\"),\n    },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Tabs item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the tab item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when disabled */\n    itemHeaderDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header type */\n    itemHeaderTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header icon */\n    itemHeaderIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header text */\n    itemHeaderTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    (e: \"activate\"): void;\n    /** on tab item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<TabItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    headerIconClasses: headerIconClasses.value,\n    headerTextClasses: headerTextClasses.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent component\nconst { parent, item } = useProviderChild<TabsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\n\nconst headerIconClasses = defineClasses([\n    \"itemHeaderIconClass\",\n    \"o-tabs__nav-item-icon\",\n]);\n\nconst headerTextClasses = defineClasses([\n    \"itemHeaderTextClass\",\n    \"o-tabs__nav-item-text\",\n]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`tabs-${item.identifier}`\"\n                data-oruga=\"tabs-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                    @slot Tab item content\n                -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Tabs from \"./Tabs.vue\";\nimport TabItem from \"./TabItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tabs specific types */\nexport type * from \"./types\";\n\n/** export tabs plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tabs);\n        registerComponent(app, TabItem);\n    },\n} as Plugin;\n\n/** export tabs components */\nexport { Tabs as OTabs, TabItem as OTabItem };\n","<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    useAttrs,\n    watchEffect,\n    type ComponentInstance,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple tag input field that can have autocomplete functionality\n * @displayName Taginput\n * @style _taginput.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTaginput\",\n    configField: \"taginput\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Array as PropType<T[]>, default: () => [] },\n    /** Items data */\n    data: { type: Array as PropType<T[]>, default: () => [] },\n    /** Property of the object (if data is array of objects) to use as display text */\n    field: { type: String, default: \"value\" },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /**\n     * Vertical size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"taginput.size\"),\n    },\n    /**\n     * Color of the each item\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"taginput.variant\"),\n    },\n    /** Limits the number of items, plus item counter */\n    maxitems: { type: [String, Number], default: undefined },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [String, Number], default: undefined },\n    /** Show counter when maxlength or maxtags props are passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"taginput.counter\", true),\n    },\n    /** Opens a dropdown with choices when the input field is focused */\n    openOnFocus: { type: Boolean, default: false },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Array of keys\n     * (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\n     * which will add a item when typing\n     */\n    confirmKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.confirmKeys\", [\",\", \"Tab\", \"Enter\"]),\n    },\n    /** Array of chars used to split when pasting a new string */\n    separators: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.separators\", [\",\"]),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: { type: Boolean, default: false },\n    /** When autocomplete, it allow to add new items */\n    allowNew: { type: Boolean, default: false },\n    /** Allows adding the same item multiple time */\n    allowDuplicates: { type: Boolean, default: false },\n    /** Add autocomplete feature (if true, any Autocomplete props may be used too) */\n    allowAutocomplete: { type: Boolean, default: false },\n    /** Allow removing last item when pressing given keys, if input is empty */\n    removeOnKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.removeOnKeys\", [\"Backspace\"]),\n    },\n    /** Function to validate the value of the item before adding */\n    beforeAdding: {\n        type: Function as PropType<(value: T | string) => boolean>,\n        default: () => true,\n    },\n    /** Function to create a new item to push into v-model (items) */\n    createItem: {\n        type: Function as PropType<(value: T | string) => T>,\n        default: (item: T | string) => item,\n    },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"taginput.checkScroll\", false),\n    },\n    /** Add close/delete button to the item */\n    closable: {\n        type: Boolean,\n        default: () => getOption(\"taginput.closable\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"taginput.iconPack\"),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"taginput.icon\"),\n    },\n    /** Icon name of close icon on selected item */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"taginput.closeIcon\", \"close\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"taginput.ariaCloseLabel\"),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"taginput.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"taginput.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container */\n    containerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button of entered item */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the underlying autocomplete component\n     * @ignore\n     */\n    autocompleteClasses: {\n        type: Object,\n        default: () => getOption(\"taginput.autocompleteClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {(string | number | object)[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: T[]): void;\n    /**\n     * on input change event\n     * @param value {String} input value\n     */\n    (e: \"input\", value: string): void;\n    /**\n     * new item got added\n     * @param value {string | number | object} added item\n     */\n    (e: \"add\", value: T): void;\n    /**\n     * item got removed\n     * @param value {string | number | object} removed item\n     */\n    (e: \"remove\", value: T): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst autocompleteRef = ref<ComponentInstance<typeof OAutocomplete<T>>>();\n\nconst items = defineModel<T[]>({ default: () => [] });\n\n// use form input functionalities\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\n    autocompleteRef,\n    emits,\n    props,\n);\n\nconst newItem = ref<string>(\"\");\nconst isComposing = ref(false);\n\nconst valueLength = computed(() => newItem.value.trim().length);\nconst itemsLength = computed(() => items.value.length);\n\n/** Show the input field if a maxitems hasn't been set or reached. */\nconst hasInput = computed(\n    () => props.maxitems == null || itemsLength.value < Number(props.maxitems),\n);\n\nwatchEffect(() => {\n    // blur if input is empty\n    if (!hasInput.value) onBlur();\n});\n\n/**\n * If input has pasteSeparators prop,\n * returning new RegExp used to split pasted string.\n */\nconst separatorsAsRegExp = computed(() =>\n    props.separators.length\n        ? new RegExp(\n              props.separators\n                  .map((s) =>\n                      s ? s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : null,\n                  )\n                  .join(\"|\"),\n              \"g\",\n          )\n        : null,\n);\n\nfunction getNormalizedItemText(item: T): string {\n    if (typeof item === \"object\") item = getValueByPath(item, props.field);\n    return `${item}`;\n}\n\nfunction addItem(item?: T | string): void {\n    item = item || newItem.value.trim();\n\n    if (item) {\n        if (typeof item === \"string\") {\n            const reg = separatorsAsRegExp.value;\n            if (reg && item.match(reg)) {\n                item.split(reg)\n                    .map((t) => t.trim())\n                    .filter((t) => t.length !== 0)\n                    .map(addItem);\n                return;\n            }\n        }\n        // Add the item input if it is not blank\n        // or previously added (if not allowDuplicates).\n        const itemToAdd = props.createItem(item);\n        const add = !props.allowDuplicates\n            ? items.value.indexOf(itemToAdd) === -1\n            : true;\n        if (add && props.beforeAdding(item)) {\n            items.value = [...items.value, itemToAdd];\n            emits(\"add\", itemToAdd);\n        }\n    }\n\n    // after autocomplete events\n    requestAnimationFrame(() => {\n        newItem.value = \"\";\n        emits(\"input\", newItem.value);\n    });\n}\n\nfunction removeItem(index: number, event?: Event): void {\n    const item = items.value.at(index);\n    items.value = items.value.toSpliced(index, 1);\n    emits(\"remove\", item);\n    if (event) event.stopPropagation();\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\n}\n\n// --- Event Handler ---\n\nfunction onSelect(option: T): void {\n    if (!option) return;\n    addItem(option);\n    nextTick(() => (newItem.value = \"\"));\n}\n\nfunction onKeydown(event: KeyboardEvent): void {\n    if (\n        props.removeOnKeys.indexOf(event.key) !== -1 &&\n        !newItem.value?.length &&\n        itemsLength.value > 0\n    ) {\n        // remove last item\n        removeItem(itemsLength.value - 1);\n    }\n    // Stop if is to accept select only\n    if (props.allowAutocomplete && !props.allowNew) return;\n\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // Allow Tab to advance to next field regardless\n        if (event.key !== \"Tab\") event.preventDefault();\n        if (event.key === \"Enter\" && isComposing.value) return;\n        addItem();\n    }\n}\n\nfunction onInput(value: string | number): void {\n    emits(\"input\", String(value).trim());\n}\n\nfunction handleOnBlur(event: Event): void {\n    // Add item on-blur if not select only\n    if (!props.allowAutocomplete) addItem();\n    onBlur(event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst autocompleteRootClasses = defineClasses([\n    \"autocompleteClasses.rootClass\",\n    \"o-taginput__autocomplete\",\n]);\n\nconst autocompleteInputClasses = defineClasses([\n    \"autocompleteClasses.inputClasses.inputClass\",\n    \"o-taginput__input\",\n]);\n\nconst autocompleteBind = computed(() => ({\n    ...attrs,\n    \"root-class\": getActiveClasses(autocompleteRootClasses.value),\n    \"input-classes\": {\n        \"input-class\": getActiveClasses(autocompleteInputClasses.value),\n    },\n    ...props.autocompleteClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-taginput\"],\n    [\n        \"expandedClass\",\n        \"o-taginput--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst containerClasses = defineClasses(\n    [\"containerClass\", \"o-taginput__container\"],\n    [\n        \"sizeClass\",\n        \"o-taginput__container--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-taginput__item\"],\n    [\n        \"variantClass\",\n        \"o-taginput__item--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\n            <!--\n                @slot Override selected items\n                @binding {unknown[]} items - selected items\n            -->\n            <slot name=\"selected\" :items=\"items\" :remove-item=\"removeItem\">\n                <span\n                    v-for=\"(item, index) in items\"\n                    :key=\"getNormalizedItemText(item) + index\"\n                    :class=\"itemClasses\">\n                    <span>{{ getNormalizedItemText(item) }}</span>\n                    <o-icon\n                        v-if=\"closable\"\n                        :class=\"closeClasses\"\n                        clickable\n                        :pack=\"iconPack\"\n                        :icon=\"closeIcon\"\n                        :aria-label=\"ariaCloseLabel\"\n                        both\n                        @click=\"removeItem(index, $event)\" />\n                </span>\n            </slot>\n\n            <o-autocomplete\n                v-show=\"hasInput\"\n                ref=\"autocompleteRef\"\n                v-model=\"newItem\"\n                v-bind=\"autocompleteBind\"\n                :data=\"data\"\n                :field=\"field\"\n                :icon=\"icon\"\n                :icon-pack=\"iconPack\"\n                :maxlength=\"maxlength\"\n                :size=\"size\"\n                :disabled=\"disabled\"\n                :autocomplete=\"autocomplete\"\n                :open-on-focus=\"openOnFocus\"\n                :keep-first=\"keepFirst\"\n                :keep-open=\"keepOpen\"\n                :group-field=\"groupField\"\n                :group-options=\"groupOptions\"\n                :has-counter=\"false\"\n                :use-html5-validation=\"useHtml5Validation\"\n                :check-scroll=\"checkScroll\"\n                :teleport=\"teleport\"\n                :confirm-keys=\"confirmKeys\"\n                :placeholder=\"placeholder\"\n                :validation-message=\"validationMessage\"\n                :expanded=\"expanded\"\n                @input=\"onInput\"\n                @focus=\"onFocus\"\n                @blur=\"handleOnBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @compositionstart=\"isComposing = true\"\n                @compositionend=\"isComposing = false\"\n                @select=\"onSelect\"\n                @scroll-start=\"$emit('scroll-start')\"\n                @scroll-end=\"$emit('scroll-end')\"\n                @icon-click=\"$emit('icon-click', $event)\"\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\n                <template v-if=\"$slots.header\" #header>\n                    <!--\n                        @slot Define an additional header\n                    -->\n                    <slot name=\"header\" />\n                </template>\n\n                <template v-if=\"$slots.default\" #default=\"props\">\n                    <!--\n                        @slot Override the select option\n                        @binding {object} option - option object\n                        @binding {number} index - option index\n                        @binding {unknown} value - option value\n                    -->\n                    <slot\n                        :option=\"props.option\"\n                        :index=\"props.index\"\n                        :value=\"props.value\" />\n                </template>\n\n                <template v-if=\"$slots.empty\" #empty>\n                    <!--\n                        @slot Define content for empty state \n                    -->\n                    <slot name=\"empty\" />\n                </template>\n\n                <template v-if=\"$slots.footer\" #footer>\n                    <!--\n                        @slot Define an additional footer\n                    -->\n                    <slot name=\"footer\" />\n                </template>\n            </o-autocomplete>\n        </div>\n\n        <small\n            v-if=\"counter && (maxitems || maxlength)\"\n            :class=\"counterClasses\">\n            <template v-if=\"maxlength && valueLength > 0\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"valueLength\" :total=\"maxlength\">\n                    {{ valueLength }} / {{ maxlength }}\n                </slot>\n            </template>\n\n            <template v-else-if=\"maxitems\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\n                    {{ itemsLength }} / {{ maxitems }}\n                </slot>\n            </template>\n        </small>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Taginput from \"./Taginput.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export taginput plugin */\nexport default {\n    install(Vue: App) {\n        registerComponent(Vue, Taginput);\n    },\n} as Plugin;\n\n/** export taginput components */\nexport { Taginput as OTaginput };\n","import type { App, Plugin } from \"vue\";\n\nimport Timepicker from \"./Timepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export timepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Timepicker);\n    },\n} as Plugin;\n\n/** export timepicker components */\nexport { Timepicker as OTimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Tooltip from \"./Tooltip.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tooltip plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tooltip);\n    },\n} as Plugin;\n\n/** export tooltip components */\nexport { Tooltip as OTooltip };\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { File } from \"@/utils/ssr\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Upload one or more files\n * @displayName Upload\n * @style _upload.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OUpload\",\n    configField: \"upload\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Object, Array] as PropType<\n            object | typeof File | object[] | (typeof File)[]\n        >,\n        default: undefined,\n    },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"upload.variant\"),\n    },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native accept */\n    accept: { type: String, default: undefined },\n    /** Accepts drag & drop and change its style */\n    dragDrop: { type: Boolean, default: false },\n    /** Upload will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Replace last chosen files every time (like native file input element) */\n    native: { type: Boolean, default: true },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when draggable */\n    draggableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when hovered */\n    hoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref<HTMLInputElement>();\n\nconst vmodel = defineModel<object | object[] | File | File[]>();\n\n// use form input functionality\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst dragDropFocus = ref(false);\n\n/**\n * When v-model is changed:\n * 1. Reset interna input file value\n * 2. If it's invalid, validate again.\n */\nwatch(vmodel, (value) => {\n    if (!value || (Array.isArray(value) && value.length === 0))\n        inputRef.value.value = null;\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\n});\n\n/**\n * Listen change event on input type 'file',\n * emit 'input' event and validate\n */\nfunction onFileChange(event: Event | DragEvent): void {\n    if (props.disabled) return;\n    if (props.dragDrop) updateDragDropFocus(false);\n    const value =\n        (event.target as HTMLInputElement).files ||\n        (event as DragEvent).dataTransfer.files;\n    // no file selected\n    if (value.length === 0) {\n        if (!vmodel.value) return;\n        if (props.native) vmodel.value = null;\n    }\n\n    // multiple upload\n    if (props.multiple) {\n        // always new values if native or undefined local\n        const values =\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\n                ? []\n                : [...vmodel.value];\n\n        for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            // add file when type is valid\n            if (checkType(file)) values.push(file);\n        }\n        vmodel.value = values;\n    }\n    // single uplaod\n    else {\n        // only one element in case drag drop mode and isn't multiple\n        if (props.dragDrop && value.length !== 1) return;\n        else {\n            const file = value[0];\n            // add file when type is valid\n            if (checkType(file)) vmodel.value = file;\n            // else clear input\n            else if (vmodel.value) {\n                vmodel.value = null;\n                clearInput();\n            } else {\n                // Force input back to empty state and recheck validity\n                clearInput();\n                checkHtml5Validity();\n                return;\n            }\n        }\n    }\n\n    if (!props.dragDrop) checkHtml5Validity();\n}\n\n/** Reset file input value */\nfunction clearInput(): void {\n    inputRef.value.value = null;\n}\n\n/** Listen drag-drop to update internal variable */\nfunction updateDragDropFocus(focus: boolean): void {\n    if (!props.disabled) dragDropFocus.value = focus;\n}\n\n/** Check mime type of file s*/\nfunction checkType(file: File): boolean {\n    if (!props.accept) return true;\n    const types = props.accept.split(\",\");\n    if (types.length === 0) return true;\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i].trim();\n        if (type) {\n            if (type.substring(0, 1) === \".\") {\n                const extension = file.name.toLowerCase().slice(-type.length);\n                if (extension === type.toLowerCase()) return true;\n            } else {\n                // check mime type\n                if (file.type.match(type)) return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction onClick(event: Event): void {\n    if (props.disabled) return;\n\n    // click input if not drag and drop is used\n    if (!props.dragDrop) {\n        event.preventDefault();\n        inputRef.value.click();\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-upl\"],\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\n);\n\nconst draggableClasses = defineClasses(\n    [\"draggableClass\", \"o-upl__draggable\"],\n    [\n        \"hoveredClass\",\n        \"o-upl__draggable--hovered\",\n        null,\n        computed(() => !props.variant && dragDropFocus.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-upl__draggable--hovered-\",\n        computed(() => props.variant),\n        computed(() => props.variant && dragDropFocus.value),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label :class=\"rootClasses\" data-oruga=\"upload\">\n        <template v-if=\"!dragDrop\">\n            <!--\n                @slot Default content\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </template>\n\n        <div\n            v-else\n            :class=\"draggableClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @mouseenter=\"updateDragDropFocus(true)\"\n            @mouseleave=\"updateDragDropFocus(false)\"\n            @dragover.prevent=\"updateDragDropFocus(true)\"\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\n            @drop.prevent=\"onFileChange\">\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </div>\n\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            type=\"file\"\n            data-oruga-input=\"file\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :disabled=\"disabled\"\n            @change=\"onFileChange\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\" />\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Upload from \"./Upload.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export upload plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Upload);\n    },\n} as Plugin;\n\n/** export upload components */\nexport { Upload as OUpload };\n","import type { App, Plugin } from \"vue\";\nimport type { OrugaOptions } from \"./types\";\n\nimport * as plugins from \"./components/plugins\";\n\nimport { ConfigProgrammatic, OrugaConfig } from \"./utils/config\";\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\n\n// export all types\nexport * from \"./types\";\nexport * from \"./components/types\";\n\n// export all vue components\nexport * from \"./components\";\n// export all components as vue plugin\nexport * from \"./components/plugins\";\n\n// export programmatic config\nexport {\n    OrugaConfig,\n    /** @deprecated use `OrugaConfig` instead - will be removed with 0.9 */\n    OrugaConfig as ConfigPlugin, // todo: remove export later - beaking change\n    ConfigProgrammatic,\n};\n\n// export programmatic composable\nexport { useOruga } from \"./utils/programmatic\";\n\n// main oruga vue plugin\nconst plugin: Plugin = {\n    install(app: App, options: OrugaOptions = {}) {\n        // initialise config with options\n        app.use(OrugaConfig, options);\n\n        // add all components\n        for (const componentKey in plugins) {\n            registerPlugin(app, plugins[componentKey]);\n        }\n\n        // add programmatic config component\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\n    },\n};\n\n// export default oruga vue plugin\nexport { plugin as Oruga };\nexport default plugin;\n"],"names":["uuid","signPoly","value","sign","mod","n","bound","val","min","max","isObject","obj","isDate","d","isDefined","blankIfUndefined","toCssDimension","width","indexOf","array","fn","index","arr","isEqual","valueA","valueB","keys1","keys2","key","val1","val2","areObjects","clone","merge","target","source","deep","mergeDeep","targetValue","sourceValue","getValueByPath","path","defaultValue","i","setValueByPath","p","field","removeElement","el","escapeRegExpChars","removeDiacriticsFromString","isVNodeEmpty","vnode","Comment","Text","Fragment","isMobileAgent","oruga","ref","addProgrammatic","property","component","useOruga","VueInstance","setVueInstance","Vue","registerPlugin","app","plugin","registerComponent","registerComponentProgrammatic","globalOptions","setOptions","options","getOptions","toRaw","getOption","setOption","ConfigProgrammatic","OrugaConfig","mdiIcons","faIcons","faIconPrefix","getIcons","icons","customIconPacks","getIcons$1","unrefElement","elRef","plain","toValue","getActiveClasses","classes","bind","defineClasses","classDefinitions","vm","getCurrentInstance","scope","effectScope","defintion","className","defaultClass","suffix","apply","getClassBind","computedClass","computeClass","applied","isRef","watch","oldValue","classBind","getCurrentScope","onScopeDispose","props","getProps","configField","_a","config","globalOverride","localOverride","overrideClass","globalTransformClasses","localTransformClasses","globalClass","currentClass","suffixProcessor","appliedClasses","input","cls","b","usePropBinding","name","emit","event","proxy","isUpdating","nextTick","computed","useVModelBinding","useEventListener","listener","cleanup","register","optionsClone","stop","onMounted","onBeforeUnmount","isClient","isSSR","useMatchMedia","mobileBreakpoint","isMobile","mediaQuery","defaultWidth","onMatchMedia","__props","inputId","v","fieldVariant","fieldMessage","parentField","isFocused","isFilled","hasInnerField","injectField","slots","useSlots","hasLabel","hasMessage","isGrouped","hasAddons","getInnerContent","slot","rootRef","addInnerField","setFocus","setFilled","setVariant","setMessage","setInputId","provideData","provideField","rootClasses","messageClasses","labelClasses","labelHorizontalClasses","bodyClasses","bodyHorizontalClasses","innerFieldClasses","$FieldKey","data","provide","inject","statusVariant","statusMessage","statusVariantIcon","validatableFormElementTypes","asValidatableFormElement","t","constraintValidationAttributes","useInputHandler","inputRef","emits","maybeElement","inputs","element","doClick","onBlur","checkHtml5Validity","onFocus","isValid","setFieldValidity","variant","message","setInvalid","onInvalid","validatable","isFirstInvalid","formElements","fieldElement","invalidHandler","canScrollToField","onAttributeChange","validationAttributeObserver","valid","useValidation","ancestor","useDebounce","func","wait","immediate","timeout","args","later","callNow","useProviderParent","childItems","sequence","sortedItems","a","registerItem","identifier","nextSequence","item","ids","children","sortedIds","unregisterItem","useProviderChild","parent","needParent","onUnmounted","useProgrammaticComponent","elementRef","isActive","cancelOptions","getElement","container","onKeyPress","cancel","method","close","useClickOutside","handler","ignore","shouldIgnore","getScrollingParent","isScrollingParent","nextParent","overflow","overflowY","scrollHeight","clientHeight","rootStyle","style","iconConfig","iconPrefix","customSizeByPack","computedIcon","getEquivalentIconOf","computedSize","computedVariant","newVariant","_b","__emit","textareaRef","vmodel","_useModel","valueLength","resize","height","computedStyles","onInput","hasIconRight","computedIconRight","passwordVisibleIcon","computedIconRightVariant","iconClick","rightIconClick","togglePasswordVisibility","isPasswordVisible","inputType","inputClasses","iconLeftClasses","iconRightClasses","counterClasses","__expose","opposites","teleportTo","teleportDisabled","contentRef","setContent","updatePositioning","addHandler","initialPosition","scrollingParent","resizeObserver","removeHandler","position","getAutoPosition","content","trigger","rect","top","left","bestPosition","viewRect","contentRect","triggerRect","triggerAnchors","anchors","contentAnchors","contentRectAtAnchor","pos","triggerAnchor","contentAnchor","defaultOpposite","crossPosition","crossOpposite","positions","maxOverlap","overlap","intersectionArea","right","bottom","findFocusable","programmatic","onKeyDown","focusable","focusableProg","firstFocusable","lastFocusable","unbind","directive","vTrapFocus","autoPosition","isMobileModal","isMobileNative","menuStyle","hoverable","triggerRef","eventCleanups","timer","onClickedOutside","onClick","toggle","onContextMenu","open","isHovered","onHover","onHoverLeave","onClose","checkDropdownScroll","dropdown","selectItem","triggerClasses","positionWrapperClasses","menuMobileOverlayClasses","menuClasses","itemValue","isClickable","selected","SpecialOption","SpecialOption2","isSpecialOption","option","dropdownRef","footerRef","headerRef","itemRefs","setItemRef","groupIndex","itemIndex","selectedOption","hoveredOption","headerHovered","footerHovered","hoveredId","menuId","currentValue","getValue","setSelected","isEmpty","selectFirstOption","setHovered","hoveredValue","computedData","setHoveredIdToIndex","group","items","empty","closeableOptions","onDropdownClose","closeDropdown","nonEmptyElements","selectHeaderOrFooterByClick","origin","navigateItem","direction","dropdownMenu","visMin","visMax","onKeydown","handleFocus","handleBlur","debouncedInput","emitInput","watchEffect","computedIconRightClickable","trashhold","headerHeight","footerHeight","attrs","useAttrs","inputBind","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","itemOptionClasses","optionClasses","index$s","Autocomplete","computedTag","computedNativeType","computedDisabled","iconClasses","wrapperClasses","index$r","Button","restartTimer","pauseTimer","startTimer","itemWidth","scrollIndex","switchTo","activeIndex","windowWidth","refresh_","settings","onRefresh","onResized","dragEnd","breakpoint","readonly","translation","delta","total","indicatorCount","indicatorIndex","hasArrows","hasPrev","onPrev","hasNext","onNext","onlyMove","onModeChange","isPaused","onMouseEnter","checkPause","onMouseLeave","status","isTouch","dragX","hold","isDragging","onDragStart","dragMove","dragEndX","signCheck","results","itemsClasses","arrowIconClasses","arrowIconPrevClasses","arrowIconNextClasses","indicatorItemClasses","indicatorsClasses","indicatorClasses","itemStyle","index$q","Carousel","CarouselItem","isIndeterminate","isChecked","index$p","Checkbox","isOpen","contentClasses","index$o","Collapse","selectRef","placeholderVisible","selectOptions","rightIcon","rightIconVariant","selectClasses","nativeInputRef","initialNativeType","inputValue","togglePicker","onActiveChange","ariaRole","triggers","active","onInputClick","onNativeClick","onNativeFocus","onNativeBlur","handleNativeChange","dropdownBind","getMonthNames","locale","format","dates","dtf","getWeekdayNames","firstDayOfWeek","j","matchWithGroups","pattern","str","matches","groupMatches","acc","curr","weekBuilder","startingDate","month","year","thisMonth","thisWeek","dayOfWeek","end","daysAgo","daysForward","firstWeekOffset","dow","doy","fwd","daysInYear","weeksInYear","weekOffset","weekOffsetNext","useDatepickerMixins","isDateSelectable","date","validity","enabledDate","disabledDate","isTypeMonth","localeOptions","dtfMonth","sampleTime","formatRegex","part","dateGroups","s","targetDates","datepicker","hasEvents","dayRefs","setDayRef","refKey","day","clickWeekNumber","week","getDayOfYear","getWeekNumber","mom","resWeek","resYear","eventsDateMatch","weekDay","preventDefault","selectDate","changeFocus","inc","nextDay","setRangeHoverEndDate","dateMatch","dateOne","dateTwo","multiple","dateWithin","cellClasses","tableCellClasses","cellEventsClass","eventClasses","tableRowClasses","tableEventsClasses","focusedDateModel","selectedBeginDate","selectedEndDate","hoveredEndDate","visibleDayNames","currentDayName","eventsInThisMonth","weeksInThisMonth","validateFocusedDay","startingDay","newWeek","eventsInThisWeek","stripped","timed","weekDate","hoveredDateRange","currentDate","monthDays","onSelectedDate","handleSelectRangeDate","handleSelectMultipleDates","multipleSelectedDates","selectedDate","onRangeHoverEndDate","onChangeFocus","tableClasses","tableHeadClasses","tableHeadCellClasses","tableBodyClasses","monthRefs","setMonthRef","eventsInThisYear","monthDates","months","focused","dateMultipleSelected","monthClasses","monthBodyClasses","monthTableClasses","monthCellClasses","defaultDateFormatter","defaultDateParser","pickerRef","formattedValue","isArray","focusedDateData","_initialDate","computedMonthNames","listOfMonths","minMonth","maxMonth","computedDayNames","listOfYears","latestYear","earliestYear","showPrev","dateToCheck","prev","showNext","next","formatNative","onChange","onChangeNativePicker","headerClasses","headerButtonsClasses","prevButtonClasses","nextButtonClasses","listsClasses","footerClasses","dropdownClass","boxClasses","boxClassBind","index$n","Datepicker","AM","PM","HOUR_FORMAT_24","HOUR_FORMAT_12","useTimepickerMixins","isHourFormat24","amString","dayPeriod","pmString","meridiens","hourLiteral","parts","literal","idx","minuteLiteral","secondLiteral","defaultTimeFormatter","time","defaultTimeParser","timeGroups","am","dateString12","timeSplit","hours","minutes","seconds","hoursSelected","minutesSelected","secondsSelected","meridienSelected","nativeStep","formatNumber","prependZero","pad","numberOfHours","label","isHourDisabled","hour","disabled","minHours","noMinutesAvailable","minute","isMinuteDisabledForHour","maxHours","minMinutes","maxMinutes","isMinuteDisabled","isSecondDisabled","second","minSeconds","maxSeconds","isMeridienDisabled","meridienString","offset","updateDateSelected","onMeridienChange","onHoursChange","onMinutesChange","onSecondsChange","selectSelectClasses","selectPlaceholderClasses","selectBind","separatorClasses","datepickerRef","timepickerRef","timepickerProps","datepickerProps","updateVModel","minDate","maxDate","minTime","maxTime","datepickerSize","timepickerSize","timepickerDisabled","enableSeconds","defaultDatetimeParser","defaultParser","dayPeriods","datetimeGroups","defaultDatetimeFormatter","datepickerWrapperClasses","timepickerWrapperClasses","index$m","Datetimepicker","index$l","Dropdown","DropdownItem","index$k","Field","index$j","Icon","index$i","Input","displayInFullPage","overlayClasses","InstanceRegistry","__publicField","entry","callback","e","instances","LoadingProgrammatic","params","componentParams","propsData","p1","p2","defaultSlot","createVNode","Loading","render","LoadingProgrammatic$1","index$h","resetMenu","excludedItems","listClasses","providedData","reset","providedItem","itemParent","isExpanded","triggerReset","child","submenuClasses","index$g","Menu","MenuItem","_teleport","savedScrollTop","isAnimating","handleScroll","showX","customStyle","scrollto","scrollClass","afterEnter","beforeLeave","closeClasses","scrollClasses","noScrollClasses","ModalProgrammatic","Modal","ModalProgrammatic$1","index$f","notificationRef","parentTop","parentBottom","setAutoClose","onBeforeMount","noticeClasses","positionBottomClasses","positionTopClasses","topClasses","bottomClasses","noticeCustomContainerClasses","c","showNotice","correctParent","shouldQueue","handleClose","NotificationProgrammatic","defaultParams","notificationParams","NotificationNotice","NotificationProgrammatic$1","index$e","Notification","linkClasses","current","pageCount","last","firstItem","perPage","hasFirst","hasFirstEllipsis","hasLast","hasLastEllipsis","pagesInRange","pages","getPage","num","ariaLabel","changePage","getAriaPageLabel","pageNumber","isCurrent","first","page","prevBtnClasses","nextBtnClasses","infoClasses","ellipsisClasses","linkCurrentClasses","listItemClasses","index$d","Pagination","index$c","Radio","index$b","Select","index$a","Skeleton","sidebarContent","transitionName","vertical","hideOnMobile","removeOutsideListener","clickedOutside","SidebarProgrammatic","Sidebar","SidebarProgrammatic$1","index$9","arrowClasses","slider","dragging","startX","startPosition","newPosition","tooltip","tooltipAlways","step","indicator","precision","precisions","decimal","computedTooltipVariant","currentPosition","wrapperStyle","onButtonDown","onDragging","onDragEnd","onLeftKeyDown","setPosition","onRightKeyDown","onHomeKeyDown","onEndKeyDown","diff","percent","stepLength","hidden","tickStyle","tickLabelClasses","emitValue","isRange","minValue","maxValue","valueStart","sliderRef","thumbStartRef","thumbEndRef","valueEnd","isThumbReversed","isTrackClickDisabled","setValues","onInternalValueUpdate","tickValues","result","barSize","barStart","barStyle","newValue","smallValue","largeValue","sliderSize","onSliderClick","sliderOffsetLeft","diffFirst","diffSecond","trackClasses","fillClasses","thumbClasses","thumbWrapperClasses","index$8","Slider","SliderTick","column","performAction","activeItem","isTransitioning","prevItem","nextItem","isItemClickable","itemClick","newId","oldId","oldItem","newItem","stepDividerClasses","stepMarkerClasses","stepContentClasses","stepNavigationClasses","stepLinkLabelClasses","stepLinkClasses","childItem","activate","deactivate","nextAnimation","prevAnimation","oldIndex","newIndex","elementClasses","index$7","Steps","StepItem","switchClasses","switchCheckClasses","index$6","Switch","OSlotComponent","defineComponent","h","mobileSort","showPlaceholder","sortableColumns","isCurrentSort","sort","isHeaderUnselectable","currentPage","pageChanged","newPage","isMobileActive","slotRef","provider","tableColumns","tableData","row","tableRows","dataTotal","tableCurrentPage","isRowFiltered","currentSortColumn","newTotal","tableWrapperStyle","visibleRows","start","visibleColumns","col","columnCount","count","hasSearchablenewColumns","isScrollable","hasCustomSubheadings","hasCustomFooterSlot","footer","tag","onArrowPressed","selectRow","isRowSelected","selectedRow","getRowKey","filters","handleFiltersChange","onFiltersEvent","doSortSingleColumn","re","isAsc","checkSort","hasSortablenewColumns","isColumnSorted","initSort","sortField","sortDirection","sortColumn","updateDirection","sortBy","sorted","newA","newB","newCheckedRows","lastCheckedRowIndex","rows","isAllChecked","validVisibleData","currentVisibleRow","isAllUncheckable","isRowChecked","removeCheckedRow","checkAll","allChecked","currentRow","checkRow","visibleDetailRows","showDetailRowIcon","expandedRows","toggleDetails","isVisibleDetailRow","closeDetailRow","openDetailRow","handleDetailKey","isActiveDetailRow","isActiveCustomDetailRow","isDraggingRow","isDraggingColumn","canDragRow","canDragColumn","handleDragStart","handleDragEnd","handleDrop","handleDragOver","handleDragLeave","handleColumnDragStart","handleColumnDragEnd","handleColumnDrop","handleColumnDragOver","handleColumnDragLeave","tableWrapperClasses","thBaseClasses","tdBaseClasses","thCheckboxClasses","thDetailedClasses","thSubheadingClasses","tdCheckboxClasses","detailedClasses","tdDetailedChevronClasses","mobileSortClasses","paginationWrapperClasses","paginationWrapperRootClasses","thSortIconClasses","thClasses","rowClasses","rowClass","tdClasses","index$5","Table","TableColumn","clickFirstViableChild","homePressed","endPressed","startingIndex","forward","itemWrapperClasses","navClasses","headerIconClasses","headerTextClasses","index$4","Tabs","TabItem","autocompleteRef","isComposing","itemsLength","hasInput","separatorsAsRegExp","getNormalizedItemText","addItem","reg","itemToAdd","removeItem","onSelect","handleOnBlur","autocompleteRootClasses","autocompleteInputClasses","autocompleteBind","containerClasses","index$3","Taginput","index$2","Timepicker","index$1","Tooltip","dragDropFocus","onFileChange","updateDragDropFocus","values","file","checkType","clearInput","focus","types","type","draggableClasses","Upload","componentKey","plugins"],"mappings":"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"}