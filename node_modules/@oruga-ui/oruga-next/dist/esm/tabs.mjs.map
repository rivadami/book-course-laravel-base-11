{"version":3,"file":"tabs.mjs","sources":["../../src/components/tabs/Tabs.vue","../../src/components/tabs/TabItem.vue","../../src/components/tabs/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport { getOption } from \"@/utils/config\";\nimport { mod, isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal navigation tabs, switch between contents with ease\n * @displayName Tabs\n * @requires ./TabItem.vue\n * @style _tabs.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabs\",\n    configField: \"tabs\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: 0 },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tabs.variant\"),\n    },\n    /**\n     * Tab size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"tabs.size\"),\n    },\n    /** Show tab in vertical layout */\n    vertical: {\n        type: Boolean,\n        default: () => getOption(\"tabs.vertical\", false),\n    },\n    /**\n     * Position of the tabs\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Tab type\n     * @values boxed, toggle\n     */\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\n    /** Tabs will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Destroy tabItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Tab will have an animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"tabs.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animateInitially\", false),\n    },\n    /** Show tab items multiline when there is no space */\n    multiline: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when vertical */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav tabs */\n    navTabsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the navigation */\n    navSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav position */\n    navPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Type of the navigation */\n    navTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content when transitioning */\n    transitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item wrapper */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on tab change event\n     * @param value {string | number} new tab value\n     * @param value {string | number} old tab value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<TabsComponent>(() => ({\n    activeValue: vmodel.value,\n    type: props.type,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<TabItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/**  When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst activeIndex = computed(() => activeItem.value.index);\n\nfunction isActive(item: TabItem): boolean {\n    return item.value === activeItem.value.value;\n}\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: TabItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Go to the next item or wrap around */\nfunction next(): void {\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\n    clickFirstViableChild(newIndex, true);\n}\n\n/** Go to the previous item or wrap around */\nfunction prev(): void {\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\n    clickFirstViableChild(newIndex, false);\n}\n\n/** Go to the first viable item */\nfunction homePressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(0, true);\n}\n\n/** Go to the last viable item */\nfunction endPressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(items.value.length - 1, false);\n}\n\n/**\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex !== activeIndex.value;\n        newIndex = mod(newIndex + direction, items.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\n            break;\n    }\n    itemClick(items.value[newIndex]);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = vmodel.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tabs\"],\n    [\n        \"positionClass\",\n        \"o-tabs--\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\n        \"expandedClass\",\n        \"o-tabs--fullwidth\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\n    [\n        \"multilineClass\",\n        \"o-tabs--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst itemWrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-tabs__nav-item-wrapper\",\n]);\n\nconst navClasses = defineClasses(\n    [\"navTabsClass\", \"o-tabs__nav\"],\n    [\n        \"navSizeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"navPositionClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.position),\n        computed(() => props.position && !props.vertical),\n    ],\n    [\n        \"navTypeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.type),\n        computed(() => !!props.type),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tabs__content\"],\n    [\n        \"transitioningClass\",\n        \"o-tabs__content--transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nfunction itemHeaderClasses(\n    childItem: (typeof items.value)[number],\n): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-tabs__nav-item-{*}--active\",\n            props.type,\n            isActive(childItem),\n        ],\n        [\n            \"itemHeaderDisabledClass\",\n            \"o-tabs__nav-item-{*}--disabled\",\n            props.type,\n            childItem.disabled,\n        ],\n    );\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\n        <nav\n            :class=\"navClasses\"\n            role=\"tablist\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <!--\n                @slot Additional slot before tabs\n            -->\n            <slot name=\"start\" />\n            <div\n                v-for=\"childItem in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :class=\"itemWrapperClasses\"\n                role=\"tab\"\n                :aria-controls=\"`${childItem.value}-content`\"\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\n                <o-slot-component\n                    v-if=\"childItem.$slots.header\"\n                    :component=\"childItem\"\n                    :tag=\"childItem.tag\"\n                    name=\"header\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\" />\n\n                <component\n                    :is=\"childItem.tag\"\n                    v-else\n                    role=\"button\"\n                    :tabindex=\"0\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\">\n                    <o-icon\n                        v-if=\"childItem.icon\"\n                        :root-class=\"\n                            getActiveClasses(childItem.headerIconClasses)\n                        \"\n                        :icon=\"childItem.icon\"\n                        :pack=\"childItem.iconPack\"\n                        :size=\"size\" />\n                    <span :class=\"childItem.headerTextClasses\">\n                        {{ childItem.label }}\n                    </span>\n                </component>\n            </div>\n            <!--\n                @slot Additional slot after tabs\n            -->\n            <slot name=\"end\" />\n        </nav>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place tab items here\n            -->\n            <slot />\n        </section>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { TabsComponent, TabItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Tab Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabItem\",\n    configField: \"tabs\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"tabs.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"tabs.iconPack\"),\n    },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Tabs item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the tab item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when disabled */\n    itemHeaderDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header type */\n    itemHeaderTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header icon */\n    itemHeaderIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header text */\n    itemHeaderTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    (e: \"activate\"): void;\n    /** on tab item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<TabItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    headerIconClasses: headerIconClasses.value,\n    headerTextClasses: headerTextClasses.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent component\nconst { parent, item } = useProviderChild<TabsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\n\nconst headerIconClasses = defineClasses([\n    \"itemHeaderIconClass\",\n    \"o-tabs__nav-item-icon\",\n]);\n\nconst headerTextClasses = defineClasses([\n    \"itemHeaderTextClass\",\n    \"o-tabs__nav-item-text\",\n]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`tabs-${item.identifier}`\"\n                data-oruga=\"tabs-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                    @slot Tab item content\n                -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Tabs from \"./Tabs.vue\";\nimport TabItem from \"./TabItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tabs specific types */\nexport type * from \"./types\";\n\n/** export tabs plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tabs);\n        registerComponent(app, TabItem);\n    },\n} as Plugin;\n\n/** export tabs components */\nexport { Tabs as OTabs, TabItem as OTabItem };\n"],"names":["_useModel","Tabs","TabItem"],"mappings":"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"}