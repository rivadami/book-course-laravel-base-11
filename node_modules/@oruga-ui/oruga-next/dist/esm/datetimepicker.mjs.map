{"version":3,"file":"datetimepicker.mjs","sources":["../../src/components/datetimepicker/Datetimepicker.vue","../../src/components/datetimepicker/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { matchWithGroups } from \"../datepicker/utils\";\n\nimport type { DatepickerProps } from \"../datepicker/types\";\nimport type { TimepickerProps } from \"../timepicker/types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\n * @displayName Datetimepicker\n * @style _datetimepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatetimepicker\",\n    configField: \"datetimepicker\",\n    inheritAttrs: false,\n});\n\nconst AM = \"AM\";\nconst PM = \"PM\";\nconst HOUR_FORMAT_24 = \"24\";\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date, default: undefined },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Define props for the underlying datepicker component */\n    datepicker: {\n        type: Object as PropType<DatepickerProps>,\n        default: undefined,\n    },\n    /** Define props for the underlying timepicker component */\n    timepicker: {\n        type: Object as PropType<TimepickerProps>,\n        default: undefined,\n    },\n    /** Min date to select */\n    minDatetime: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDatetime: { type: Date, default: undefined },\n    /**\n     * Size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datetimepicker.size\"),\n    } /** Makes input full width when inside a grouped or addon field */,\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Display datetimepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    datetimeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    datetimeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    datetimeCreator: {\n        type: Function as PropType<(date: Date) => Date>,\n        default: (date: Date) =>\n            getOption(\n                \"datetimepicker.datetimeCreator\",\n                (d: Date) => new Date(d),\n            )(date),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datetimepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datetimepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the Datepicker wrapper */\n    datepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker wrapper */\n    timepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst timepickerProps = ref<TimepickerProps>(props.timepicker);\nwatch(\n    () => props.timepicker,\n    (value) => (timepickerProps.value = value),\n    { deep: true },\n);\nconst datepickerProps = ref<DatepickerProps>(props.datepicker);\nwatch(\n    () => props.datepicker,\n    (value) => (datepickerProps.value = value),\n    { deep: true },\n);\n\nconst isMobileNative = computed(\n    () => props.mobileNative && isMobileAgent.any(),\n);\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\n);\n\n// use form input functionality for native input\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\n    elementRef,\n    emits,\n    props,\n);\n\nwatch([() => isMobileNative.value, () => props.inline], () => {\n    // $refs attached, it's time to refresh datepicker (input)\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\n});\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst vmodel = defineModel<Date>({ default: undefined });\n\nfunction updateVModel(value: Date | Date[]): void {\n    if (!value) {\n        vmodel.value = undefined;\n        return;\n    }\n    if (Array.isArray(value)) {\n        updateVModel(value[0]);\n        return;\n    }\n    let date = new Date(value.getTime());\n    if (!props.modelValue) {\n        date = props.datetimeCreator(value);\n    } else {\n        // restore time part\n        if (\n            (value.getDate() !== props.modelValue.getDate() ||\n                value.getMonth() !== props.modelValue.getMonth() ||\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\n            value.getHours() === 0 &&\n            value.getMinutes() === 0 &&\n            value.getSeconds() === 0\n        ) {\n            date.setHours(\n                props.modelValue.getHours(),\n                props.modelValue.getMinutes(),\n                props.modelValue.getSeconds(),\n                0,\n            );\n        }\n    }\n    // check min and max range\n    if (props.minDatetime && date < props.minDatetime) {\n        date = props.minDatetime;\n    } else if (props.maxDatetime && date > props.maxDatetime) {\n        date = props.maxDatetime;\n    }\n    vmodel.value = new Date(date.getTime());\n}\n\nconst minDate = computed(() => {\n    if (!props.minDatetime)\n        return datepickerProps.value ? datepickerProps.value.minDate : null;\n    return new Date(\n        props.minDatetime.getFullYear(),\n        props.minDatetime.getMonth(),\n        props.minDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\nconst maxDate = computed(() => {\n    if (!props.maxDatetime)\n        return datepickerProps.value ? datepickerProps.value.maxDate : null;\n    return new Date(\n        props.maxDatetime.getFullYear(),\n        props.maxDatetime.getMonth(),\n        props.maxDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\n// Only enable min/max time if local (not necessarily UTC) date portion matches\nconst minTime = computed(() => {\n    if (\n        !props.minDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\n        vmodel.value.getDate() != props.minDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.minTime : null;\n    }\n    return props.minDatetime;\n});\n\nconst maxTime = computed(() => {\n    if (\n        !props.maxDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\n        vmodel.value.getDate() != props.maxDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.maxTime : null;\n    }\n    return props.maxDatetime;\n});\n\nconst datepickerSize = computed(() =>\n    datepickerProps.value?.size ? datepickerProps.value.size : props.size,\n);\n\nconst timepickerSize = computed(() =>\n    timepickerProps.value?.size ? timepickerProps.value.size : props.size,\n);\n\nconst timepickerDisabled = computed(() =>\n    timepickerProps.value?.disabled\n        ? timepickerProps.value.disabled\n        : props.disabled,\n);\n\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    if (value && !isNaN(date.getTime())) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day) +\n            \"T\" +\n            ((hours < 10 ? \"0\" : \"\") + hours) +\n            \":\" +\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\n            \":\" +\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\n        );\n    }\n    return \"\";\n}\n\n// --- Time Format Feature ---\n\nconst enableSeconds = computed(() =>\n    timepickerRef.value?.enableSeconds\n        ? timepickerRef.value.enableSeconds\n        : false,\n);\n\nconst localeOptions = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: \"numeric\",\n            month: \"numeric\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: enableSeconds.value ? \"numeric\" : undefined,\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\n);\n\nconst isHourFormat24 = computed(\n    () =>\n        (timepickerProps.value?.hourFormat &&\n            timepickerProps.value.hourFormat === HOUR_FORMAT_24) ||\n        (!timepickerProps.value?.hourFormat && !localeOptions.value.hour12),\n);\n\nconst dtf = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: localeOptions.value.year || \"numeric\",\n            month: localeOptions.value.month || \"numeric\",\n            day: localeOptions.value.day || \"numeric\",\n            hour: localeOptions.value.hour || \"numeric\",\n            minute: localeOptions.value.minute || \"numeric\",\n            second: enableSeconds.value\n                ? localeOptions.value.second || \"numeric\"\n                : undefined,\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n        }),\n);\n\nconst amString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(10);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return AM;\n});\n\nconst pmString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(20);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return PM;\n});\n\nfunction defaultDatetimeParser(value: string): Date {\n    function defaultParser(date: string): Date {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\n            if (timepickerRef.value) {\n                dayPeriods.push(amString.value);\n                dayPeriods.push(pmString.value);\n            }\n            const parts = dtf.value.formatToParts(new Date());\n            const formatRegex = parts\n                .map((part, idx) => {\n                    if (part.type === \"literal\") {\n                        if (\n                            idx + 1 < parts.length &&\n                            parts[idx + 1].type === \"hour\"\n                        ) {\n                            return `[^\\\\d]+`;\n                        }\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\n                            \"|\",\n                        )})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const datetimeGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                datetimeGroups.year &&\n                datetimeGroups.year.length === 4 &&\n                datetimeGroups.month &&\n                datetimeGroups.month <= 12 &&\n                datetimeGroups.day &&\n                datetimeGroups.day <= 31 &&\n                datetimeGroups.hour &&\n                datetimeGroups.hour >= 0 &&\n                datetimeGroups.hour < 24 &&\n                datetimeGroups.minute &&\n                datetimeGroups.minute >= 0 &&\n                datetimeGroups.minute <= 59\n            ) {\n                const d = new Date(\n                    datetimeGroups.year,\n                    datetimeGroups.month - 1,\n                    datetimeGroups.day,\n                    datetimeGroups.hour,\n                    datetimeGroups.minute,\n                    datetimeGroups.second || 0,\n                );\n                return d;\n            }\n        }\n\n        return new Date(Date.parse(date));\n    }\n    const date = (props.datetimeParser as any)(value, defaultParser);\n    return date;\n}\n\nfunction defaultDatetimeFormatter(date: Date): string {\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\n        date ? dtf.value.format(date) : \"\",\n    );\n}\n\n// --- Event Handler ---\n\n/** Parse date from string */\nfunction onChangeNativePicker(event: Event): void {\n    const date = (event.target as HTMLInputElement).value;\n    const s = date ? date.split(/\\D/) : [];\n    if (s.length >= 5) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1], 10) - 1;\n        const day = parseInt(s[2], 10);\n        const hours = parseInt(s[3], 10);\n        const minutes = parseInt(s[4], 10);\n        // Seconds are omitted intentionally; they are unsupported by input\n        // type=datetime-local and cause the control to fail native validation\n        updateVModel(new Date(year, month, day, hours, minutes));\n    } else {\n        updateVModel(null);\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst datepickerWrapperClasses = defineClasses([\n    \"datepickerWrapperClass\",\n    \"o-dtpck__date\",\n]);\n\nconst timepickerWrapperClasses = defineClasses([\n    \"timepickerWrapperClass\",\n    \"o-dtpck__time\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-datepicker\n        v-if=\"!isMobileNative || inline\"\n        ref=\"datepickerRef\"\n        v-bind=\"{ ...$attrs, ...datepicker }\"\n        v-model:active=\"isActive\"\n        :model-value=\"vmodel\"\n        data-oruga=\"datetimepicker\"\n        :class=\"datepickerWrapperClasses\"\n        :rounded=\"rounded\"\n        :open-on-focus=\"openOnFocus\"\n        :position=\"position\"\n        :inline=\"inline\"\n        :readonly=\"readonly\"\n        :expanded=\"expanded\"\n        :close-on-click=\"false\"\n        :date-formatter=\"defaultDatetimeFormatter\"\n        :date-parser=\"defaultDatetimeParser\"\n        :min-date=\"minDate\"\n        :max-date=\"maxDate\"\n        :icon=\"icon\"\n        :icon-right=\"iconRight\"\n        :icon-right-clickable=\"iconRightClickable\"\n        :icon-pack=\"iconPack\"\n        :size=\"datepickerSize\"\n        :placeholder=\"placeholder\"\n        :range=\"false\"\n        :disabled=\"disabled\"\n        :mobile-native=\"isMobileNative\"\n        :locale=\"locale\"\n        :teleport=\"teleport\"\n        @update:model-value=\"updateVModel\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change-month=\"$emit('change-month', $event)\"\n        @change-year=\"$emit('change-year', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template #footer>\n            <div :class=\"timepickerWrapperClasses\">\n                <o-timepicker\n                    ref=\"timepickerRef\"\n                    v-bind=\"timepicker\"\n                    v-model=\"vmodel\"\n                    inline\n                    :readonly=\"readonly\"\n                    :min-time=\"minTime\"\n                    :max-time=\"maxTime\"\n                    :size=\"timepickerSize\"\n                    :disabled=\"timepickerDisabled\"\n                    :mobile-native=\"isMobileNative\"\n                    :locale=\"locale\" />\n            </div>\n            <template v-if=\"$slots.footer !== undefined\">\n                <!--\n                    @slot Define an additional footer\n                -->\n                <slot name=\"footer\" />\n            </template>\n        </template>\n    </o-datepicker>\n\n    <!-- Native Picker -->\n    <o-input\n        v-else\n        v-bind=\"$attrs\"\n        ref=\"nativeInputRef\"\n        type=\"datetime-local\"\n        autocomplete=\"off\"\n        :value=\"formatNative(vmodel)\"\n        :max=\"formatNative(maxDate)\"\n        :min=\"formatNative(minDate)\"\n        :placeholder=\"placeholder\"\n        :size=\"datepickerSize\"\n        :icon-pack=\"iconPack\"\n        :icon=\"icon\"\n        :rounded=\"rounded\"\n        :disabled=\"disabled\"\n        :readonly=\"false\"\n        :use-html5-validation=\"false\"\n        @change=\"onChangeNativePicker\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\" />\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datetimepicker from \"./Datetimepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datetimepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datetimepicker);\n    },\n} as Plugin;\n\n/** export datetimepicker components */\nexport { Datetimepicker as ODatetimepicker };\n"],"names":["_useModel","date","Datetimepicker"],"mappings":"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"}