{"version":3,"file":"carousel.mjs","sources":["../../src/components/carousel/Carousel.vue","../../src/components/carousel/CarouselItem.vue","../../src/components/carousel/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    onBeforeUnmount,\n    onMounted,\n    ref,\n    nextTick,\n    readonly,\n    toRaw,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useEventListener,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * A Slideshow for cycling images in confined spaces\n * @displayName Carousel\n * @requires ./CarouselItem.vue\n * @style _carousel.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarousel\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Number, default: 0 },\n    /** Enable drag mode */\n    dragable: { type: Boolean, default: true },\n    /** Timer interval for `autoplay` */\n    interval: {\n        type: Number,\n        default: () => getOption(\"carousel.interval\", 3500),\n    },\n    /** Move item automaticalls after `interval` */\n    autoplay: { type: Boolean, default: false },\n    /** Pause autoplay on hover */\n    pauseHover: { type: Boolean, default: false },\n    /** Repeat from the beginning after reaching the end */\n    repeat: { type: Boolean, default: false },\n    /** Show an overlay */\n    overlay: { type: Boolean, default: false },\n    /** Enable indicators */\n    indicators: { type: Boolean, default: true },\n    /** Place indicators inside the carousel */\n    indicatorInside: { type: Boolean, default: false },\n    /**\n     * Indicator interaction mode\n     * @values click, hover\n     */\n    indicatorMode: {\n        type: String,\n        default: \"click\",\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\n    },\n    /** Position of the indicator - depends on used theme */\n    indicatorPosition: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\n    },\n    /** Style of the indicator - depends on used theme */\n    indicatorStyle: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\n    },\n    /** Number of items to show at once*/\n    itemsToShow: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToShow\", 1),\n    },\n    /** Number of items to switch at once */\n    itemsToList: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToList\", 1),\n    },\n    /** Show next / prev arrows */\n    arrows: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrows\", true),\n    },\n    /** Show next / prev arrows only on hover */\n    arrowsHover: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrowsHover\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"carousel.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"carousel.iconSize\"),\n    },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\n    },\n    /** Define these props for different screen sizes */\n    breakpoints: {\n        type: Object as PropType<Record<number, any>>,\n        default: () => ({}),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element in overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element of carousel items */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items */\n    itemsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items on drag */\n    itemsDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of arrow elements */\n    arrowIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of prev arrow element */\n    arrowIconPrevClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of next arrow element */\n    arrowIconNextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator link element */\n    indicatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element */\n    indicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside */\n    indicatorsInsideClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside and position */\n    indicatorsInsidePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator item element */\n    indicatorItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element when is active */\n    indicatorItemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element to separate different styles */\n    indicatorItemStyleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number): void;\n    /**\n     * on carousel scroll event\n     * @param value {number} scroll index\n     */\n    (e: \"scroll\", value: number): void;\n    /**\n     * on item click event\n     * @param event {event} native event\n     */\n    (e: \"click\", event: Event): void;\n}>();\n\nconst rootRef = ref();\n\nfunction restartTimer(): void {\n    pauseTimer();\n    startTimer();\n}\n\nconst provideData = computed<CarouselComponent>(() => ({\n    restartTimer,\n    itemWidth: itemWidth.value,\n    activeIndex: scrollIndex.value,\n    onClick: (event: Event): void => emits(\"click\", event),\n    setActive: (index: number): void => switchTo(index),\n}));\n\n/** Provide functionalities and data to child item components */\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\n\nconst activeIndex = useVModelBinding<number>(props, emits);\nconst scrollIndex = ref(props.modelValue);\n\nconst resizeObserver = ref(null);\nconst windowWidth = ref(0);\n\nconst refresh_ = ref(0);\n\n/** When v-model is changed switch to the new active item. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value <= childItems.value.length - 1)\n            switchTo(value * settings.value.itemsToList, true);\n    },\n);\n\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\n\nonMounted(() => {\n    if (isClient) {\n        if (window.ResizeObserver) {\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\n            resizeObserver.value.observe(rootRef.value);\n        }\n        onResized();\n        startTimer();\n    }\n});\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\n        dragEnd();\n        pauseTimer();\n    }\n});\n\n// add dom event handler\nif (isClient) {\n    useEventListener(\"resize\", onResized, window);\n    useEventListener(\"animationend\", onRefresh);\n    useEventListener(\"transitionend\", onRefresh);\n    useEventListener(\"transitionstart\", onRefresh);\n}\n\nfunction onResized(): void {\n    windowWidth.value = window.innerWidth;\n}\n\nfunction onRefresh(): void {\n    nextTick(() => refresh_.value++);\n}\n\nconst settings = computed<typeof props>(() => {\n    const breakpoints = Object.keys(props.breakpoints)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n    const breakpoint = breakpoints.filter(\n        (breakpoint) => windowWidth.value >= breakpoint,\n    )[0];\n\n    const settings = toRaw(\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\n    );\n\n    // prevent empty values\n    if (!settings.itemsToList) settings.itemsToList = 1;\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\n    return readonly(settings);\n});\n\nconst itemWidth = computed(() => {\n    // Ensure component is mounted\n    if (!windowWidth.value) return 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\n\n    const rect = rootRef.value.getBoundingClientRect();\n    return rect.width / settings.value.itemsToShow;\n});\n\nconst translation = computed(\n    () =>\n        -bound(\n            delta.value + scrollIndex.value * itemWidth.value,\n            0,\n            (childItems.value.length - settings.value.itemsToShow) *\n                itemWidth.value,\n        ),\n);\n\nconst total = computed(() => childItems.value.length);\n\nconst indicatorCount = computed(() =>\n    Math.ceil(total.value / settings.value.itemsToList),\n);\n\nconst indicatorIndex = computed(() =>\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\n);\n\nconst hasArrows = computed(\n    () =>\n        (settings.value.arrowsHover && isHovered.value) ||\n        !settings.value.arrowsHover,\n);\n\nconst hasPrev = computed(\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\n);\n\nfunction onPrev(): void {\n    switchTo(scrollIndex.value - settings.value.itemsToList);\n}\n\nconst hasNext = computed(\n    () =>\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\n        hasArrows.value,\n);\n\nfunction onNext(): void {\n    switchTo(scrollIndex.value + settings.value.itemsToList);\n}\n\nfunction switchTo(index: number, onlyMove?: boolean): void {\n    if (settings.value.repeat) index = mod(index, total.value);\n\n    index = bound(index, 0, total.value);\n    scrollIndex.value = index;\n    emits(\"scroll\", indicatorIndex.value);\n\n    if (!onlyMove)\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\n}\n\nfunction onModeChange(trigger: string, index: number): void {\n    if (props.indicatorMode === trigger)\n        switchTo(index * settings.value.itemsToList);\n}\n\n// --- Autoplay Feature ---\n\nconst isHovered = ref(false);\nconst isPaused = ref(false);\nconst timer = ref(null);\n\nfunction onMouseEnter(): void {\n    isHovered.value = true;\n    checkPause();\n}\n\nfunction onMouseLeave(): void {\n    isHovered.value = false;\n    startTimer();\n}\n\n/** When autoplay is changed, start or pause timer accordingly */\nwatch(\n    () => props.autoplay,\n    (status) => {\n        if (status) startTimer();\n        else pauseTimer();\n    },\n);\n\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\nwatch(\n    () => props.repeat,\n    (status) => {\n        if (status) startTimer();\n    },\n);\n\nfunction startTimer(): void {\n    if (!props.autoplay || timer.value) return;\n    isPaused.value = false;\n    timer.value = setInterval(() => {\n        if (!props.repeat && !hasNext.value) pauseTimer();\n        else onNext();\n    }, props.interval);\n}\n\nfunction pauseTimer(): void {\n    isPaused.value = true;\n    if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n    }\n}\n\nfunction checkPause(): void {\n    if (props.pauseHover && props.autoplay) pauseTimer();\n}\n\n// --- Drag & Drop Feature ---\n\nconst isTouch = ref(false);\nconst dragX = ref();\nconst hold = ref(0);\nconst delta = ref(0);\n\nconst isDragging = computed(() => isDefined(dragX.value));\n\n/** handle drag event */\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\n    if (\n        isDragging.value ||\n        !settings.value.dragable ||\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\n    )\n        return;\n    hold.value = Date.now();\n    isTouch.value = !!(event as TouchEvent).touches;\n    dragX.value = isTouch.value\n        ? (event as TouchEvent).touches[0].clientX\n        : (event as MouseEvent).clientX;\n    if (isTouch.value) {\n        pauseTimer();\n    }\n    if (isClient) {\n        window.addEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.addEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\nfunction dragMove(event: TouchEvent | MouseEvent): void {\n    if (!isDragging.value) return;\n    const dragEndX = (event as TouchEvent).touches\n        ? (\n              (event as TouchEvent).changedTouches[0] ||\n              (event as TouchEvent).touches[0]\n          ).clientX\n        : (event as MouseEvent).clientX;\n    delta.value = dragX.value - dragEndX;\n    // prevent event if not touch event\n    if (!(event as TouchEvent).touches) event.preventDefault();\n}\n\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\n    if (!isDragging.value && !hold.value) return;\n    if (hold.value) {\n        const signCheck = sign(delta.value);\n        const results = Math.round(\n            Math.abs(delta.value / itemWidth.value) + 0.15,\n        ); // Hack\n        switchTo(scrollIndex.value + signCheck * results);\n    }\n    delta.value = 0;\n    dragX.value = undefined;\n    if ((event as TouchEvent)?.touches) startTimer();\n\n    if (isClient) {\n        window.removeEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.removeEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-car\"],\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\n\nconst itemsClasses = defineClasses(\n    [\"itemsClass\", \"o-car__items\"],\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\n);\n\nconst arrowIconClasses = defineClasses([\n    \"arrowIconClass\",\n    \"o-car__arrow__icon\",\n]);\n\nconst arrowIconPrevClasses = defineClasses([\n    \"arrowIconPrevClass\",\n    \"o-car__arrow__icon-prev\",\n]);\n\nconst arrowIconNextClasses = defineClasses([\n    \"arrowIconNextClass\",\n    \"o-car__arrow__icon-next\",\n]);\n\nfunction indicatorItemClasses(index): ClassBind[] {\n    return defineClasses(\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\n        [\n            \"indicatorItemActiveClass\",\n            \"o-car__indicator__item--active\",\n            null,\n            indicatorIndex.value === index,\n        ],\n        [\n            \"indicatorItemStyleClass\",\n            \"o-car__indicator__item--\",\n            props.indicatorStyle,\n            !!props.indicatorStyle,\n        ],\n    ).value;\n}\n\nconst indicatorsClasses = defineClasses(\n    [\"indicatorsClass\", \"o-car__indicators\"],\n    [\n        \"indicatorsInsideClass\",\n        \"o-car__indicators--inside\",\n        null,\n        computed(() => !!props.indicatorInside),\n    ],\n    [\n        \"indicatorsInsidePositionClass\",\n        \"o-car__indicators--inside--\",\n        computed(() => props.indicatorPosition),\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\n    ],\n);\n\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\n</script>\n\n<template>\n    <div\n        ref=\"rootRef\"\n        :class=\"rootClasses\"\n        data-oruga=\"carousel\"\n        role=\"region\"\n        @mouseover=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @focus=\"onMouseEnter\"\n        @blur=\"onMouseLeave\"\n        @keydown.left=\"onPrev\"\n        @keydown.right=\"onNext\">\n        <div :class=\"wrapperClasses\">\n            <div\n                :class=\"itemsClasses\"\n                :style=\"'transform:translateX(' + translation + 'px)'\"\n                tabindex=\"0\"\n                role=\"group\"\n                draggable=\"true\"\n                aria-roledescription=\"carousel\"\n                @mousedown=\"onDragStart\"\n                @touchstart=\"onDragStart\">\n                <!--\n                    @slot Display carousel item\n                -->\n                <slot />\n            </div>\n            <!--\n                @slot Override the arrows\n                @binding {boolean} has-prev has prev arrow button \n                @binding {boolean} has-next has next arrow button \n                @binding {(): void} prev switch to prev item function\n                @binding {(): void} next switch to next item function\n            -->\n            <slot\n                name=\"arrow\"\n                :has-prev=\"hasPrev\"\n                :prev=\"onPrev\"\n                :has-next=\"hasNext\"\n                :next=\"onNext\">\n                <template v-if=\"arrows\">\n                    <o-icon\n                        v-show=\"hasPrev\"\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconPrev\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onPrev\"\n                        @keydown.enter=\"onPrev\" />\n                    <o-icon\n                        v-show=\"hasNext\"\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconNext\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onNext\"\n                        @keydown.enter=\"onNext\" />\n                </template>\n            </slot>\n        </div>\n\n        <!--\n            @slot Override the indicators\n            @binding {number} active active index \n            @binding {(idx: number): void} switch-to switch to item function\n            @binding {number} indicator-index current indicator index\n        -->\n        <slot\n            :active=\"activeIndex\"\n            :switch-to=\"switchTo\"\n            :indicator-index=\"indicatorIndex\"\n            name=\"indicators\">\n            <template v-if=\"childItems.length\">\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\n                    <div\n                        v-for=\"(_, index) in indicatorCount\"\n                        :key=\"index\"\n                        :class=\"indicatorClasses\"\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @focus=\"onModeChange('hover', index)\"\n                        @mouseover=\"onModeChange('hover', index)\"\n                        @click=\"onModeChange('click', index)\"\n                        @keypress.enter=\"onModeChange('click', index)\">\n                        <!--\n                            @slot Override the indicator elements\n                            @binding {index} index indicator index \n                        -->\n                        <slot :index=\"index\" name=\"indicator\">\n                            <span :class=\"indicatorItemClasses(index)\" />\n                        </slot>\n                    </div>\n                </div>\n            </template>\n        </slot>\n        <template v-if=\"overlay\">\n            <!-- @slot Overlay element -->\n            <slot name=\"overlay\" />\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A Slideshow item used by the carousel\n * @displayName Carousel Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarouselItem\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Make item clickable */\n    clickable: { type: Boolean, default: false },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of carousel item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is active */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<CarouselComponent>();\n\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\n\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\n\nfunction onClick(event: Event): void {\n    if (isActive.value) parent.value.onClick(event);\n    if (props.clickable) parent.value.setActive(item.value.index);\n}\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-car__item\"],\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\n    [\n        \"itemClickableClass\",\n        \"o-car__item--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n);\n</script>\n\n<template>\n    <div\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n        :data-id=\"`carousel-${item.identifier}`\"\n        data-oruga=\"carousel-item\"\n        :role=\"ariaRole\"\n        aria-roledescription=\"item\"\n        :aria-selected=\"isActive\"\n        @click=\"onClick\"\n        @keypress.enter=\"onClick\">\n        <!--\n            @slot Default content\n        -->\n        <slot />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Carousel from \"./Carousel.vue\";\nimport CarouselItem from \"./CarouselItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export carousel plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Carousel);\n        registerComponent(app, CarouselItem);\n    },\n} as Plugin;\n\n/** export carousel components */\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\n"],"names":["index","breakpoint","settings","Carousel","CarouselItem"],"mappings":"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"}