{"version":3,"file":"Tooltip.vue_vue_type_script_setup_true_lang-C1GHI2GD.mjs","sources":["../../src/components/tooltip/Tooltip.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Display a brief helper text to your user\n * @displayName Tooltip\n * @style _tooltip.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTooltip\",\n    configField: \"tooltip\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Tooltip text, unnecessary when content slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tooltip.variant\"),\n    },\n    /**\n     * Position of the Tooltip relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"tooltip.position\", \"auto\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Tooltip will be always active */\n    always: { type: Boolean, default: false },\n    /** Tooltip will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Tooltip default animation */\n    animation: {\n        type: String,\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\n    },\n    /** Tooltip will be multilined */\n    multiline: { type: Boolean, default: false },\n    /** Tooltip trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\n    },\n    /**\n     * Tooltip trigger events\n     * @values hover, click, focus, contextmenu\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Tooltip delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\n     * @values true, false, content, outside, escape\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content when is multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger when is always visible */\n    alwaysClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow position */\n    arrowPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on active change to false event */\n    (e: \"close\"): void;\n    /** on active change to true event */\n    (e: \"open\"): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\nwatch(isActive, (value) => {\n    if (value) emits(\"open\");\n    else emits(\"close\");\n});\n\nconst timer = ref();\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = ref([]);\n\nwatch(isActive, (value) => {\n    // on active set event handler\n    if (value && isClient) {\n        setTimeout(() => {\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                // set outside handler\n                eventCleanups.value.push(\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\n                );\n            }\n\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                // set keyup handler\n                eventCleanups.value.push(\n                    useEventListener(\"keyup\", onKeyPress, document, {\n                        immediate: true,\n                    }),\n                );\n            }\n        });\n    } else if (!value) {\n        // on close cleanup event handler\n        eventCleanups.value.forEach((fn) => fn());\n        eventCleanups.value.length = 0;\n    }\n});\n\nconst cancelOptions = computed<string[]>(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close tooltip if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.always) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    nextTick(() => setTimeout(() => open()));\n}\n\nfunction onContextMenu(event: Event): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nfunction onHover(): void {\n    if (props.triggers.indexOf(\"hover\") < 0) return;\n    open();\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer.value = setTimeout(() => {\n            isActive.value = true;\n            timer.value = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    isActive.value = !props.closeable;\n    if (timer.value && props.closeable) clearTimeout(timer.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tip\"],\n    [\n        \"teleportClass\",\n        \"o-tip--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\n\nconst arrowClasses = defineClasses(\n    [\"arrowClass\", \"o-tip__arrow\"],\n    [\n        \"arrowPositionClass\",\n        \"o-tip__arrow--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantArrowClass\",\n        \"o-tip__arrow--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tip__content\"],\n    [\n        \"positionClass\",\n        \"o-tip__content--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-tip__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"multilineClass\",\n        \"o-tip__content--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n    [\n        \"alwaysClass\",\n        \"o-tip__content--always\",\n        null,\n        computed(() => props.always),\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"rootClasses\"\n            :trigger=\"triggerRef\"\n            default-position=\"top\"\n            :disabled=\"!isActive\">\n            <transition :name=\"animation\">\n                <div\n                    v-show=\"isActive || (always && !disabled)\"\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\n                    :class=\"contentClasses\">\n                    <span :class=\"arrowClasses\"></span>\n\n                    <!--\n                        @slot Tooltip content, default is label prop\n                    -->\n                    <slot name=\"content\">{{ label }}</slot>\n                </div>\n            </transition>\n        </PositionWrapper>\n\n        <component\n            :is=\"triggerTag\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            aria-haspopup=\"true\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\"\n            @blur.capture=\"onClose\"\n            @mouseleave=\"onClose\">\n            <!--\n                @slot Tooltip trigger slot\n                @binding {boolean} active - tooltip active state\n            -->\n            <slot :active=\"isActive\" />\n        </component>\n    </div>\n</template>\n"],"names":[],"mappings":"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"}