{"version":3,"file":"config-C1k5NuG7.mjs","sources":["../../src/utils/programmatic.ts","../../src/utils/plugins.ts","../../src/utils/config.ts"],"sourcesContent":["import { ref } from \"vue\";\nimport type { OrugaProgrammatic } from \"@/types\";\n\n/** Oruga object for programmatic components */\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\n\n/** Add components to the oruga object */\nexport function addProgrammatic(property: string, component: object): void {\n    oruga.value[property] = component;\n}\n\n/** Composable for internal and external usage of programmatic components*/\nexport function useOruga(): OrugaProgrammatic {\n    return oruga.value;\n}\n","import type { App, Component, Plugin } from \"vue\";\nimport { useOruga, addProgrammatic } from \"./programmatic\";\n\nexport let VueInstance: App;\n\n/** set the global vue instance */\nexport const setVueInstance = (Vue: App): void => {\n    VueInstance = Vue;\n};\n\n/** register a plugin to the vue app instance */\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\n    app.use(plugin);\n};\n\n/** register a component to the vue app instance */\nexport const registerComponent = (app: App, component: Component): void => {\n    app.component(component.name, component);\n};\n\n/** register a global programmatic component to the oruga object */\nexport const registerComponentProgrammatic = (\n    app: App,\n    property: string,\n    component: Component,\n): void => {\n    // set global vue instance\n    setVueInstance(app);\n    // use composable for unified access to programmatic oruga object\n    const oruga = useOruga();\n    // add component (manipulates the programmatic oruga object)\n    addProgrammatic(property, component);\n\n    // add provide and $oruga (only needed once)\n    if (!(app._context.provides && app._context.provides.oruga))\n        app.provide(\"oruga\", oruga);\n    if (!app.config.globalProperties.$oruga)\n        app.config.globalProperties.$oruga = oruga;\n};\n","import { ref, toRaw, type App } from \"vue\";\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\nimport { setVueInstance } from \"./plugins\";\nimport type { OrugaOptions } from \"@/types\";\n\ndeclare module \"../index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n\nconst globalOptions = ref<OrugaOptions>({\n    iconPack: \"mdi\",\n    useHtml5Validation: true,\n    statusIcon: true,\n    transformClasses: undefined,\n});\n\nexport const setOptions = (options: OrugaOptions): void => {\n    globalOptions.value = options;\n};\n\nexport const getOptions = (): OrugaOptions => {\n    return clone(toRaw(globalOptions.value));\n};\n\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\n    return getValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const setOption = <T>(path: string, defaultValue: T): void => {\n    setValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const ConfigProgrammatic = {\n    getOption,\n    getOptions,\n    setOption,\n    setOptions(options: OrugaOptions): void {\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n\nexport const OrugaConfig = {\n    install(app: App, options?: OrugaOptions): void {\n        // set global vue instance\n        setVueInstance(app);\n        // set options\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n"],"names":["oruga"],"mappings":";;;AAIA,MAAM,QAAQ,IAAuB,CAAA,CAAuB;AAG5C,SAAA,gBAAgB,UAAkB,WAAyB;AACjE,QAAA,MAAM,QAAQ,IAAI;AAC5B;AAGO,SAAS,WAA8B;AAC1C,SAAO,MAAM;AACjB;ACXW,IAAA;AAGE,MAAA,iBAAiB,CAAC,QAAmB;AAChC,gBAAA;AAClB;AAGa,MAAA,iBAAiB,CAAC,KAAU,WAAyB;AAC9D,MAAI,IAAI,MAAM;AAClB;AAGa,MAAA,oBAAoB,CAAC,KAAU,cAA+B;AACnE,MAAA,UAAU,UAAU,MAAM,SAAS;AAC3C;AAGO,MAAM,gCAAgC,CACzC,KACA,UACA,cACO;AAEP,iBAAe,GAAG;AAElB,QAAMA,SAAQ;AAEd,kBAAgB,UAAU,SAAS;AAGnC,MAAI,EAAE,IAAI,SAAS,YAAY,IAAI,SAAS,SAAS;AAC7C,QAAA,QAAQ,SAASA,MAAK;AAC1B,MAAA,CAAC,IAAI,OAAO,iBAAiB;AACzB,QAAA,OAAO,iBAAiB,SAASA;AAC7C;AC3BA,MAAM,gBAAgB,IAAkB;AAAA,EACpC,UAAU;AAAA,EACV,oBAAoB;AAAA,EACpB,YAAY;AAAA,EACZ,kBAAkB;AACtB,CAAC;AAEY,MAAA,aAAa,CAAC,YAAgC;AACvD,gBAAc,QAAQ;AAC1B;AAEO,MAAM,aAAa,MAAoB;AAC1C,SAAO,MAAM,MAAM,cAAc,KAAK,CAAC;AAC3C;AAEa,MAAA,YAAY,CAAI,MAAc,iBAAwB;AAC/D,SAAO,eAAe,cAAc,OAAO,MAAM,YAAY;AACjE;AAEa,MAAA,YAAY,CAAI,MAAc,iBAA0B;AAClD,iBAAA,cAAc,OAAO,MAAM,YAAY;AAC1D;AAEO,MAAM,qBAAqB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW,SAA6B;AACpC,eAAW,MAAM,WAAA,GAAc,SAAS,IAAI,CAAC;AAAA,EACjD;AACJ;AAEO,MAAM,cAAc;AAAA,EACvB,QAAQ,KAAU,SAA8B;AAE5C,mBAAe,GAAG;AAElB,eAAW,MAAM,WAAA,GAAc,SAAS,IAAI,CAAC;AAAA,EACjD;AACJ;"}