{"version":3,"file":"steps.mjs","sources":["../../src/components/steps/Steps.vue","../../src/components/steps/StepItem.vue","../../src/components/steps/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\n\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal process steps\n * @displayName Steps\n * @requires ./StepItem.vue\n * @style _steps.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSteps\",\n    configField: \"steps\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"steps.variant\"),\n    },\n    /**\n     * Step size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"steps.size\"),\n    },\n    /** Show step in vertical layout */\n    vertical: { type: Boolean, default: false },\n    /**\n     * Position of the step\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Icon pack to use for the navigation\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Icon to use for navigation button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for navigation button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\n    },\n    /**\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\n     */\n    hasNavigation: { type: Boolean, default: true },\n    /** Destroy stepItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Step navigation is animated */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"steps.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"steps.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"steps.animateInitially\", false),\n    },\n    /**\n     * Position of the marker label\n     * @values bottom, right, left\n     */\n    labelPosition: {\n        type: String,\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\n    },\n    /** Rounded step markers */\n    rounded: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"steps.mobileBreakpoint\"),\n    },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaNextLabel\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the steps */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the steps container */\n    stepsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Steps component when animation gets triggered */\n    animatedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps markers trigger when are rounded */\n    stepMarkerRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component dividers */\n    stepDividerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component marker */\n    stepMarkerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content */\n    stepContentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content when transition is happening */\n    stepContentTransitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component navigation element */\n    stepNavigationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link */\n    stepLinkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link when clickable */\n    stepLinkClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label */\n    stepLinkLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label when positioned */\n    stepLinkLabelPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of steps component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on step change event\n     * @param value {string | number} new step value\n     * @param value {string | number} old step value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<StepsComponent>(() => ({\n    activeValue: vmodel.value,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<StepItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/** When v-model is changed set the new active step. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => !!prevItem.value);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => !!nextItem.value);\n\n/** Retrieves the previous visible item */\nconst prevItem = computed(() => {\n    if (!activeItem.value) return null;\n\n    let prevItem = null;\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\n        if (items.value[idx].visible) {\n            prevItem = items.value[idx];\n            break;\n        }\n    }\n    return prevItem;\n});\n\n/** Retrieves the next visible item */\nconst nextItem = computed(() => {\n    let nextItem = null;\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\n    for (; idx < items.value.length; idx++) {\n        if (items.value[idx].visible) {\n            nextItem = items.value[idx];\n            break;\n        }\n    }\n    return nextItem;\n});\n\n/**\n * Return if the step should be clickable or not.\n */\nfunction isItemClickable(item: StepItem): boolean {\n    if (item.clickable === undefined)\n        return item.index < activeItem.value?.index;\n    return item.clickable;\n}\n\n/** Previous button click listener. */\nfunction prev(): void {\n    if (hasPrev.value) itemClick(prevItem.value);\n}\n\n/** Previous button click listener. */\nfunction next(): void {\n    if (hasNext.value) itemClick(nextItem.value);\n}\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: StepItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = activeItem.value.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-steps__wrapper\"],\n    [\n        \"sizeClass\",\n        \"o-steps--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"verticalClass\",\n        \"o-steps__wrapper-vertical\",\n        null,\n        computed(() => props.vertical),\n    ],\n    [\n        \"positionClass\",\n        \"o-steps__wrapper-position-\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\n);\n\nconst wrapperClasses = defineClasses(\n    [\"stepsClass\", \"o-steps\"],\n    [\n        \"animatedClass\",\n        \"o-steps--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n);\n\nconst stepDividerClasses = defineClasses([\n    \"stepDividerClass\",\n    \"o-steps__divider\",\n]);\n\nconst stepMarkerClasses = defineClasses(\n    [\"stepMarkerClass\", \"o-steps__marker\"],\n    [\n        \"stepMarkerRoundedClass\",\n        \"o-steps__marker--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst stepContentClasses = defineClasses(\n    [\"stepContentClass\", \"o-steps__content\"],\n    [\n        \"stepContentTransitioningClass\",\n        \"o-steps__content-transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nconst stepNavigationClasses = defineClasses([\n    \"stepNavigationClass\",\n    \"o-steps__navigation\",\n]);\n\nconst stepLinkLabelClasses = defineClasses([\n    \"stepLinkLabelClass\",\n    \"o-steps__title\",\n]);\n\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\n    const classes = defineClasses(\n        [\"stepLinkClass\", \"o-steps__link\"],\n        [\n            \"stepLinkLabelPositionClass\",\n            \"o-steps__link-label-\",\n            props.labelPosition,\n            !!props.labelPosition,\n        ],\n        [\n            \"stepLinkClickableClass\",\n            \"o-steps__link-clickable\",\n            null,\n            isItemClickable(childItem),\n        ],\n    );\n\n    return classes.value;\n}\n\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\n        [\n            \"itemHeaderVariantClass\",\n            \"o-steps__nav-item--\",\n            childItem.variant || props.variant,\n            !!childItem.variant || !!props.variant,\n        ],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-steps__nav-item-active\",\n            null,\n            childItem.value === activeItem.value.value,\n        ],\n        [\n            \"itemHeaderPreviousClass\",\n            \"o-steps__nav-item-previous\",\n            null,\n            activeItem.value.index > childItem.index,\n        ],\n    );\n\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\n        <ol :class=\"wrapperClasses\">\n            <li\n                v-for=\"(childItem, index) in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :aria-current=\"\n                    childItem.value === activeItem.value ? 'step' : undefined\n                \"\n                :class=\"itemClasses(childItem)\">\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\n\n                <component\n                    :is=\"childItem.tag\"\n                    role=\"button\"\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\n                    :class=\"stepLinkClasses(childItem)\"\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\n                    @keydown.enter=\"\n                        isItemClickable(childItem) && itemClick(childItem)\n                    \">\n                    <div :class=\"stepMarkerClasses\">\n                        <o-icon\n                            v-if=\"childItem.icon\"\n                            :icon=\"childItem.icon\"\n                            :pack=\"childItem.iconPack\"\n                            :size=\"size\" />\n                        <span v-else-if=\"childItem.step\">\n                            {{ childItem.step }}\n                        </span>\n                    </div>\n\n                    <div :class=\"stepLinkLabelClasses\">\n                        {{ childItem.label }}\n                    </div>\n                </component>\n            </li>\n        </ol>\n\n        <section :class=\"stepContentClasses\">\n            <!--\n                @slot Place step items here\n            -->\n            <slot />\n        </section>\n\n        <!--\n            @slot Override step navigation\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\n        -->\n        <slot\n            name=\"navigation\"\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\n            :next=\"{ disabled: !hasNext, action: next }\">\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconPrev\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasPrev\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\" />\n\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconNext\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasNext\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\" />\n            </nav>\n        </slot>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { StepsComponent, StepItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Step Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OStepItem\",\n    configField: \"steps\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Step marker content (when there is no icon) */\n    step: { type: [String, Number], default: undefined },\n    /**\n     * Default style for the step.\n     * This will override parent type.\n     * Could be used to set a completed step to \"success\" for example\n     */\n    variant: { type: String, default: undefined },\n    /**\n     * Item can be used directly to navigate.\n     * If undefined, previous steps are clickable while the others are not\n     */\n    clickable: { type: Boolean, default: undefined },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"steps.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Step item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the content item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item behind the active one */\n    itemHeaderPreviousClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item with variant (default value by parent steps component) */\n    itemHeaderVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on step item activate event */\n    (e: \"activate\"): void;\n    /** on step item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<StepItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<StepsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`steps-${item.identifier}`\"\n                data-oruga=\"steps-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                @slot Step item content\n            -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Steps from \"./Steps.vue\";\nimport StepItem from \"./StepItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export steps specific types */\nexport type * from \"./types\";\n\n/** export steps plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Steps);\n        registerComponent(app, StepItem);\n    },\n} as Plugin;\n\n/** export steps components */\nexport { Steps as OSteps, StepItem as OStepItem };\n"],"names":["_useModel","prevItem","nextItem","Steps","StepItem"],"mappings":"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"}