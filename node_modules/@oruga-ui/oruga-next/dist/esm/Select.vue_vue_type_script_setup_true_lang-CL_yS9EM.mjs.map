{"version":3,"file":"Select.vue_vue_type_script_setup_true_lang-CL_yS9EM.mjs","sources":["../../src/components/select/Select.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { OptionsItem } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an item in a dropdown list. Use with Field to access all functionalities\n * @displayName Select\n * @style _select.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSelect\",\n    configField: \"select\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: null,\n    },\n    /** Select options, unnecessary when default slot is used */\n    options: {\n        type: Array as PropType<string[] | OptionsItem[]>,\n        default: undefined,\n    },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"select.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"select.variant\"),\n    },\n    /** Text when nothing is selected */\n    placeholder: { type: String, default: undefined },\n    /** Allow multiple selection */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native size */\n    nativeSize: { type: [String, Number], default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"select.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"select.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"select.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Same as native id. Also set the for label for o-field wrapper. */\n    id: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"select.autocomplete\", \"off\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native select element */\n    selectClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the select */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the select */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select when multiple mode is active */\n    multipleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select placeholder */\n    placeholderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant for the root element*/\n    rootVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | object | Array<any>,\n    ): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst selectRef = ref<HTMLInputElement>();\n\n// use form input functionality\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\n    useInputHandler(selectRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | object | Array<any>\n>(props, emits, { passive: true });\n\nconst placeholderVisible = computed(() => vmodel.value === null);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            checkHtml5Validity();\n        },\n        { immediate: true },\n    );\n});\n\nconst selectOptions = computed<OptionsItem[]>(() => {\n    if (!props.options || !Array.isArray(props.options)) return [];\n\n    return props.options.map((option) =>\n        typeof option === \"string\"\n            ? { value: option, label: option, key: uuid() }\n            : { ...option, key: uuid() },\n    );\n});\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(\n    () =>\n        (props.iconRight && !props.multiple) ||\n        (props.statusIcon && statusVariantIcon.value),\n);\n\nconst rightIcon = computed(() =>\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\n);\n\nconst rightIconVariant = computed(() =>\n    props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event): void {\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-ctrl-sel\"],\n    [\n        \"expandedClass\",\n        \"o-ctrl-sel--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"rootVariantClass\",\n        \"o-ctrl-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n);\n\nconst selectClasses = defineClasses(\n    [\"selectClass\", \"o-sel\"],\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\n    [\n        \"sizeClass\",\n        \"o-sel--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-sel-iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-sel-iconspace-right\",\n        null,\n        computed(() => !!props.iconRight),\n    ],\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\n    [\n        \"arrowClass\",\n        \"o-sel-arrow\",\n        null,\n        computed(() => !props.iconRight && !props.multiple),\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"select\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick('icon-click', $event)\" />\n\n        <select\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"selectRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"select\"\n            :class=\"selectClasses\"\n            :autocomplete=\"autocomplete\"\n            :multiple=\"multiple\"\n            :size=\"nativeSize\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\">\n            <template v-if=\"placeholder || $slots.placeholder\">\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\n                    <!--\n                        @slot Override the placeholder\n                    -->\n                    <slot name=\"placeholder\">\n                        {{ placeholder }}\n                    </slot>\n                </option>\n            </template>\n\n            <!--\n                @slot Override the options, default is options prop\n            -->\n            <slot>\n                <option\n                    v-for=\"option in selectOptions\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    v-bind=\"option.attrs\">\n                    {{ option.label }}\n                </option>\n            </slot>\n        </select>\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"iconRightClickable\"\n            :icon=\"rightIcon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"rightIconVariant\"\n            both\n            @click=\"rightIconClick\" />\n    </div>\n</template>\n"],"names":[],"mappings":"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"}