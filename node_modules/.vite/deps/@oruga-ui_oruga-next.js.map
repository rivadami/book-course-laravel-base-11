{
  "version": 3,
  "sources": ["../../@oruga-ui/oruga-next/src/utils/helpers.ts", "../../@oruga-ui/oruga-next/src/utils/programmatic.ts", "../../@oruga-ui/oruga-next/src/utils/plugins.ts", "../../@oruga-ui/oruga-next/src/utils/config.ts", "../../@oruga-ui/oruga-next/src/composables/defineClasses.ts", "../../@oruga-ui/oruga-next/src/utils/icons.ts", "../../@oruga-ui/oruga-next/src/components/icon/Icon.vue", "../../@oruga-ui/oruga-next/src/components/field/fieldInjection.ts", "../../@oruga-ui/oruga-next/src/composables/unrefElement.ts", "../../@oruga-ui/oruga-next/src/utils/ssr.ts", "../../@oruga-ui/oruga-next/src/composables/useInputHandler.ts", "../../@oruga-ui/oruga-next/src/components/input/Input.vue", "../../@oruga-ui/oruga-next/src/composables/useScrollingParent.ts", "../../@oruga-ui/oruga-next/src/components/utils/PositionWrapper.vue", "../../@oruga-ui/oruga-next/src/directives/trapFocus.ts", "../../@oruga-ui/oruga-next/src/composables/useEventListener.ts", "../../@oruga-ui/oruga-next/src/composables/useMatchMedia.ts", "../../@oruga-ui/oruga-next/src/composables/useParentProvider.ts", "../../@oruga-ui/oruga-next/src/composables/useClickOutside.ts", "../../@oruga-ui/oruga-next/src/components/dropdown/Dropdown.vue", "../../@oruga-ui/oruga-next/src/components/dropdown/DropdownItem.vue", "../../@oruga-ui/oruga-next/src/composables/useDebounce.ts", "../../@oruga-ui/oruga-next/src/components/autocomplete/Autocomplete.vue", "../../@oruga-ui/oruga-next/src/components/autocomplete/index.ts", "../../@oruga-ui/oruga-next/src/components/button/Button.vue", "../../@oruga-ui/oruga-next/src/components/button/index.ts", "../../@oruga-ui/oruga-next/src/composables/usePropValue.ts", "../../@oruga-ui/oruga-next/src/components/carousel/Carousel.vue", "../../@oruga-ui/oruga-next/src/components/carousel/CarouselItem.vue", "../../@oruga-ui/oruga-next/src/components/carousel/index.ts", "../../@oruga-ui/oruga-next/src/components/checkbox/Checkbox.vue", "../../@oruga-ui/oruga-next/src/components/checkbox/index.ts", "../../@oruga-ui/oruga-next/src/components/collapse/Collapse.vue", "../../@oruga-ui/oruga-next/src/components/collapse/index.ts", "../../@oruga-ui/oruga-next/src/components/select/Select.vue", "../../@oruga-ui/oruga-next/src/components/utils/PickerWrapper.vue", "../../@oruga-ui/oruga-next/src/components/datepicker/utils.ts", "../../@oruga-ui/oruga-next/src/components/datepicker/useDatepickerMixins.ts", "../../@oruga-ui/oruga-next/src/components/datepicker/DatepickerTableRow.vue", "../../@oruga-ui/oruga-next/src/components/datepicker/DatepickerTable.vue", "../../@oruga-ui/oruga-next/src/components/datepicker/DatepickerMonth.vue", "../../@oruga-ui/oruga-next/src/components/datepicker/Datepicker.vue", "../../@oruga-ui/oruga-next/src/components/datepicker/index.ts", "../../@oruga-ui/oruga-next/src/components/timepicker/useTimepickerMixins.ts", "../../@oruga-ui/oruga-next/src/components/timepicker/Timepicker.vue", "../../@oruga-ui/oruga-next/src/components/datetimepicker/Datetimepicker.vue", "../../@oruga-ui/oruga-next/src/components/datetimepicker/index.ts", "../../@oruga-ui/oruga-next/src/components/dropdown/index.ts", "../../@oruga-ui/oruga-next/src/components/field/Field.vue", "../../@oruga-ui/oruga-next/src/components/field/index.ts", "../../@oruga-ui/oruga-next/src/components/icon/index.ts", "../../@oruga-ui/oruga-next/src/components/input/index.ts", "../../@oruga-ui/oruga-next/src/composables/useProgrammatic.ts", "../../@oruga-ui/oruga-next/src/components/loading/Loading.vue", "../../@oruga-ui/oruga-next/src/utils/InstanceRegistry.ts", "../../@oruga-ui/oruga-next/src/components/loading/LoadingProgrammatic.ts", "../../@oruga-ui/oruga-next/src/components/loading/index.ts", "../../@oruga-ui/oruga-next/src/components/menu/Menu.vue", "../../@oruga-ui/oruga-next/src/components/menu/MenuItem.vue", "../../@oruga-ui/oruga-next/src/components/menu/index.ts", "../../@oruga-ui/oruga-next/src/components/modal/Modal.vue", "../../@oruga-ui/oruga-next/src/components/modal/ModalProgrammatic.ts", "../../@oruga-ui/oruga-next/src/components/modal/index.ts", "../../@oruga-ui/oruga-next/src/components/notification/Notification.vue", "../../@oruga-ui/oruga-next/src/components/notification/NotificationNotice.vue", "../../@oruga-ui/oruga-next/src/components/notification/NotificationProgrammatic.ts", "../../@oruga-ui/oruga-next/src/components/notification/index.ts", "../../@oruga-ui/oruga-next/src/components/pagination/PaginationButton.vue", "../../@oruga-ui/oruga-next/src/components/pagination/Pagination.vue", "../../@oruga-ui/oruga-next/src/components/pagination/index.ts", "../../@oruga-ui/oruga-next/src/components/radio/Radio.vue", "../../@oruga-ui/oruga-next/src/components/radio/index.ts", "../../@oruga-ui/oruga-next/src/components/select/index.ts", "../../@oruga-ui/oruga-next/src/components/skeleton/Skeleton.vue", "../../@oruga-ui/oruga-next/src/components/skeleton/index.ts", "../../@oruga-ui/oruga-next/src/components/sidebar/Sidebar.vue", "../../@oruga-ui/oruga-next/src/components/sidebar/SidebarProgrammatic.ts", "../../@oruga-ui/oruga-next/src/components/sidebar/index.ts", "../../@oruga-ui/oruga-next/src/components/tooltip/Tooltip.vue", "../../@oruga-ui/oruga-next/src/components/slider/SliderThumb.vue", "../../@oruga-ui/oruga-next/src/components/slider/SliderTick.vue", "../../@oruga-ui/oruga-next/src/components/slider/Slider.vue", "../../@oruga-ui/oruga-next/src/components/slider/index.ts", "../../@oruga-ui/oruga-next/src/components/steps/Steps.vue", "../../@oruga-ui/oruga-next/src/components/steps/StepItem.vue", "../../@oruga-ui/oruga-next/src/components/steps/index.ts", "../../@oruga-ui/oruga-next/src/components/switch/Switch.vue", "../../@oruga-ui/oruga-next/src/components/switch/index.ts", "../../@oruga-ui/oruga-next/src/components/utils/SlotComponent.ts", "../../@oruga-ui/oruga-next/src/components/table/TableMobileSort.vue", "../../@oruga-ui/oruga-next/src/components/table/TableColumn.vue", "../../@oruga-ui/oruga-next/src/components/table/TablePagination.vue", "../../@oruga-ui/oruga-next/src/components/table/Table.vue", "../../@oruga-ui/oruga-next/src/components/table/index.ts", "../../@oruga-ui/oruga-next/src/components/tabs/Tabs.vue", "../../@oruga-ui/oruga-next/src/components/tabs/TabItem.vue", "../../@oruga-ui/oruga-next/src/components/tabs/index.ts", "../../@oruga-ui/oruga-next/src/components/taginput/Taginput.vue", "../../@oruga-ui/oruga-next/src/components/taginput/index.ts", "../../@oruga-ui/oruga-next/src/components/timepicker/index.ts", "../../@oruga-ui/oruga-next/src/components/tooltip/index.ts", "../../@oruga-ui/oruga-next/src/components/upload/Upload.vue", "../../@oruga-ui/oruga-next/src/components/upload/index.ts", "../../@oruga-ui/oruga-next/src/index.ts"],
  "sourcesContent": ["import { Comment, Fragment, Text } from \"vue\";\n\n/**\n * Generates a random string\n */\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\n\n/**\n * +/- function to native math sign\n */\nfunction signPoly(value: number): number {\n    if (value < 0) return -1;\n    return value > 0 ? 1 : 0;\n}\nexport const sign = Math.sign || signPoly;\n\n/**\n * Native modulo bug with negative numbers\n * @param n\n * @param mod\n * @returns {number}\n */\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\n\n/**\n * Asserts a value is beetween min and max\n * @param val\n * @param min\n * @param max\n * @returns {number}\n */\nexport function bound(val: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, val));\n}\n\nexport const isObject = <T>(obj: T): boolean =>\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport const isDate = (d: unknown): d is Date =>\n    d && d instanceof Date && !isNaN(d.getTime());\n\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\n\nexport const blankIfUndefined = (value: string): string =>\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\n\nexport const defaultIfUndefined = <T>(\n    value: T | undefined,\n    defaultValue: T,\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\n\nexport const toCssDimension = (width: string | number): string | number =>\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\n\n/**\n * Extension of indexOf method by equality function if specified\n */\nexport function indexOf<T>(\n    array: T[],\n    obj: T,\n    fn: (value: T, array: T[]) => boolean,\n): number {\n    if (!array) return -1;\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\n    return array.findIndex((value, index, arr) => fn(value, arr));\n}\n\n/**\n * Deeply check if two values are equal\n */\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\n    // Check if only one value is empty.\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\n\n    // If both objects are identical, return true.\n    if (valueA === valueB) return true;\n\n    // Check if both values are objecs.\n    if (isObject(valueA) && isObject(valueB)) {\n        // Get the keys of both objects.\n        const keys1 = Object.keys(valueA);\n        const keys2 = Object.keys(valueB);\n\n        // Check if the number of keys is the same.\n        if (keys1.length !== keys2.length) return false;\n\n        // Iterate through the keys and compare their values recursively.\n        for (const key of keys1) {\n            const val1 = valueA[key];\n            const val2 = valueB[key];\n            const areObjects = isObject(val1) && isObject(val2);\n            if (\n                (areObjects && !isEqual(val1, val2)) ||\n                (!areObjects && val1 !== val2)\n            )\n                return false;\n        }\n        // If all checks pass, the objects are deep equal.\n        return true;\n    }\n\n    // Check if both values are arrays.\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\n        // Check if the number of keys is the same.\n        if (valueA.length !== valueB.length) return false;\n        // Check if each value of the array is the same.\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\n        // If all checks pass, the arrays are deep equal.\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Clone an obj with Object.assign\n */\nexport function clone<T extends object>(obj: T): T {\n    return Object.assign({}, obj);\n}\n\n/**\n * Merge function to replace Object.assign with deep merging possibility\n */\nexport function merge(target: any, source: any, deep = false): any {\n    if (!isObject(target) || !isObject(source)) return source;\n    if (!deep) return Object.assign(target, source);\n    else return mergeDeep(target, source);\n}\n\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nexport function mergeDeep(target: any, source: any): any {\n    if (!isObject(target) || !isObject(source)) return source;\n\n    Object.getOwnPropertyNames(source).forEach((key) => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(\n                Object.assign({}, targetValue),\n                sourceValue,\n            );\n        } else {\n            target[key] = sourceValue;\n        }\n    });\n\n    return target;\n}\n\n/**\n * Get a value of an object property/path even if it's nested\n */\nexport function getValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    defaultValue?: T,\n): T {\n    const value = path\n        .split(\".\")\n        .reduce(\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\n            obj,\n        ) as T;\n    return typeof value !== \"undefined\" ? value : defaultValue;\n}\n\n/**\n * Set a value of an object property/path even if it's nested\n */\nexport function setValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    value: T,\n): void {\n    const p = path.split(\".\");\n    if (p.length === 1) {\n        obj[path] = value;\n        return;\n    }\n    const field = p[0];\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\n}\n\nexport function removeElement(el: Element): void {\n    if (typeof el.remove !== \"undefined\") {\n        el.remove();\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\n        el.parentNode.removeChild(el);\n    }\n}\n\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\n    const root = document.createElement(\"div\");\n    root.style.position = \"absolute\";\n    root.style.left = \"0px\";\n    root.style.top = \"0px\";\n    const wrapper = document.createElement(\"div\");\n    root.appendChild(wrapper);\n    wrapper.appendChild(el);\n    document.body.appendChild(root);\n    return root;\n}\n\n/**\n * Escape regex characters\n * http://stackoverflow.com/a/6969486\n */\nexport function escapeRegExpChars(value: string): string {\n    if (!value) return value;\n    // eslint-disable-next-line no-useless-escape\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove accents/diacritics in a string in JavaScript\n * https://stackoverflow.com/a/37511463\n */\nexport function removeDiacriticsFromString(value: string): string {\n    if (!value) return value;\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/** checks if a vue vnode is empty */\nexport function isVNodeEmpty(vnode): boolean {\n    if (!vnode) return true;\n    if (vnode.type === Comment) return true;\n    if (vnode.type === Text && !vnode.children.trim()) return true;\n    if (vnode.type === Fragment && isVNodeEmpty(vnode.children)) return true;\n    return false;\n}\n\n/**\n * Mobile detection\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\n */\nexport const isMobileAgent = {\n    Android: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Android/i),\n    BlackBerry: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/BlackBerry/i),\n    iOS: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\n    Opera: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Opera Mini/i),\n    Windows: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/IEMobile/i),\n    any: (): boolean =>\n        isMobileAgent.Android() ||\n        isMobileAgent.BlackBerry() ||\n        isMobileAgent.iOS() ||\n        isMobileAgent.Opera() ||\n        isMobileAgent.Windows(),\n};\n", "import { ref } from \"vue\";\nimport type { OrugaProgrammatic } from \"@/types\";\n\n/** Oruga object for programmatic components */\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\n\n/** Add components to the oruga object */\nexport function addProgrammatic(property: string, component: object): void {\n    oruga.value[property] = component;\n}\n\n/** Composable for internal and external usage of programmatic components*/\nexport function useOruga(): OrugaProgrammatic {\n    return oruga.value;\n}\n", "import type { App, Component, Plugin } from \"vue\";\nimport { useOruga, addProgrammatic } from \"./programmatic\";\n\nexport let VueInstance: App;\n\n/** set the global vue instance */\nexport const setVueInstance = (Vue: App): void => {\n    VueInstance = Vue;\n};\n\n/** register a plugin to the vue app instance */\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\n    app.use(plugin);\n};\n\n/** register a component to the vue app instance */\nexport const registerComponent = (app: App, component: Component): void => {\n    app.component(component.name, component);\n};\n\n/** register a global programmatic component to the oruga object */\nexport const registerComponentProgrammatic = (\n    app: App,\n    property: string,\n    component: Component,\n): void => {\n    // set global vue instance\n    setVueInstance(app);\n    // use composable for unified access to programmatic oruga object\n    const oruga = useOruga();\n    // add component (manipulates the programmatic oruga object)\n    addProgrammatic(property, component);\n\n    // add provide and $oruga (only needed once)\n    if (!(app._context.provides && app._context.provides.oruga))\n        app.provide(\"oruga\", oruga);\n    if (!app.config.globalProperties.$oruga)\n        app.config.globalProperties.$oruga = oruga;\n};\n", "import { ref, toRaw, type App } from \"vue\";\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\nimport { setVueInstance } from \"./plugins\";\nimport type { OrugaOptions } from \"@/types\";\n\ndeclare module \"../index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n\nconst globalOptions = ref<OrugaOptions>({\n    iconPack: \"mdi\",\n    useHtml5Validation: true,\n    statusIcon: true,\n    transformClasses: undefined,\n});\n\nexport const setOptions = (options: OrugaOptions): void => {\n    globalOptions.value = options;\n};\n\nexport const getOptions = (): OrugaOptions => {\n    return clone(toRaw(globalOptions.value));\n};\n\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\n    return getValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const setOption = <T>(path: string, defaultValue: T): void => {\n    setValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const ConfigProgrammatic = {\n    getOption,\n    getOptions,\n    setOption,\n    setOptions(options: OrugaOptions): void {\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n\nexport const OrugaConfig = {\n    install(app: App, options?: OrugaOptions): void {\n        // set global vue instance\n        setVueInstance(app);\n        // set options\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n", "import {\n    ref,\n    watch,\n    isRef,\n    toValue,\n    getCurrentInstance,\n    effectScope,\n    onScopeDispose,\n    getCurrentScope,\n    type MaybeRefOrGetter,\n    type Ref,\n    type ComponentInternalInstance,\n} from \"vue\";\n\nimport { getOptions } from \"@/utils/config\";\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\n\nimport type {\n    ClassBind,\n    ClassDefinition,\n    ComponentProps,\n    TransformFunction,\n} from \"@/types\";\n\n// named tuple as prop definition\ntype ComputedClass = readonly [\n    className: string,\n    defaultClass: string,\n    suffix?: MaybeRefOrGetter<string>,\n    apply?: MaybeRefOrGetter<boolean>,\n];\n\n/** Helperfunction to get all active classes from a class binding list */\nexport const getActiveClasses = (classes: ClassBind[]): string[] => {\n    if (!classes) return [];\n    return classes.flatMap((bind) =>\n        Object.keys(bind).filter((key) => key && bind[key]),\n    );\n};\n\n/**\n * Calculate dynamic classes based on class definitions\n */\nexport function defineClasses(\n    ...classDefinitions: ComputedClass[]\n): Ref<ClassBind[]> {\n    // getting a hold of the internal instance of the component in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"defineClasses must be called within a component setup function.\",\n        );\n\n    // create an effect scope object to capture reactive effects\n    const scope = effectScope();\n\n    // reactive classes container\n    const classes = ref<ClassBind[]>([]);\n\n    classes.value = classDefinitions.map((defintion, index) => {\n        const className = defintion[0];\n        const defaultClass = defintion[1];\n        const suffix = defintion[2];\n        const apply = defintion[3];\n\n        function getClassBind(): ClassBind {\n            // compute class based on definition parameter\n            const computedClass = computeClass(\n                vm,\n                className,\n                defaultClass,\n                toValue(suffix),\n            );\n\n            // if apply is not defined or true\n            const applied = !isDefined(apply) || toValue(apply);\n\n            // return class bind property\n            return { [computedClass]: applied };\n        }\n\n        // if suffix is defined, watch suffix changed and recalculate class\n        if (isDefined(suffix) && isRef(suffix)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(suffix),\n                    (value, oldValue) => {\n                        // only recompute when value has really changed\n                        if (value === oldValue) return;\n                        // recompute the class bind property\n                        const classBind = getClassBind();\n                        // update class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\n        if (isDefined(apply) && isRef(apply)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(apply),\n                    (applied, oldValue) => {\n                        // only change apply when value has really changed\n                        if (applied === oldValue) return;\n\n                        // get class binding property by class index\n                        const classBind = classes.value[index];\n\n                        // update the apply class binding state\n                        Object.keys(classBind).forEach(\n                            (key) => (classBind[key] = applied),\n                        );\n\n                        // update the class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // return computed class based on parameter\n        return getClassBind();\n    });\n\n    // check if there is a current active effect scope\n    if (getCurrentScope())\n        // Registers a dispose callback on the current active effect scope.\n        // The callback will be invoked when the associated effect scope is stopped.\n        onScopeDispose(() => {\n            // stop all effects when appropriate\n            if (scope) scope.stop();\n        });\n\n    // return reactive classes\n    return classes;\n}\n\n/**\n * Compute a class by a field name\n */\nfunction computeClass(\n    vm: ComponentInternalInstance,\n    field: string,\n    defaultValue?: string,\n    suffix = \"\",\n): string {\n    // get component props\n    const props = getProps(vm).props; // TODO: remove `.props` when object escape get reverted\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get component instance override property\n    const config = props.override === true ? {} : getOptions();\n\n    // get global config override property\n    const globalOverride =\n        props.override || getValueByPath(config, \"override\", false);\n    // get component config override property\n    const localOverride = getValueByPath(\n        config,\n        `${configField}.override`,\n        globalOverride,\n    );\n    // get field specific config override property\n    const overrideClass = getValueByPath(\n        config,\n        `${configField}.${field}.override`,\n        localOverride,\n    );\n\n    // get global tranform class\n    const globalTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        \"transformClasses\",\n        undefined,\n    );\n    // get field specific tranform class\n    const localTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        `${configField}.transformClasses`,\n        undefined,\n    );\n\n    // get config class definition\n    let globalClass =\n        getValueByPath<ClassDefinition>(\n            config,\n            `${configField}.${field}.class`,\n            \"\",\n        ) ||\n        getValueByPath<ClassDefinition>(config, `${configField}.${field}`, \"\");\n    // get instance class override\n    let currentClass = getValueByPath<ClassDefinition>(props, field, \"\");\n\n    // procsess instance class\n    if (Array.isArray(currentClass)) {\n        currentClass = currentClass.join(\" \");\n    }\n    if (typeof currentClass === \"function\") {\n        const props = getProps(vm);\n        currentClass = currentClass(suffix, props);\n    } else {\n        currentClass = suffixProcessor(currentClass as string, suffix);\n    }\n\n    // process confic class\n    if (Array.isArray(globalClass)) {\n        globalClass = globalClass.join(\" \");\n    }\n    if (typeof globalClass === \"function\") {\n        const props = getProps(vm);\n        globalClass = globalClass(suffix, props);\n    } else {\n        globalClass = suffixProcessor(globalClass as string, suffix);\n    }\n\n    // process default value\n    if (defaultValue.includes(\"{*}\")) {\n        defaultValue = defaultValue.replace(\n            /\\{\\*\\}/g,\n            blankIfUndefined(suffix),\n        );\n    } else {\n        defaultValue = defaultValue + blankIfUndefined(suffix);\n    }\n\n    // if override is false add default value\n    // add global config classes\n    // add instance classes\n    let appliedClasses = (\n        `${!overrideClass ? defaultValue : \"\"} ` +\n        `${blankIfUndefined(globalClass)} ` +\n        `${blankIfUndefined(currentClass)}`\n    )\n        .trim()\n        .replace(/\\s\\s+/g, \" \");\n\n    // apply component local transformclass if available\n    if (localTransformClasses) {\n        appliedClasses = localTransformClasses(appliedClasses);\n    }\n    // else apply global transformclass if available\n    else if (globalTransformClasses) {\n        appliedClasses = globalTransformClasses(appliedClasses);\n    }\n\n    return appliedClasses;\n}\n\nfunction suffixProcessor(input: string, suffix: string): string {\n    return blankIfUndefined(input)\n        .split(\" \")\n        .filter((cls) => cls.length > 0)\n        .map((cls) => cls + blankIfUndefined(suffix))\n        .join(\" \");\n}\n\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\n    let props = vm.proxy.$props;\n\n    // get all props which ends with \"Props\", these are compressed parent props\n    // append these parent props as root level prop\n    props = Object.keys(props)\n        .filter((key) => key.endsWith(\"Props\"))\n        .map((key) => props[key])\n        .reduce((a, b) => ({ ...a, ...b }), props);\n\n    // TODO: revert object escape\n    return { props };\n};\n", "import { getOption } from \"./config\";\nimport { merge } from \"./helpers\";\n\nexport type IconConfig = {\n    sizes?: { default: string; [key: string]: string };\n    iconPrefix?: string;\n    internalIcons?: Record<string, string>;\n};\n\nconst mdiIcons = {\n    sizes: {\n        default: \"mdi-24px\",\n        small: null,\n        medium: \"mdi-36px\",\n        large: \"mdi-48px\",\n    },\n    iconPrefix: \"mdi-\",\n};\n\nconst faIcons = () => {\n    const iconComponent = getOption(\"iconComponent\");\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\n    return {\n        sizes: {\n            default: null,\n            small: null,\n            medium: \"lg\",\n            large: \"2xl\",\n        },\n        iconPrefix: faIconPrefix,\n        internalIcons: {\n            check: \"check\",\n            information: \"info-circle\",\n            alert: \"exclamation-triangle\",\n            \"alert-circle\": \"exclamation-circle\",\n            \"arrow-up\": \"arrow-up\",\n            \"chevron-right\": \"angle-right\",\n            \"chevron-left\": \"angle-left\",\n            \"chevron-down\": \"angle-down\",\n            \"chevron-up\": \"angle-up\",\n            eye: \"eye\",\n            \"eye-off\": \"eye-slash\",\n            \"caret-down\": \"caret-down\",\n            \"caret-up\": \"caret-up\",\n            \"close-circle\": \"times-circle\",\n            close: \"times\",\n            loading: \"circle-notch\",\n        },\n    };\n};\n\nconst getIcons = (): Record<string, IconConfig> => {\n    let icons: Record<string, IconConfig> = {\n        mdi: mdiIcons,\n        fa: faIcons(),\n        fas: faIcons(),\n        far: faIcons(),\n        fad: faIcons(),\n        fab: faIcons(),\n        fal: faIcons(),\n    };\n\n    const customIconPacks =\n        getOption<Record<string, IconConfig>>(\"customIconPacks\");\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\n\n    return icons;\n};\n\nexport default getIcons;\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport getIcons from \"@/utils/icons\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Icons take an important role of any application\n * @displayName Icon\n * @style _icon.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OIcon\",\n    configField: \"icon\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Icon component name */\n    component: {\n        type: String,\n        default: () => getOption(\"iconComponent\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    pack: {\n        type: String,\n        default: () => getOption(\"iconPack\", \"mdi\"),\n    },\n    /**\n     * \tColor of the icon\n     *  @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"icon.variant\"),\n    },\n    /** Icon name */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"icon.size\"),\n    },\n    /**\n     * Overrides icon font size\n     * @values Depends on library: null (smallest), fa-sm, fa-lg, fa-xl, mdi-18px, mdi-24px, mdi-36px, mdi-48px\n     */\n    customSize: { type: String, default: undefined },\n    /**\n     * Add class to icon font.\n     * See icon library documentation for custom classes.\n     */\n    customClass: { type: String, default: undefined },\n    /** When true makes icon clickable */\n    clickable: { type: Boolean, default: false },\n    /** Enable spin effect on icon */\n    spin: { type: Boolean, default: false },\n    /** Rotation 0-360 */\n    rotation: { type: [Number, String], default: undefined },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    both: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon when clickable */\n    clickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when spin */\n    spinClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootStyle = computed(() => {\n    const style = {};\n    if (props.rotation) {\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\n    }\n    return style;\n});\n\nconst iconConfig = computed(() => getIcons()[props.pack]);\n\nconst iconPrefix = computed(() =>\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\n);\n\nconst customSizeByPack = computed(() => {\n    if (iconConfig.value?.sizes) {\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\n            return iconConfig.value.sizes[props.size];\n        } else if (iconConfig.value.sizes.default) {\n            return iconConfig.value.sizes.default;\n        }\n    }\n    return null;\n});\n\n/**\n * Internal icon name based on the pack.\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\n * internal icons are always MDI.\n */\nconst computedIcon = computed(\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\n);\n\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\n\nconst computedVariant = computed(() => {\n    if (!props.variant) return;\n    let newVariant = \"\";\n    if (typeof props.variant === \"string\") {\n        newVariant = props.variant;\n    } else {\n        newVariant = Object.keys(props.variant).filter(\n            (key) => props.variant[key],\n        )[0];\n    }\n    return newVariant;\n});\n\n/** Equivalent icon name of the MDI. */\nfunction getEquivalentIconOf(value): string {\n    // Only transform the class if the both prop is set to true\n    if (!props.both) return value;\n    if (\n        iconConfig.value?.internalIcons &&\n        iconConfig.value?.internalIcons[value]\n    )\n        return iconConfig.value.internalIcons[value];\n    return value;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-icon\"],\n    [\n        \"clickableClass\",\n        \"o-icon--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\n    [\n        \"sizeClass\",\n        \"o-icon--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-icon--\",\n        computedVariant,\n        computed(() => !!computedVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <span :class=\"rootClasses\" data-oruga=\"icon\" :style=\"rootStyle\">\n        <!-- custom icon component -->\n        <component\n            :is=\"component\"\n            v-if=\"component\"\n            :icon=\"[pack, computedIcon]\"\n            :size=\"computedSize\"\n            :class=\"[customClass]\" />\n\n        <!-- native css icon -->\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\n    </span>\n</template>\n", "import {\n    computed,\n    inject,\n    provide,\n    type ComputedRef,\n    type InjectionKey,\n} from \"vue\";\n\nimport Field from \"./Field.vue\";\nimport { getOption } from \"@/utils/config\";\n\nexport type FieldProps = InstanceType<typeof Field>[\"$props\"];\n\ntype FieldData = {\n    $el: Element;\n    props: FieldProps;\n    hasInnerField: boolean;\n    hasMessage: boolean;\n    fieldVariant: string;\n    fieldMessage: string;\n    addInnerField: () => void;\n    setInputId: (value: string) => void;\n    setFocus: (value: boolean) => void;\n    setFilled: (value: boolean) => void;\n    setVariant: (value: string) => void;\n    setMessage: (value: string) => void;\n};\n\n/** provide/inject type */\ntype ProvidedField = ComputedRef<FieldData> | undefined;\n\n/** provide/inject key */\nconst $FieldKey: InjectionKey<ProvidedField> = Symbol(\"FielData\");\n\n/**\n * Provide field component data via dependency injection.\n * Provided data is a computed ref to enjure reactivity.\n */\nexport function provideField(data: ProvidedField): void {\n    provide($FieldKey, data);\n}\n\n/** Inject parent field component if used inside one. **/\nexport function injectField() {\n    const parentField = inject($FieldKey, undefined);\n\n    /**\n     * Get the type prop from parent if it's a Field.\n     */\n    const statusVariant = computed(() => {\n        if (!parentField?.value?.fieldVariant) return undefined;\n        if (typeof parentField.value.fieldVariant === \"string\")\n            return parentField.value.fieldVariant;\n        if (Array.isArray(parentField.value.fieldVariant)) {\n            for (const key in parentField.value.fieldVariant as any) {\n                if (parentField.value.fieldVariant[key]) return key;\n            }\n        }\n        return undefined;\n    });\n\n    /** Get the message prop from parent if it's a Field. */\n    const statusMessage = computed(() =>\n        parentField.value?.hasMessage ? parentField.value.fieldMessage : \"\",\n    );\n\n    /** Icon name based on the variant. */\n    const statusVariantIcon = computed<string>(() => {\n        const statusVariantIcon = getOption(\"statusVariantIcon\", {\n            success: \"check\",\n            danger: \"alert-circle\",\n            info: \"information\",\n            warning: \"alert\",\n        });\n        return statusVariantIcon[statusVariant.value] || \"\";\n    });\n\n    return {\n        parentField,\n        statusVariant,\n        statusVariantIcon,\n        statusMessage,\n    };\n}\n", "import {\n    toValue,\n    type ComponentPublicInstance,\n    type MaybeRefOrGetter,\n    type MaybeRef,\n    type Component,\n} from \"vue\";\n\nexport type MaybeElement =\n    | Element\n    | Document\n    | Window\n    | HTMLElement\n    | SVGElement\n    | Component\n    | ComponentPublicInstance\n    | undefined\n    | null;\n\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\n    T extends ComponentPublicInstance\n        ? Exclude<MaybeElement, ComponentPublicInstance>\n        : T extends Component\n          ? HTMLElement\n          : T | undefined;\n\n/**\n * Get the dom element of a ref of element or Vue component instance\n *\n * @param elRef\n */\nexport function unrefElement<T extends MaybeElement>(\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\n): UnRefElementReturn<T> {\n    const plain = toValue(elRef);\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\n}\n", "// Polyfills for SSR\n\nexport const isClient = typeof window !== \"undefined\";\nexport const isSSR = typeof window === \"undefined\";\n\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\nexport const File = isSSR ? Object : window.File;\n", "import {\n    nextTick,\n    ref,\n    computed,\n    type ExtractPropTypes,\n    type MaybeRefOrGetter,\n    type Component,\n    watch,\n} from \"vue\";\nimport { injectField } from \"@/components/field/fieldInjection\";\nimport { unrefElement } from \"./unrefElement\";\nimport { getOption } from \"@/utils/config\";\nimport { isSSR } from \"@/utils/ssr\";\nimport { isDefined } from \"@/utils/helpers\";\n\n// This should cover all types of HTML elements that have properties related to\n// HTML constraint validation, e.g. .form and .validity.\nconst validatableFormElementTypes = isSSR\n    ? []\n    : [\n          HTMLButtonElement,\n          HTMLFieldSetElement,\n          HTMLInputElement,\n          HTMLObjectElement,\n          HTMLOutputElement,\n          HTMLSelectElement,\n          HTMLTextAreaElement,\n      ];\n\nexport type ValidatableFormElement = InstanceType<\n    (typeof validatableFormElementTypes)[number]\n>;\n\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\n    return validatableFormElementTypes.some((t) => el instanceof t)\n        ? (el as ValidatableFormElement)\n        : null;\n}\n\nconst constraintValidationAttributes = [\n    \"disabled\",\n    \"required\",\n    \"pattern\",\n    \"maxlength\",\n    \"minlength\",\n    \"max\",\n    \"min\",\n    \"step\",\n];\n\n/**\n * Form input handler functionalities\n */\nexport function useInputHandler<T extends ValidatableFormElement>(\n    /** input ref element - can be a html element or a vue component*/\n    inputRef: MaybeRefOrGetter<T | Component>,\n    /** emitted input events */\n    emits: {\n        /** on input focus event */\n        (e: \"focus\", value: Event): void;\n        /** on input blur event */\n        (e: \"blur\", value: Event): void;\n        /** on input invalid event */\n        (e: \"invalid\", value: Event): void;\n    },\n    /** validation configuration props */\n    props: Readonly<\n        ExtractPropTypes<{\n            useHtml5Validation?: boolean;\n            validationMessage?: string;\n        }>\n    >,\n) {\n    // inject parent field component if used inside one\n    const { parentField } = injectField();\n\n    /// Allows access to the native element in cases where it might be missing,\n    /// e.g. because the component hasn't been mounted yet or has been suspended\n    /// by a <KeepAlive>\n    const maybeElement = computed<T | undefined>(() => {\n        const el = unrefElement<Component | HTMLElement>(inputRef);\n        if (!el) {\n            return undefined;\n        }\n        if (el.getAttribute(\"data-oruga-input\"))\n            // if element is the input element\n            return el as T;\n\n        const inputs = el.querySelector(\"[data-oruga-input]\");\n\n        if (!inputs) {\n            console.warn(\n                \"useInputHandler: Underlaying Oruga input component not found\",\n            );\n            return undefined;\n        }\n        // return underlaying the input element\n        return inputs as T;\n    });\n\n    /// Should be used for most accesses to the native element; we generally\n    /// expect it to be present, especially in event handlers.\n    const element = computed(() => {\n        const el = maybeElement.value;\n        if (!el) {\n            console.warn(\"useInputHandler: inputRef contains no element\");\n        }\n        return el;\n    });\n\n    // --- Input Focus Feature ---\n\n    const isFocused = ref(false);\n\n    /** Focus the underlaying input element. */\n    function setFocus(): void {\n        nextTick(() => {\n            if (element.value) element.value.focus();\n        });\n    }\n\n    /** Click the underlaying input element. */\n    function doClick(): void {\n        nextTick(() => {\n            if (element.value) element.value.click();\n        });\n    }\n\n    /** Unset focused and emit blur event. */\n    function onBlur(event?: Event): void {\n        isFocused.value = false;\n        if (parentField?.value) parentField.value.setFocus(false);\n        emits(\"blur\", event);\n        checkHtml5Validity();\n    }\n\n    /** Set focused and emit focus event. */\n    function onFocus(event?: Event): void {\n        isFocused.value = true;\n        if (parentField?.value) parentField.value.setFocus(true);\n        emits(\"focus\", event);\n    }\n\n    // --- Validation Feature ---\n\n    const isValid = ref(true);\n\n    function setFieldValidity(variant, message): void {\n        nextTick(() => {\n            if (parentField?.value) {\n                // Set type only if not defined\n                if (!parentField.value.props.variant) {\n                    parentField.value.setVariant(variant);\n                }\n                // Set message only if not defined\n                if (!parentField.value.props.message) {\n                    parentField.value.setMessage(message);\n                }\n            }\n        });\n    }\n\n    /**\n     * Check HTML5 validation, set isValid property.\n     * If validation fail, send 'danger' type,\n     * and error message to parent if it's a Field.\n     */\n    function checkHtml5Validity(): void {\n        if (!props.useHtml5Validation) return;\n\n        if (!element.value) return;\n        if (element.value.validity.valid) {\n            setFieldValidity(null, null);\n            isValid.value = true;\n        } else {\n            setInvalid();\n            isValid.value = false;\n        }\n    }\n\n    function setInvalid(): void {\n        const variant = \"danger\";\n        const message =\n            props.validationMessage || element.value.validationMessage;\n        setFieldValidity(variant, message);\n    }\n\n    function onInvalid(event: Event): void {\n        checkHtml5Validity();\n        const validatable = asValidatableFormElement(event.target);\n        if (validatable && parentField?.value && props.useHtml5Validation) {\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\n            // We still want to focus the form's first invalid input, though.\n            event.preventDefault();\n            let isFirstInvalid = false;\n            if (validatable.form != null) {\n                const formElements = validatable.form.elements;\n                for (let i = 0; i < formElements.length; ++i) {\n                    const element = asValidatableFormElement(\n                        formElements.item(i),\n                    );\n                    if (element?.willValidate && !element.validity.valid) {\n                        isFirstInvalid = validatable === element;\n                        break;\n                    }\n                }\n            }\n            if (isFirstInvalid) {\n                const fieldElement = parentField.value.$el;\n                const invalidHandler = getOption(\"invalidHandler\");\n                if (invalidHandler instanceof Function) {\n                    invalidHandler(validatable, fieldElement);\n                } else {\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\n                    // which should mean that the message will be visible onscreen.\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\n                    // If we can't use it, we'll just fall back to focusing the field.\n                    const canScrollToField = fieldElement\n                        ? fieldElement.scrollIntoView != undefined\n                        : false;\n                    validatable.focus({ preventScroll: canScrollToField });\n                    if (canScrollToField) {\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\n                    }\n                }\n            }\n        }\n        emits(\"invalid\", event);\n    }\n\n    if (!isSSR) {\n        // Respond to attribute changes that might clear constraint validation errors.\n        // For instance, removing the `required` attribute on an empty field means that it's no\n        // longer invalid, so we might as well clear the validation message.\n        // In order to follow our usual convention, we won't add new validation messages\n        // until the next time the user interacts with the control.\n\n        // Technically, having the `required` attribute on one element in a radio button\n        // group affects the validity of the entire group.\n        // See https://html.spec.whatwg.org/multipage/input.html#radio-button-group.\n        // We're not checking for that here because it would require more expensive logic.\n        // Because of that, this will only work properly if the `required` attributes of all radio\n        // buttons in the group are synchronized with each other, which is likely anyway.\n        // (We're also expecting the use of radio buttons with our default validation message handling\n        // to be fairly uncommon because the overall visual experience is clunky with such a configuration.)\n        const onAttributeChange = (): void => {\n            if (!isValid.value) checkHtml5Validity();\n        };\n        let validationAttributeObserver: MutationObserver | null = null;\n        watch(\n            [maybeElement, isValid, () => props.useHtml5Validation],\n            (data) => {\n                // Not using destructuring assignment because browser support is just a little too weak at the moment\n                const el = data[0];\n                const valid = data[1];\n                const useValidation = data[2];\n\n                // Clean up previous state.\n                if (validationAttributeObserver != null) {\n                    // Process any pending events.\n                    if (validationAttributeObserver.takeRecords().length > 0) {\n                        onAttributeChange();\n                    }\n                    validationAttributeObserver.disconnect();\n                }\n\n                if (!isDefined(el) || valid || !useValidation) {\n                    return;\n                }\n\n                if (validationAttributeObserver == null) {\n                    validationAttributeObserver = new MutationObserver(\n                        onAttributeChange,\n                    );\n                }\n                validationAttributeObserver.observe(el, {\n                    attributeFilter: constraintValidationAttributes,\n                });\n\n                // Note that this doesn't react to changes in the list of ancestors.\n                // Based on testing, Vue seems to rarely, if ever, re-parent DOM nodes;\n                // it generally prefers to create new ones under the new parent.\n                // That means this simpler solution is likely good enough for now.\n                let ancestor: Node | null = el;\n                while ((ancestor = ancestor.parentNode)) {\n                    // Form controls can be disabled by their ancestor fieldsets.\n                    if (ancestor instanceof HTMLFieldSetElement) {\n                        validationAttributeObserver.observe(ancestor, {\n                            attributeFilter: [\"disabled\"],\n                        });\n                    }\n                }\n            },\n            { immediate: true },\n        );\n    }\n\n    return {\n        input: element,\n        isFocused,\n        isValid,\n        setFocus,\n        doClick,\n        onFocus,\n        onBlur,\n        checkHtml5Validity,\n        onInvalid,\n    };\n}\n", "<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    nextTick,\n    watch,\n    onMounted,\n    type StyleValue,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Get user Input. Use with Field to access all functionalities\n * @displayName Input\n * @style _input.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OInput\",\n    configField: \"input\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: \"\" },\n    /**\n     * Input type, like native\n     * @values Any native input type, and textarea\n     */\n    type: { type: String, default: \"text\" },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"input.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"input.variant\"),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Adds the reveal password functionality */\n    passwordReveal: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [Number, String], default: undefined },\n    /** Show character counter when maxlength prop is passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"input.counter\", false),\n    },\n    /** Automatically adjust height in textarea */\n    autosize: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"input.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"input.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"input.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"input.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"input.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"input.autocomplete\", \"off\"),\n    },\n    /** Same as native id. Also set the for label for o-field wrapper. */\n    id: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when type textarea */\n    textareaClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the input */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the input */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display when a right icon is used */\n    hasIconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\n// --- Validation Feature ---\n\nconst inputRef = ref<HTMLInputElement>();\nconst textareaRef = ref<HTMLInputElement>();\n\nconst elementRef = computed<HTMLInputElement>(() =>\n    props.type === \"textarea\" ? textareaRef.value : inputRef.value,\n);\n\n// use form input functionalities\nconst {\n    checkHtml5Validity,\n    onBlur,\n    onFocus,\n    onInvalid,\n    setFocus,\n    isValid,\n    isFocused,\n} = useInputHandler(elementRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = defineModel<string | number>({ default: \"\" });\n\n// if id is given set as `for` property on o-field wrapper\nif (props.id) parentField?.value?.setInputId(props.id);\n\n/** Get value length */\nconst valueLength = computed(() =>\n    typeof vmodel.value === \"string\"\n        ? vmodel.value.length\n        : typeof vmodel.value === \"number\"\n          ? vmodel.value.toString().length\n          : 0,\n);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            if (props.autosize) resize();\n            if (!isValid.value) nextTick(() => checkHtml5Validity());\n        },\n        { immediate: true },\n    );\n});\n\nconst height = ref(\"auto\");\n\nfunction resize(): void {\n    height.value = \"auto\";\n    nextTick(() => {\n        if (!textareaRef.value) return;\n        const scrollHeight = textareaRef.value.scrollHeight;\n        height.value = scrollHeight + \"px\";\n    });\n}\n\n/** Computed inline styles for autoresize */\nconst computedStyles = computed(\n    (): StyleValue =>\n        props.autosize\n            ? {\n                  resize: \"none\",\n                  height: height.value,\n                  overflow: \"hidden\",\n              }\n            : {},\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", (event.target as HTMLInputElement).value, event);\n}\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(() => {\n    return !!(\n        props.passwordReveal ||\n        (props.statusIcon && statusVariantIcon.value) ||\n        (props.clearable && vmodel.value && props.clearIcon) ||\n        props.iconRight\n    );\n});\n\nconst computedIconRight = computed(() => {\n    if (props.passwordReveal) {\n        return passwordVisibleIcon.value;\n    } else if (props.clearable && vmodel.value && props.clearIcon) {\n        return props.clearIcon;\n    } else if (props.iconRight) {\n        return props.iconRight;\n    }\n    return statusVariantIcon.value;\n});\n\nconst computedIconRightVariant = computed(() =>\n    props.passwordReveal || props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(event: Event): void {\n    emits(\"icon-click\", event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.passwordReveal) togglePasswordVisibility();\n    else if (props.clearable) vmodel.value = \"\";\n    if (props.iconRightClickable) {\n        emits(\"icon-right-click\", event);\n        nextTick(() => setFocus());\n    }\n}\n\n// --- Password Visability Feature ---\n\nconst isPasswordVisible = ref(false);\n\nconst inputType = computed(() => {\n    if (props.passwordReveal) {\n        return isPasswordVisible.value ? \"text\" : \"password\";\n    } else {\n        return props.type;\n    }\n});\n\n/** Current password-reveal icon name. */\nconst passwordVisibleIcon = computed(() =>\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\n);\n\n/**\n * Toggle the visibility of a password-reveal input\n * by changing the type and focus the input right away.\n */\nfunction togglePasswordVisibility(): void {\n    isPasswordVisible.value = !isPasswordVisible.value;\n    nextTick(() => setFocus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-input__wrapper\"],\n    [\n        \"expandedClass\",\n        \"o-input__wrapper--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"hasIconRightClass\",\n        \"o-input__wrapper--has-icon-right\",\n        null,\n        hasIconRight,\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-input\"],\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\n    [\n        \"sizeClass\",\n        \"o-input--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-input--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"disabledClass\",\n        \"o-input--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"textareaClass\",\n        \"o-input__textarea\",\n        null,\n        computed(() => props.type === \"textarea\"),\n    ],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\"iconRightSpaceClass\", \"o-input--iconspace-right\", null, hasIconRight],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-input__icon-right\",\n]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"input\" :class=\"rootClasses\">\n        <input\n            v-if=\"type !== 'textarea'\"\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            :data-oruga-input=\"inputType\"\n            :type=\"inputType\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :autocomplete=\"autocomplete\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <textarea\n            v-else\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"textareaRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"textarea\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :style=\"computedStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick\" />\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\n            :icon=\"computedIconRight\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"computedIconRightVariant\"\n            both\n            @click=\"rightIconClick\" />\n\n        <small\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\n            :class=\"counterClasses\">\n            {{ valueLength }} / {{ maxlength }}\n        </small>\n    </div>\n</template>\n", "import { isDefined } from \"@/utils/helpers\";\n\n/**\n * Given an element, returns the element who scrolls it.\n */\nexport function getScrollingParent(target: HTMLElement): HTMLElement {\n    if (target.style.position === \"fixed\" || !target)\n        return document.documentElement;\n\n    let isScrollingParent = false;\n    let nextParent = target.parentElement;\n\n    while (!isScrollingParent && isDefined(nextParent)) {\n        if (nextParent === document.documentElement) break;\n\n        const { overflow, overflowY } = getComputedStyle(nextParent);\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\n\n        isScrollingParent =\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\n            scrollHeight > clientHeight;\n\n        /* ...found it, this one is returned */\n        if (isScrollingParent) break;\n\n        /* ...if not check the next one */\n        nextParent = nextParent.parentElement;\n    }\n\n    return nextParent;\n}\n", "<script setup lang=\"ts\">\nimport {\n    watch,\n    computed,\n    nextTick,\n    onBeforeUnmount,\n    ref,\n    type Component,\n    type PropType,\n} from \"vue\";\nimport { isClient } from \"@/utils/ssr\";\nimport { getScrollingParent, unrefElement } from \"@/composables\";\n\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\n\nconst opposites: Record<Position, Position> = {\n    top: \"bottom\",\n    bottom: \"top\",\n    right: \"left\",\n    left: \"right\",\n};\n\ntype Point = { x: number; y: number };\n\ndefineOptions({ inheritAttrs: false });\n\nconst props = defineProps({\n    teleport: {\n        type: [Boolean, String, Object],\n        required: true,\n    },\n    trigger: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    /**\n     * Position of the component relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n        default: undefined,\n    },\n    /** Used for calculation position auto */\n    defaultPosition: {\n        type: String as PropType<Position>,\n        validator: (value: string) =>\n            [\"top\", \"bottom\", \"left\", \"right\"].indexOf(value) > -1,\n        default: \"top\",\n    },\n    /** disable the position calculation */\n    disabled: { type: Boolean, default: false },\n    /** update positioning on teleport */\n    disablePositioning: { type: Boolean, default: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"update:position\", value: string);\n}>();\n\nconst teleportTo = computed(() =>\n    typeof props.teleport === \"boolean\" ? \"body\" : props.teleport,\n);\n\nconst teleportDisabled = computed(() =>\n    typeof props.teleport === \"boolean\" || !props.teleport\n        ? !props.teleport\n        : false,\n);\n\nconst contentRef = ref<HTMLElement | Component>();\n\nfunction setContent<T extends typeof contentRef.value>(el: T): typeof el {\n    contentRef.value = el;\n\n    nextTick(() => {\n        // update positioning\n        updatePositioning();\n        // add handler\n        addHandler();\n    });\n    return el;\n}\n\n// --- Dynamic Positioning Handling Feature ---\n\nconst initialPosition = props.position;\n\nconst scrollingParent = ref(undefined);\nconst resizeObserver = ref(null);\n\nif (isClient && window.ResizeObserver) {\n    resizeObserver.value = new window.ResizeObserver(updatePositioning);\n}\n\n// on content or disable state change update event listener\nwatch(\n    () => props.disabled,\n    () => {\n        if (!props.disabled) addHandler();\n        else removeHandler();\n    },\n    { immediate: true },\n);\n\n// update positioning if props change\nwatch(\n    [\n        () => !!props.trigger,\n        () => props.disablePositioning,\n        () => props.disabled,\n    ],\n    () => {\n        nextTick(() => updatePositioning());\n    },\n    { immediate: true },\n);\n\n// remove any event listener on unmount\nonBeforeUnmount(() => removeHandler());\n\n/** add event listener */\nfunction addHandler(): void {\n    if (isClient && !scrollingParent.value && contentRef.value) {\n        // get parent container\n        scrollingParent.value = getScrollingParent(unrefElement(contentRef));\n        // set event listener\n        if (\n            scrollingParent.value &&\n            scrollingParent.value !== document.documentElement\n        ) {\n            scrollingParent.value.addEventListener(\n                \"scroll\",\n                updatePositioning,\n                { passive: true },\n            );\n            if (window.ResizeObserver)\n                resizeObserver.value.observe(scrollingParent.value);\n        } else {\n            document.addEventListener(\"scroll\", updatePositioning, {\n                passive: true,\n            });\n            window.addEventListener(\"resize\", updatePositioning);\n        }\n    }\n}\n\n/** remove event listener */\nfunction removeHandler(): void {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value?.disconnect();\n        window.removeEventListener(\"resize\", updatePositioning);\n        document.removeEventListener(\"scroll\", updatePositioning);\n        scrollingParent.value = undefined;\n    }\n}\n\n/** Update the best position set teleport positioning */\nfunction updatePositioning(): void {\n    if (props.disabled) return;\n    let position = props.position;\n    // update position if auto position is enabled\n    if (initialPosition === \"auto\") {\n        // calculate best position\n        position = getAutoPosition();\n        if (position != props.position)\n            // two-way bind updated position\n            emits(\"update:position\", position);\n    }\n    // do not set content position if not teleport enabled\n    if (!props.teleport) return;\n\n    const content = unrefElement(contentRef);\n    const trigger = unrefElement(props.trigger);\n\n    // set content position\n    if (content && trigger) {\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        let left = rect.left + window.scrollX;\n        // define vertical positioning\n        if (position.includes(\"bottom\")) {\n            top += trigger.clientHeight;\n        } else if (position.includes(\"top\")) {\n            top -= content.clientHeight;\n        }\n        // define horizontal positioning\n        if (position === \"left\") {\n            left -= content.clientWidth;\n        } else if (position === \"right\") {\n            left += trigger.clientWidth;\n        } else if (position.includes(\"-right\")) {\n            left += trigger.clientWidth - content.clientWidth;\n        }\n\n        // adjust exact vertical positioning\n        if (position === \"top\" || position === \"bottom\") {\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\n        }\n        // adjust exact horizontal positioning\n        if (position === \"left\" || position === \"right\") {\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\n        }\n\n        // set style properties\n        if (props.disablePositioning) {\n            content.style.position = \"relative\";\n            content.style.top = `${top}px`;\n            content.style.left = `${left}px`;\n        } else {\n            content.style.position = \"\";\n            content.style.top = \"\";\n            content.style.left = \"\";\n        }\n    }\n}\n\n/** calculate best position if auto */\nfunction getAutoPosition(): string {\n    let bestPosition = props.defaultPosition;\n    if (!props.trigger || !contentRef.value) return bestPosition;\n    if (!scrollingParent.value) return bestPosition;\n\n    // get viewport from container\n    const viewRect = new DOMRect(\n        scrollingParent.value.offsetLeft,\n        scrollingParent.value.offsetTop,\n        scrollingParent.value.clientWidth,\n        scrollingParent.value.clientHeight,\n    );\n\n    const contentRect = unrefElement(contentRef).getBoundingClientRect();\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\n\n    // detect auto position\n    const triggerAnchors = anchors(triggerRect);\n    const contentAnchors = anchors(contentRect);\n    const contentRectAtAnchor = (pos: Position) => {\n        const triggerAnchor = triggerAnchors[pos];\n        const contentAnchor = contentAnchors[opposites[pos]];\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\n        // That offset should be small, and it's tricky to get it from the CSS.\n        return new DOMRect(\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\n            contentRect.width,\n            contentRect.height,\n        );\n    };\n\n    const defaultOpposite = opposites[props.defaultPosition];\n    const crossPosition =\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\n            ? \"left\"\n            : \"top\";\n    const crossOpposite = opposites[crossPosition];\n    // In descending order of priority\n    const positions: Position[] = [\n        props.defaultPosition,\n        defaultOpposite,\n        crossPosition,\n        crossOpposite,\n    ];\n    let maxOverlap = 0;\n    for (const position of positions) {\n        const overlap = intersectionArea(\n            viewRect,\n            contentRectAtAnchor(position),\n        );\n        if (overlap > maxOverlap) {\n            maxOverlap = overlap;\n            bestPosition = position;\n        }\n    }\n    return bestPosition;\n}\n\n// --- Helper Functions ---\n\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\n    const left = Math.max(a.left, b.left);\n    const right = Math.min(a.right, b.right);\n    const top = Math.max(a.top, b.top);\n    const bottom = Math.min(a.bottom, b.bottom);\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\n}\n\n/**\n * @param rect the bounding rectangle of the trigger element\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\n */\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\n});\n</script>\n\n<template>\n    <Teleport :to=\"teleportTo\" :disabled=\"teleportDisabled\">\n        <template v-if=\"teleportDisabled\">\n            <slot :set-content=\"setContent\" />\n        </template>\n        <template v-else>\n            <div\n                v-bind=\"$attrs\"\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\n                <slot :set-content=\"setContent\" />\n            </div>\n        </template>\n    </Teleport>\n</template>\n", "const findFocusable = (element: any, programmatic = false) => {\n    if (!element) return null;\n    if (programmatic) return element.querySelectorAll(`*[tabindex=\"-1\"]`);\n\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                     area[href],\n                                     input:not([disabled]),\n                                     select:not([disabled]),\n                                     textarea:not([disabled]),\n                                     button:not([disabled]),\n                                     iframe,\n                                     object,\n                                     embed,\n                                     *[tabindex]:not([tabindex=\"-1\"]),\n                                     *[contenteditable]`);\n};\n\nlet onKeyDown: any;\n\nconst bind = (el: any, { value = true }) => {\n    if (value) {\n        let focusable = findFocusable(el);\n        let focusableProg = findFocusable(el, true);\n\n        if (focusable && focusable.length > 0) {\n            onKeyDown = (event: any) => {\n                // Need to get focusable each time since it can change between key events\n                // ex. changing month in a datepicker\n                focusable = findFocusable(el);\n                focusableProg = findFocusable(el, true);\n                const firstFocusable = focusable[0];\n                const lastFocusable = focusable[focusable.length - 1];\n\n                if (\n                    event.target === firstFocusable &&\n                    event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    lastFocusable.focus();\n                } else if (\n                    (event.target === lastFocusable ||\n                        Array.from(focusableProg).indexOf(event.target) >= 0) &&\n                    !event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    firstFocusable.focus();\n                }\n            };\n            el.addEventListener(\"keydown\", onKeyDown);\n        }\n    }\n};\n\nconst unbind = (el: any) => {\n    el.removeEventListener(\"keydown\", onKeyDown);\n};\n\nconst directive = {\n    beforeMount: bind,\n    beforeUnmount: unbind,\n};\n\nexport default directive;\n\nexport const vTrapFocus = directive; // export composition api directive\n", "import {\n    onBeforeUnmount,\n    onMounted,\n    type MaybeRefOrGetter,\n    type Component,\n} from \"vue\";\nimport { isObject } from \"@/utils/helpers\";\nimport { unrefElement } from \"./unrefElement\";\n\ntype EventTarget = Element | Document | Window | Component;\ntype EventListenerOptions = AddEventListenerOptions & {\n    /** Register event listener immediate or on mounted hook. */\n    immediate?: boolean;\n};\n\n/**\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\n *\n * @param event event name\n * @param listener event listener function\n * @param el default docuemnt\n * @return stop function\n */\nexport function useEventListener(\n    event: string,\n    listener: (evt?: any) => any,\n    el: MaybeRefOrGetter<EventTarget> = document,\n    options?: EventListenerOptions,\n): () => void {\n    let cleanup: () => void;\n\n    const register = (): void => {\n        if (!el) return;\n\n        const target = unrefElement(el);\n        // create a clone of options, to avoid it being changed reactively on removal\n        const optionsClone = isObject(options) ? { ...options } : options;\n        target.addEventListener(event, listener, optionsClone);\n        cleanup = (): void =>\n            target.removeEventListener(event, listener, optionsClone);\n    };\n\n    const stop = (): void => {\n        if (typeof cleanup === \"function\") cleanup();\n    };\n\n    if (options?.immediate) register();\n    else {\n        onMounted(() => register());\n        onBeforeUnmount(() => stop());\n    }\n\n    return stop;\n}\n", "import { getCurrentInstance, ref } from \"vue\";\nimport { getOption } from \"@/utils/config\";\nimport { useEventListener } from \"./useEventListener\";\nimport { isClient } from \"@/utils/ssr\";\n\n/**\n * Checks if the match media is mobile.\n * @param mobileBreakpoint px breakpoint\n */\nexport function useMatchMedia(mobileBreakpoint?: string) {\n    const isMobile = ref(false);\n    const mediaQuery = ref();\n\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useMatchMedia must be called within a component setup function.\",\n        );\n    // get component props\n    const props = vm.props;\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get mobileBreakpoint width value\n    let width = props.mobileBreakpoint;\n    if (!width) {\n        const defaultWidth = getOption(\n            `mobileBreakpoint`,\n            mobileBreakpoint || \"1023px\",\n        );\n\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\n    }\n\n    // define match media query ref\n    mediaQuery.value = isClient\n        ? window.matchMedia(`(max-width: ${width})`)\n        : undefined;\n\n    if (mediaQuery.value) {\n        isMobile.value = mediaQuery.value.matches;\n        useEventListener(\"change\", onMatchMedia, mediaQuery.value);\n    } else {\n        isMobile.value = false;\n    }\n\n    function onMatchMedia(event: any): void {\n        isMobile.value = event.matches;\n    }\n\n    return { isMobile };\n}\n", "import {\n    computed,\n    getCurrentInstance,\n    inject,\n    nextTick,\n    onUnmounted,\n    provide,\n    ref,\n    type Component,\n    type ComputedRef,\n    type Ref,\n    type UnwrapNestedRefs,\n} from \"vue\";\nimport { unrefElement } from \"./unrefElement\";\n\nexport type ProviderItem<T = unknown> = {\n    index: number;\n    data: ComputedRef<T>;\n    identifier: string;\n};\n\ntype PovidedData<P, I = unknown> = {\n    registerItem: (data: ComputedRef<I>) => ProviderItem<I>;\n    unregisterItem: (item: ProviderItem<I>) => void;\n    data?: ComputedRef<P>;\n};\n\ntype ProviderParentOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Additional data provided for the child to the item\n     */\n    data?: ComputedRef<T>;\n};\n\n/**\n * Provide functionalities and data to child components\n * @param rootRef Root element of the provider component\n * @param data Additional data to provide\n * @param options additional options\n */\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\n    rootRef?: Ref<HTMLElement | Component>,\n    options?: ProviderParentOptions<ParentData>,\n): {\n    childItems: Ref<UnwrapNestedRefs<ProviderItem<ItemData>[]>>;\n    sortedItems: ComputedRef<UnwrapNestedRefs<ProviderItem<ItemData>[]>>;\n} {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    const childItems = ref<ProviderItem<ItemData>[]>([]);\n    const sequence = ref(1);\n\n    /**\n     * When items are added/removed sort them according to their position\n     */\n    const sortedItems = computed(() =>\n        childItems.value.slice().sort((a, b) => a.index - b.index),\n    );\n\n    function registerItem(\n        data?: ComputedRef<ItemData>,\n    ): ProviderItem<ItemData> {\n        const index = childItems.value.length;\n        const identifier = nextSequence();\n        const item = { index, data, identifier };\n        childItems.value.push(item as UnwrapNestedRefs<typeof item>);\n        if (rootRef?.value) {\n            nextTick(() => {\n                const ids = childItems.value\n                    .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\n                    .join(\",\");\n                const parent = unrefElement(rootRef);\n                const children = parent.querySelectorAll(ids);\n                const sortedIds = Array.from(children).map((el) =>\n                    el.getAttribute(\"data-id\").replace(`${key}-`, \"\"),\n                );\n\n                childItems.value.forEach(\n                    (item) =>\n                        (item.index = sortedIds.indexOf(`${item.identifier}`)),\n                );\n            });\n        }\n        return item;\n    }\n\n    function unregisterItem(item: ProviderItem): void {\n        childItems.value = childItems.value.filter((i) => i !== item);\n    }\n\n    function nextSequence(): string {\n        return String(sequence.value++);\n    }\n\n    /** Provide functionality for child components via dependency injection. */\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\n        registerItem,\n        unregisterItem,\n        data: options?.data,\n    });\n\n    return {\n        childItems,\n        sortedItems,\n    };\n}\n\ntype ProviderChildOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Does the child need the be below the parent?\n     * @default true\n     */\n    needParent?: boolean;\n    /**\n     * Additional data appended to the item\n     */\n    data?: ComputedRef<T>;\n    /**\n     * Register child on parent\n     * @default true\n     */\n    register?: boolean;\n};\n\n/**\n * Inject functionalities and data from parent components\n * @param options additional options\n */\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: ProviderChildOptions<ItemData> = { needParent: true },\n): { parent: ComputedRef<ParentData>; item: Ref<ProviderItem<ItemData>> } {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key || configField;\n\n    /** Inject parent component functionality if used inside one **/\n    const parent = inject<PovidedData<ParentData, ItemData>>(\n        \"$o-\" + key,\n        undefined,\n    );\n\n    const needParent = options.needParent !== false;\n\n    const register = options.register !== false;\n\n    if (needParent && !parent) {\n        throw new Error(\n            `You should wrap ${vm.proxy.$options.name} in a ${key} component`,\n        );\n    }\n\n    const item = ref<ProviderItem<ItemData>>();\n\n    if (parent && register) item.value = parent.registerItem(options.data);\n\n    onUnmounted(() => {\n        if (parent && item.value) parent.unregisterItem(item.value);\n    });\n\n    return { parent: parent?.data, item: item };\n}\n", "import { type MaybeRefOrGetter } from \"vue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { unrefElement } from \"./unrefElement\";\n\n/**\n * Listen for clicks outside of an element.\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\n *\n * @param target Target element\n * @param handler Event handler\n * @param ignore Element to ignore\n * @return stop function\n */\nexport function useClickOutside(\n    target: MaybeRefOrGetter,\n    handler: (evt: PointerEvent) => void,\n    ignore: (MaybeRefOrGetter | string)[] = [],\n): () => void {\n    if (!window) return;\n\n    /**\n     * White-listed items that not emit event when clicked.\n     * All children from ignore prop.\n     */\n    const shouldIgnore = (event: PointerEvent): boolean => {\n        return ignore.some((target) => {\n            if (typeof target === \"string\") {\n                return Array.from(\n                    window.document.querySelectorAll(target),\n                ).some(\n                    (el) =>\n                        el === event.target ||\n                        event.composedPath().includes(el),\n                );\n            } else {\n                const el = unrefElement(target);\n                return (\n                    el &&\n                    (event.target === el || event.composedPath().includes(el))\n                );\n            }\n        });\n    };\n\n    const listener = (event: PointerEvent): void => {\n        const el = unrefElement(target);\n        if (!el || el === event.target || event.composedPath().includes(el))\n            return;\n        if (shouldIgnore(event)) return;\n        handler(event);\n    };\n\n    const stop = useEventListener(\"click\", listener, window, {\n        immediate: true,\n        passive: true,\n    });\n\n    return stop;\n}\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    onUnmounted,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { toCssDimension, isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useProviderParent,\n    useMatchMedia,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content\n * @displayName Dropdown\n * @requires ./DropdownItem.vue\n * @style _dropdown.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdown\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Trigger label, unnecessary when trgger slot is used */\n    label: { type: String, default: undefined },\n    /** Dropdown is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Dropdown content (items) are shown inline, trigger is removed */\n    inline: { type: Boolean, default: false },\n    /** Dropdown content will be scrollable */\n    scrollable: { type: Boolean, default: false },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"dropdown.maxHeight\", 200),\n    },\n    /**\n     * Position of the dropdown relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"dropdown.position\", \"bottom-left\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.mobileModal\", true),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"dropdown.animation\", \"fade\"),\n    },\n    /** Allows multiple selections */\n    multiple: { type: Boolean, default: false },\n    /** Trap focus inside the dropdown. */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.trapFocus\", true),\n    },\n    /** Makes the component check if menu reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.checkScroll\", false),\n    },\n    /** Dropdown will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** HTML element ID of the dropdown menu element */\n    menuId: { type: String, default: null },\n    /** Tabindex of the dropdown menu element */\n    menuTabindex: { type: Number, default: null },\n    /** Dropdown menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.menuTag\", \"div\"),\n    },\n    /** Dropdown trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"dropdown.triggerTag\", \"div\"),\n    },\n    /**\n     * Dropdown will be triggered by any events\n     * @values click, hover, contextmenu, focus\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"dropdown.triggers\", [\"click\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Dropdown delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Dropdown close options (pressing escape, clicking the content or outside)\n     * @values true, false, escape, outside, content\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"dropdown.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /** Set the tabindex attribute on the dropdown trigger div (-1 to prevent selection via tab key) */\n    tabindex: { type: Number, default: 0 },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, listbox, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.ariaRole\", \"list\"),\n        validator: (value: string) =>\n            [\"list\", \"listbox\", \"menu\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"dropdown.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when inline */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the overlay when on mobile */\n    menuMobileOverlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown menu */\n    menuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu position */\n    menuPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when active */\n    menuActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating position of dropdown */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating whether the dropdown is open */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when the dropdown is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {[String, Number, Boolean, Object, Array]} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: [string, number, boolean, object, Array<any>],\n    ): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on change event - fired after modelValue:update\n     * @param value {any} selected value\n     */\n    (e: \"change\", value: any): void;\n    /**\n     * on close event\n     * @param method {string} close method\n     */\n    (e: \"close\", method: string): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst vmodel = defineModel<any>();\n\nconst isActive = defineModel<boolean>(\"active\");\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n// check if mobile modal should be shown\nconst isMobileModal = computed(\n    () => isMobile.value && props.mobileModal && !props.inline,\n);\n\n// check if client is mobile native\nconst isMobileNative = computed(() => props.mobileModal && isMobileAgent.any());\n\nconst menuStyle = computed(() => ({\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\n    overflow: props.scrollable ? \"auto\" : null,\n}));\n\nconst hoverable = computed(() => props.triggers.indexOf(\"hover\") >= 0);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement | Component>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = [];\nlet timer: NodeJS.Timeout;\n\nwatch(\n    isActive,\n    (value) => {\n        // on active set event handler\n        if (value && isClient) {\n            setTimeout(() => {\n                if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                    // set outside handler\n                    eventCleanups.push(\n                        useClickOutside(contentRef, onClickedOutside, [\n                            triggerRef,\n                        ]),\n                    );\n                }\n\n                if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                    // set keyup handler\n                    eventCleanups.push(\n                        useEventListener(\"keyup\", onKeyPress, document, {\n                            immediate: true,\n                        }),\n                    );\n                }\n            });\n        } else if (!value) {\n            // on close cleanup event handler\n            eventCleanups.forEach((fn) => fn());\n            eventCleanups.length = 0;\n        }\n    },\n    { immediate: true },\n);\n\nonUnmounted(() => {\n    // on close cleanup event handler\n    eventCleanups.forEach((fn) => fn());\n    eventCleanups.length = 0;\n});\n\nconst cancelOptions = computed(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close dropdown if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.inline) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    emits(\"close\", \"outside\");\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        emits(\"close\", \"escape\");\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    toggle();\n}\n\nfunction onContextMenu(event: MouseEvent): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nconst isHovered = ref(false);\nfunction onHover(): void {\n    if (!isMobileNative.value && props.triggers.indexOf(\"hover\") >= 0) {\n        isHovered.value = true;\n        open();\n    }\n}\nfunction onHoverLeave(): void {\n    if (!isMobileNative.value && isHovered.value) {\n        isHovered.value = false;\n        onClose();\n    }\n}\n\n/** Toggle dropdown if it's not disabled. */\nfunction toggle(): void {\n    if (props.disabled) return;\n    if (isActive.value) isActive.value = !isActive.value;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    else nextTick(() => (isActive.value = !isActive.value));\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer = setTimeout(() => {\n            isActive.value = true;\n            timer = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    emits(\"close\", \"content\");\n    isActive.value = !props.closeable;\n    if (timer && props.closeable) clearTimeout(timer);\n}\n\n// --- InfitiveScroll Feature ---\n\nif (isClient && props.checkScroll)\n    useEventListener(\"scroll\", checkDropdownScroll, contentRef);\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = unrefElement(contentRef);\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= 0) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Dependency Injection Feature ---\n\n/**\n * Click listener from DropdownItem.\n *   1. Set new selected item.\n *   2. Emit input event to update the user v-model.\n *   3. Close the dropdown.\n */\nfunction selectItem(value: any): void {\n    if (props.multiple) {\n        if (vmodel.value && Array.isArray(vmodel.value)) {\n            if (vmodel.value.indexOf(value) === -1) {\n                // add a value\n                vmodel.value = [...vmodel.value, value];\n            } else {\n                // remove a value\n                vmodel.value = vmodel.value.filter((val) => val !== value);\n            }\n        } else {\n            // init new value array\n            vmodel.value = [value];\n        }\n        // emit change after vmodel has changed\n        nextTick(() => emits(\"change\", vmodel.value));\n    } else {\n        if (vmodel.value !== value) {\n            // update a single value\n            vmodel.value = value;\n            // emit change after vmodel has changed\n            nextTick(() => emits(\"change\", vmodel.value));\n        }\n    }\n    if (!props.multiple) {\n        if (cancelOptions.value.indexOf(\"content\") < 0) return;\n        emits(\"close\", \"content\");\n        isActive.value = false;\n        isHovered.value = false;\n    }\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<DropdownComponent>(() => ({\n    props,\n    selected: vmodel.value,\n    selectItem,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(contentRef, { data: provideData });\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-drop\"],\n    [\"disabledClass\", \"o-drop--disabled\", null, computed(() => props.disabled)],\n    [\"expandedClass\", \"o-drop--expanded\", null, computed(() => props.expanded)],\n    [\"inlineClass\", \"o-drop--inline\", null, computed(() => props.inline)],\n    [\n        \"mobileClass\",\n        \"o-drop--mobile\",\n        null,\n        computed(() => isMobileModal.value && !hoverable.value),\n    ],\n    [\n        \"positionClass\",\n        \"o-drop--position-\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"activeClass\",\n        \"o-drop--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n    [\"hoverableClass\", \"o-drop--hoverable\", null, hoverable],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-drop__trigger\"]);\n\nconst positionWrapperClasses = defineClasses([\n    \"teleportClass\",\n    \"o-drop--teleport\",\n    null,\n    computed(() => !!props.teleport),\n]);\n\nconst menuMobileOverlayClasses = defineClasses([\n    \"menuMobileOverlayClass\",\n    \"o-drop__overlay\",\n]);\n\nconst menuClasses = defineClasses(\n    [\"menuClass\", \"o-drop__menu\"],\n    [\n        \"menuPositionClass\",\n        \"o-drop__menu--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"menuActiveClass\",\n        \"o-drop__menu--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ $trigger: triggerRef, $content: contentRef });\n</script>\n\n<template>\n    <div\n        data-oruga=\"dropdown\"\n        :class=\"rootClasses\"\n        @mouseleave=\"onHoverLeave\"\n        @focusout=\"onHoverLeave\">\n        <component\n            :is=\"triggerTag\"\n            v-if=\"!inline\"\n            ref=\"triggerRef\"\n            :tabindex=\"disabled ? null : tabindex\"\n            :class=\"triggerClasses\"\n            :aria-haspopup=\"ariaRole === 'list' ? true : ariaRole\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\">\n            <!--\n                @slot Override the trigger element, default is label prop\n                @binding {boolean} active - dropdown active state\n            -->\n            <slot name=\"trigger\" :active=\"isActive\">\n                {{ label }}\n            </slot>\n        </component>\n\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"[...rootClasses, ...positionWrapperClasses]\"\n            :trigger=\"triggerRef\"\n            :disabled=\"!isActive\"\n            default-position=\"bottom\"\n            :disable-positioning=\"!isMobileModal\">\n            <transition :name=\"animation\">\n                <div\n                    v-if=\"isMobileModal\"\n                    v-show=\"isActive\"\n                    :tabindex=\"-1\"\n                    :class=\"menuMobileOverlayClasses\"\n                    :aria-hidden=\"disabled || !isActive\" />\n            </transition>\n\n            <transition :name=\"animation\">\n                <component\n                    :is=\"menuTag\"\n                    v-show=\"(!disabled && (isActive || isHovered)) || inline\"\n                    :id=\"menuId\"\n                    :ref=\"(el) => (contentRef = setContent(el))\"\n                    v-trap-focus=\"trapFocus\"\n                    :tabindex=\"menuTabindex\"\n                    :class=\"menuClasses\"\n                    :style=\"menuStyle\"\n                    :role=\"ariaRole\"\n                    :aria-hidden=\"disabled || !isActive\"\n                    :aria-modal=\"!inline && trapFocus\">\n                    <!--\n                        @slot Place dropdown items here\n                        @binding {boolean} active - dropdown active state\n                        @binding {boolean} toggle - toggle active state function\n                    -->\n                    <slot :active=\"isActive\" :toggle=\"toggle\" />\n                </component>\n            </transition>\n        </PositionWrapper>\n    </div>\n</template>\n", "<script setup lang=\"ts\" generic=\"T\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid, isEqual } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Dropdown Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdownItem\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** The value that will be returned on events and v-model - default is a uuid */\n    value: {\n        type: [String, Number, Boolean, Object, Array] as PropType<T>,\n        default: undefined, // () => uuid(),\n    },\n    /** Item label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Item is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Item is clickable and emit an event */\n    clickable: { type: Boolean, default: true },\n    /** Dropdown item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.itemTag\", \"div\"),\n    },\n    /** Set the tabindex attribute on the dropdown item div (-1 to prevent selection via tab key) */\n    tabindex: { type: [Number, String], default: 0 },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * Use menuitem only in situations where your dropdown is related to a navigation menu.\n     * @values listitem, menuitem, button\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.itemAriaRole\", \"listitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the dropdown item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when active  */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when disabled */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * onclick event\n     * @param value {[String, Number, Boolean, Object, Array]} value prop data\n     * @param event {event} Native Event\n     */\n    (e: \"click\", value: T, event: Event): void;\n}>();\n\nconst itemValue = computed(() => (props.value || uuid()) as T);\n\n// Inject functionalities and data from the parent component\nconst { parent } = useProviderChild<DropdownComponent<T>>();\n\nconst isClickable = computed(\n    () => !parent.value.props.disabled && !props.disabled && props.clickable,\n);\n\nconst isActive = computed(() => {\n    if (parent.value.selected === null) return false;\n    if (parent.value.props.multiple && Array.isArray(parent.value.selected))\n        return parent.value.selected.some((selected) =>\n            isEqual(itemValue.value, selected),\n        );\n    return isEqual(itemValue.value, parent.value.selected);\n});\n\n/** Click listener, select the item. */\nfunction selectItem(event: Event): void {\n    if (!isClickable.value) return;\n    parent.value.selectItem(itemValue.value);\n    emits(\"click\", itemValue.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"itemClass\", \"o-drop__item\"],\n    [\n        \"itemDisabledClass\",\n        \"o-drop__item--disabled\",\n        null,\n        computed(() => parent.value.props.disabled || props.disabled),\n    ],\n    [\"itemActiveClass\", \"o-drop__item--active\", null, isActive],\n    [\"itemClickableClass\", \"o-drop__item--clickable\", null, isClickable],\n);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        :class=\"rootClasses\"\n        :role=\"ariaRole\"\n        :tabindex=\"tabindex\"\n        data-oruga=\"dropdown-item\"\n        @click=\"selectItem\">\n        <!--\n            @slot Override the label, default is label prop \n        -->\n        <slot>{{ label }}</slot>\n    </component>\n</template>\n", "/**\n * Debounce a function\n * @param func function to debounce\n * @param wait debounce time to wait\n * @param immediate call immediate\n * @returns function to call\n */\nexport function useDebounce<A extends Array<unknown>>(\n    func: (...args: A) => void,\n    wait: number,\n    immediate?: boolean,\n): (...args: A) => void {\n    let timeout: NodeJS.Timeout;\n    return (...args: A) => {\n        const later = () => {\n            timeout = null;\n            if (!immediate) func.apply(this, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(this, args);\n    };\n}\n", "<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    watchEffect,\n    useAttrs,\n    toRaw,\n    onMounted,\n    useSlots,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport OInput from \"../input/Input.vue\";\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath, uuid } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useInputHandler,\n    useDebounce,\n    useEventListener,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent, ClassBind } from \"@/types\";\n\nenum SpecialOption {\n    Header,\n    Footer,\n}\n\n/** True if the specified option is a special option. */\nfunction isSpecialOption(option: any): option is SpecialOption {\n    return option in SpecialOption;\n}\n\n/**\n * Extended input that provide suggestions while the user types\n * @displayName Autocomplete\n * @style _autocomplete.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OAutocomplete\",\n    configField: \"autocomplete\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /** Input type */\n    type: { type: String, default: \"text\" },\n    /** Menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.menuTag\", \"div\"),\n    },\n    /** Menu item tag name */\n    itemTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.itemTag\", \"div\"),\n    },\n    /** Options / suggestions */\n    data: { type: Array as PropType<T[]>, default: () => [] },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"autocomplete.size\"),\n    },\n    /**\n     * Position of the dropdown\n     * @values auto, top, bottom\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"autocomplete.position\", \"auto\"),\n        validator: (value: string) =>\n            [\"auto\", \"top\", \"bottom\"].indexOf(value) >= 0,\n    },\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\n    field: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /** Function to format an option to a string for display in the input (as alternative to field prop) */\n    formatter: {\n        type: Function as PropType<(value: unknown) => string | number>,\n        default: undefined,\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [String, Number], default: undefined },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.checkScroll\", false),\n    },\n    /** Number of milliseconds to delay before to emit input event */\n    debounce: {\n        type: Number,\n        default: () => getOption(\"autocomplete.debounce\", 400),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepFirst\", false),\n    },\n    /** Clear input text on select */\n    clearOnSelect: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearOnSelect\", false),\n    },\n    /** Open dropdown list on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.openOnFocus\", false),\n    },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"autocomplete.maxHeight\"),\n    },\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\n    confirmKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"autocomplete.confirmKeys\", [\"Tab\", \"Enter\"]),\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.mobileModal\", false),\n    },\n    /** Transition name to apply on dropdown list */\n    animation: {\n        type: String,\n        default: () => getOption(\"autocomplete.animation\", \"fade\"),\n    },\n    /** Trigger the select event for the first pre-selected option when clicking outside and `keep-first` is enabled */\n    selectOnClickOutside: { type: Boolean, default: false },\n    /** Allows the header in the autocomplete to be selectable */\n    selectableHeader: { type: Boolean, default: false },\n    /** Allows the footer in the autocomplete to be selectable */\n    selectableFooter: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"autocomplete.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"autocomplete.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"autocomplete.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"autocomplete.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items on hover */\n    itemHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items group title */\n    itemGroupTitleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu empty placeholder item */\n    itemEmptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu header item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu footer item */\n    itemFooterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Classes to apply on internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"autocomplete.inputClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     */\n    (e: \"input\", value: string | number): void;\n    /**\n     * selected element changed event\n     * @param value {string | number | object} selected value\n     */\n    (e: \"select\", value: T, evt: Event): void;\n    /**\n     * header is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-header\", event: Event): void;\n    /**\n     * footer is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-footer\", event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst slots = useSlots();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst footerRef = ref<HTMLElement>();\nconst headerRef = ref<HTMLElement>();\nconst itemRefs = ref([]);\n\nfunction setItemRef(\n    el: HTMLElement | Component,\n    groupIndex: number,\n    itemIndex: number,\n): void {\n    if (groupIndex === 0 && itemIndex === 0) itemRefs.value.splice(0);\n    if (el) itemRefs.value.push(el);\n}\n\n// use form input functionalities\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst vmodel = defineModel<string | number>({ default: undefined });\n\nconst isActive = ref(false);\n\nconst selectedOption = ref<T>();\nconst hoveredOption = ref<T>();\nconst headerHovered = ref(false);\nconst footerHovered = ref(false);\n\nconst hoveredId = ref(null);\nconst menuId = uuid();\n\n/**\n * When updating input's value\n *   1. If value isn't the same as selected, set null\n *   2. Close dropdown if value is clear or else open it\n */\nwatch(\n    () => vmodel.value,\n    (value) => {\n        // Check if selected is invalid\n        const currentValue = getValue(selectedOption.value);\n        if (currentValue && currentValue !== value) setSelected(null, false);\n\n        nextTick(() => {\n            // Close dropdown if data is empty\n            if (isEmpty.value && !slots.empty) isActive.value = false;\n            // Close dropdown if input is clear or else open it\n            else if (isFocused.value && (!props.openOnFocus || value))\n                isActive.value = !!value;\n        });\n    },\n);\n\n/** Select first option if \"keep-first\" */\nwatch(\n    () => props.data,\n    () => {\n        // Keep first option always pre-selected\n        if (props.keepFirst) {\n            nextTick(() => {\n                if (isActive.value) selectFirstOption();\n                else setHovered(null);\n            });\n        } else if (hoveredOption.value) {\n            // reset hovered if list doesn't contain it\n            const hoveredValue = getValue(hoveredOption.value);\n            const data = computedData.value\n                .map((d) => d.items)\n                .reduce((a, b) => [...a, ...b], []);\n            const index = data.findIndex((d) => getValue(d) === hoveredValue);\n            if (index >= 0) nextTick(() => setHoveredIdToIndex(index));\n            else setHovered(null);\n        }\n    },\n);\n\nconst computedData = computed<{ items: any; group?: any }[]>(() => {\n    if (props.groupField) {\n        if (props.groupOptions)\n            return props.data.map((option) => {\n                const group = getValueByPath(option, props.groupField);\n                const items = getValueByPath(option, props.groupOptions);\n                return { group, items };\n            });\n        else\n            return Object.keys(props.data).map((group) => ({\n                group,\n                items: props.data[group],\n            }));\n    }\n    // Return no data to avoid the full list to be shown when clearing input\n    if (!props.openOnFocus && !props.keepOpen && vmodel.value === \"\") {\n        // ...already returned nothing and dropdown closed.\n        return [{ items: [] }];\n    }\n    return [{ items: props.data }];\n});\n\nconst isEmpty = computed(\n    () =>\n        !computedData.value?.some(\n            (element) => element.items && element.items.length,\n        ),\n);\n\nwatch(isEmpty, (empty) => {\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\n});\n\nconst closeableOptions = computed(() => {\n    const options = [\"escape\"];\n    if (!props.keepOpen) {\n        options.push(\"content\");\n        options.push(\"outside\");\n    }\n    return options;\n});\n\nfunction onDropdownClose(method: string): void {\n    if (method === \"outside\") {\n        if (\n            props.keepFirst &&\n            hoveredOption.value &&\n            props.selectOnClickOutside\n        )\n            setSelected(hoveredOption.value, true);\n    }\n}\n\n/**\n * Return display text for a input option.\n * If object, get value from path based on given field, or else just the value.\n * Apply a formatter function to the label if given.\n */\nfunction getValue(option: T): string {\n    if (!option) return \"\";\n\n    const property =\n        props.field && typeof option === \"object\"\n            ? getValueByPath(option, props.field)\n            : option;\n\n    const label =\n        typeof props.formatter === \"function\"\n            ? props.formatter(property)\n            : property;\n\n    return label || \"\";\n}\n\n/** Set which option is currently hovered. */\nfunction setHovered(option: T | SpecialOption): void {\n    if (option === undefined) return;\n    hoveredOption.value = isSpecialOption(option) ? null : option;\n    headerHovered.value = option === SpecialOption.Header;\n    footerHovered.value = option === SpecialOption.Footer;\n    hoveredId.value = null;\n}\n\n/** Set which option is the aria-activedescendant by index. */\nfunction setHoveredIdToIndex(index: number): void {\n    const element = unrefElement(itemRefs.value[index]);\n    hoveredId.value = element ? element.id : null;\n}\n\n/**\n * Set which option is currently selected, update v-model,\n * update input value and close dropdown.\n */\nfunction setSelected(option: T, closeDropdown = true, event = undefined): void {\n    if (option === undefined) return;\n    selectedOption.value = option;\n    emits(\"select\", selectedOption.value, event);\n    if (selectedOption.value !== null) {\n        if (props.clearOnSelect) {\n            const input = inputRef.value.$el.querySelector(\"input\");\n            input.value = \"\";\n        } else {\n            vmodel.value = getValue(selectedOption.value);\n        }\n        setHovered(null);\n    }\n    if (closeDropdown) nextTick(() => (isActive.value = false));\n    checkHtml5Validity();\n}\n\n/** Select first option */\nfunction selectFirstOption(): void {\n    nextTick(() => {\n        const nonEmptyElements = computedData.value.filter(\n            (element) => element.items && element.items.length,\n        );\n        if (nonEmptyElements.length) {\n            const option = nonEmptyElements[0].items[0];\n            setHovered(option);\n            setHoveredIdToIndex(0);\n        } else {\n            setHovered(null);\n        }\n    });\n}\n\n/** Check if header or footer was selected. */\nfunction selectHeaderOrFooterByClick(\n    event: Event,\n    origin?: SpecialOption,\n    closeDropdown = true,\n): void {\n    if (\n        props.selectableHeader &&\n        (headerHovered.value || origin === SpecialOption.Header)\n    ) {\n        emits(\"select-header\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n    if (\n        props.selectableFooter &&\n        (footerHovered.value || origin === SpecialOption.Footer)\n    ) {\n        emits(\"select-footer\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n}\n\n// --- Event Handler ---\n\n/**\n * Arrows keys listener.\n * If dropdown is active, set hovered option, or else just open.\n */\nfunction navigateItem(direction: 1 | -1): void {\n    if (!isActive.value) {\n        isActive.value = true;\n        return;\n    }\n\n    const data = computedData.value\n        .map((d) => d.items)\n        .reduce((a, b) => [...a, ...b], []);\n\n    // add header / footer if selectable\n    if (headerRef.value && props.selectableHeader) data.unshift(undefined);\n    if (footerRef.value && props.selectableFooter) data.push(undefined);\n\n    // define current index\n    let index = data.map(toRaw).indexOf(toRaw(hoveredOption.value));\n    if (headerHovered.value) index = 0 + direction;\n    else if (footerHovered.value) index = data.length - 1 + direction;\n    else index = index + direction;\n\n    // check if index overflow\n    index = index > data.length - 1 ? data.length - 1 : index;\n    // check if index underflow\n    index = index < 0 ? 0 : index;\n\n    // set hover state\n    if (footerRef.value && props.selectableFooter && index === data.length - 1)\n        setHovered(SpecialOption.Footer);\n    else if (headerRef.value && props.selectableHeader && index === 0)\n        setHovered(SpecialOption.Header);\n    else setHovered(data[index] !== undefined ? data[index] : null);\n\n    // get items from input\n    let items = itemRefs.value || [];\n    if (headerRef.value && props.selectableHeader)\n        items = [headerRef.value, ...items];\n    if (footerRef.value && props.selectableFooter)\n        items = [...items, footerRef.value];\n\n    const element = unrefElement(items[index]);\n    if (!element) return;\n\n    // set aria-activedescendant\n    hoveredId.value = element.id;\n\n    // define scroll position\n    const dropdownMenu = unrefElement(dropdownRef.value.$content);\n    const visMin = dropdownMenu.scrollTop;\n    const visMax =\n        dropdownMenu.scrollTop +\n        dropdownMenu.clientHeight -\n        element.clientHeight;\n\n    if (element.offsetTop < visMin) {\n        // is scolled top\n        dropdownMenu.scrollTop = element.offsetTop;\n    } else if (element.offsetTop >= visMax) {\n        // is scolled bottom\n        dropdownMenu.scrollTop =\n            element.offsetTop -\n            dropdownMenu.clientHeight +\n            element.clientHeight;\n    }\n    // trigger scroll\n    if (props.checkScroll) checkDropdownScroll();\n}\n\n/**\n * Key listener.\n * Select the hovered option.\n */\nfunction onKeydown(event: KeyboardEvent): void {\n    // prevent emit submit event\n    if (event.key === \"Enter\") event.preventDefault();\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // If adding by comma, don't add the comma to the input\n        if (event.key === \",\") event.preventDefault();\n        // Close dropdown on select by Tab\n        const closeDropdown = !props.keepOpen || event.key === \"Tab\";\n        if (hoveredOption.value === null) {\n            // header and footer uses headerHovered && footerHovered. If header or footer\n            // was selected then fire event otherwise just return so a value isn't selected\n            selectHeaderOrFooterByClick(event, null, closeDropdown);\n            return;\n        }\n        setSelected(hoveredOption.value, closeDropdown, event);\n    }\n}\n\n/**\n * Focus listener.\n * If value is the same as selected, select all text.\n */\nfunction handleFocus(event: Event): void {\n    if (getValue(selectedOption.value) === vmodel.value) {\n        inputRef.value.$el.querySelector(\"input\").select();\n    }\n    if (props.openOnFocus) {\n        isActive.value = true;\n        if (props.keepFirst)\n            // If open on focus, update the hovered\n            selectFirstOption();\n    }\n    onFocus(event);\n}\n\n/**\n * Blur listener.\n * Close on blur.\n */\nfunction handleBlur(event: Event): void {\n    onBlur(event);\n}\n\n/** emit input change event */\nfunction onInput(value: string | number): void {\n    const currentValue = getValue(selectedOption.value);\n    if (currentValue && currentValue === vmodel.value) return;\n    debouncedInput(value);\n}\n\nlet debouncedInput = useDebounce(emitInput, props.debounce || 0);\n\nwatchEffect(() => {\n    debouncedInput = useDebounce(emitInput, props.debounce);\n});\n\nfunction emitInput(value: string | number): void {\n    emits(\"input\", value);\n    checkHtml5Validity();\n}\n\n// --- Icon Feature ---\n\nconst computedIconRight = computed(() =>\n    props.clearable && vmodel.value && props.clearIcon\n        ? props.clearIcon\n        : props.iconRight,\n);\n\nconst computedIconRightClickable = computed(() =>\n    props.clearable ? true : props.iconRightClickable,\n);\n\nfunction rightIconClick(event: Event): void {\n    if (props.clearable) {\n        vmodel.value = \"\";\n        setSelected(null, false);\n        if (props.openOnFocus) setFocus();\n    } else emits(\"icon-right-click\", event);\n}\n\n// --- InfitiveScroll Feature ---\n\nonMounted(() => {\n    if (isClient && props.checkScroll)\n        useEventListener(\n            \"scroll\",\n            checkDropdownScroll,\n            dropdownRef.value.$content,\n            { immediate: true },\n        );\n});\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = unrefElement(dropdownRef.value.$content);\n    if (!dropdown) return;\n    const trashhold = dropdown.offsetTop;\n    const headerHeight = headerRef.value?.clientHeight || 0;\n    const footerHeight = (footerRef.value?.clientHeight || 0) + trashhold;\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight + footerHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= headerHeight) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...props.inputClasses,\n}));\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-acp\"]);\n\nconst itemClasses = defineClasses([\"itemClass\", \"o-acp__item\"]);\n\nconst itemEmptyClasses = defineClasses([\n    \"itemEmptyClass\",\n    \"o-acp__item--empty\",\n]);\n\nconst itemGroupClasses = defineClasses([\n    \"itemGroupTitleClass\",\n    \"o-acp__item-group-title\",\n]);\n\nconst itemHeaderClasses = defineClasses(\n    [\"itemHeaderClass\", \"o-acp__item-header\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, headerHovered],\n);\n\nconst itemFooterClasses = defineClasses(\n    [\"itemFooterClass\", \"o-acp__item-footer\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, footerHovered],\n);\n\nfunction itemOptionClasses(option): ClassBind[] {\n    const optionClasses = defineClasses([\n        \"itemHoverClass\",\n        \"o-acp__item--hover\",\n        null,\n        toRaw(option) === toRaw(hoveredOption.value),\n    ]);\n\n    return [...itemClasses.value, ...optionClasses.value];\n}\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-dropdown\n        ref=\"dropdownRef\"\n        v-model=\"selectedOption\"\n        v-model:active=\"isActive\"\n        data-oruga=\"autocomplete\"\n        :class=\"rootClasses\"\n        :menu-id=\"menuId\"\n        :menu-tabindex=\"-1\"\n        :menu-tag=\"menuTag\"\n        scrollable\n        aria-role=\"listbox\"\n        :tabindex=\"-1\"\n        :trap-focus=\"false\"\n        :triggers=\"[]\"\n        :disabled=\"disabled\"\n        :closeable=\"closeableOptions\"\n        :mobile-modal=\"mobileModal\"\n        :max-height=\"maxHeight\"\n        :animation=\"animation\"\n        :position=\"position\"\n        :teleport=\"teleport\"\n        :expanded=\"expanded\"\n        @close=\"onDropdownClose\">\n        <template #trigger>\n            <o-input\n                ref=\"inputRef\"\n                v-bind=\"inputBind\"\n                v-model=\"vmodel\"\n                :type=\"type\"\n                :size=\"size\"\n                :rounded=\"rounded\"\n                :icon=\"icon\"\n                :icon-right=\"computedIconRight\"\n                :icon-right-clickable=\"computedIconRightClickable\"\n                :icon-pack=\"iconPack\"\n                :placeholder=\"placeholder\"\n                :maxlength=\"maxlength\"\n                :autocomplete=\"autocomplete\"\n                :use-html5-validation=\"false\"\n                role=\"combobox\"\n                :aria-activedescendant=\"hoveredId\"\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\n                :aria-controls=\"menuId\"\n                :aria-expanded=\"isActive\"\n                :expanded=\"expanded\"\n                :disabled=\"disabled\"\n                :status-icon=\"statusIcon\"\n                @update:model-value=\"onInput\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @keydown.up.prevent=\"navigateItem(-1)\"\n                @keydown.down.prevent=\"navigateItem(1)\"\n                @icon-click=\"(event) => $emit('icon-click', event)\"\n                @icon-right-click=\"rightIconClick\" />\n        </template>\n\n        <o-dropdown-item\n            v-if=\"$slots.header\"\n            :id=\"`${menuId}-header`\"\n            ref=\"headerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"headerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemHeaderClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Header)\n            \">\n            <!--\n                @slot Define an additional header\n            -->\n            <slot name=\"header\" />\n        </o-dropdown-item>\n\n        <template v-for=\"(element, groupindex) in computedData\">\n            <o-dropdown-item\n                v-if=\"element.group\"\n                :key=\"groupindex + 'group'\"\n                :tag=\"itemTag\"\n                :tabindex=\"-1\"\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\n                <!--\n                    @slot Override the option grpup\n                    @binding {object} group - options group\n                    @binding {number} index - option index\n                -->\n                <slot\n                    v-if=\"$slots.group\"\n                    name=\"group\"\n                    :group=\"element.group\"\n                    :index=\"groupindex\" />\n                <span v-else>\n                    {{ element.group }}\n                </span>\n            </o-dropdown-item>\n\n            <o-dropdown-item\n                v-for=\"(option, index) in element.items\"\n                :id=\"`${menuId}-${groupindex}-${index}`\"\n                :key=\"groupindex + ':' + index\"\n                :ref=\"(el) => setItemRef(el, groupindex, index)\"\n                :value=\"option\"\n                :tag=\"itemTag\"\n                :class=\"itemOptionClasses(option)\"\n                aria-role=\"option\"\n                :aria-selected=\"toRaw(option) === toRaw(hoveredOption)\"\n                :tabindex=\"-1\"\n                @click=\"\n                    (value, event) => setSelected(value as T, !keepOpen, event)\n                \">\n                <!--\n                    @slot Override the select option\n                    @binding {object} option - option object\n                    @binding {number} index - option index\n                    @binding {unknown} value - option value\n                -->\n                <slot\n                    v-if=\"$slots.default\"\n                    :option=\"option\"\n                    :value=\"getValue(option)\"\n                    :index=\"index\" />\n                <span v-else>\n                    {{ getValue(option) }}\n                </span>\n            </o-dropdown-item>\n        </template>\n\n        <o-dropdown-item\n            v-if=\"isEmpty && $slots.empty\"\n            :tag=\"itemTag\"\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\n            <!--\n                @slot Define content for empty state\n            -->\n            <slot name=\"empty\" />\n        </o-dropdown-item>\n\n        <o-dropdown-item\n            v-if=\"$slots.footer\"\n            :id=\"`${menuId}-footer`\"\n            ref=\"footerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"footerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemFooterClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Footer)\n            \">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </o-dropdown-item>\n    </o-dropdown>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Autocomplete from \"./Autocomplete.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export autocomplete plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Autocomplete);\n    },\n} as Plugin;\n\n/** export autocomplete components */\nexport { Autocomplete as OAutocomplete };\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * The classic button, in different colors, sizes, and states\n * @displayName Button\n * @style _button.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OButton\",\n    configField: \"button\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Button tag name\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\n     */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\n    },\n    /**\n     * Color variant of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"button.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"button.size\"),\n    },\n    /** Button label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n\n    iconPack: {\n        type: String,\n        default: () => getOption(\"button.iconPack\", undefined),\n    },\n    /** Icon name to show on the left */\n    iconLeft: { type: String, default: undefined },\n    /** Icon name to show on the right */\n    iconRight: { type: String, default: undefined },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"button.rounded\", false),\n    },\n    /** Button will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Button will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Enable outlined style */\n    outlined: { type: Boolean, default: false },\n    /** Enable loading style */\n    loading: { type: Boolean, default: false },\n    /** Enable inverted style */\n    inverted: { type: Boolean, default: false },\n    /** Button type, like native */\n    nativeType: {\n        type: String,\n        default: \"button\",\n        validator: (value: string) =>\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\n    },\n    /** Accessibility Role attribute to be passed to the button. */\n    role: {\n        type: String,\n        default: () => getOption(\"button.role\", \"button\"),\n    },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    iconBoth: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button elements wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when outlined */\n    outlinedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button with loading */\n    loadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when inverted */\n    invertedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the left */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the right */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst computedTag = computed(() =>\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\n        ? \"button\"\n        : props.tag,\n);\n\nconst computedNativeType = computed(() =>\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\n);\n\nconst computedDisabled = computed(() => (props.disabled ? true : null));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-btn\"],\n    [\n        \"sizeClass\",\n        \"o-btn--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-btn--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined\",\n        null,\n        computed(() => props.outlined && !props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted\",\n        null,\n        computed(() => props.inverted && !props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined-\",\n        computed(() => props.variant),\n        computed(() => props.outlined && !!props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted-\",\n        computed(() => props.variant),\n        computed(() => props.inverted && !!props.variant),\n    ],\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\n</script>\n\n<template>\n    <component\n        :is=\"computedTag\"\n        :disabled=\"computedDisabled\"\n        :type=\"computedNativeType\"\n        :class=\"rootClasses\"\n        :role=\"role\"\n        data-oruga=\"button\">\n        <span :class=\"wrapperClasses\">\n            <o-icon\n                v-if=\"iconLeft\"\n                :pack=\"iconPack\"\n                :icon=\"iconLeft\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label, default is label prop \n                -->\n                <slot>{{ label }}</slot>\n            </span>\n            <o-icon\n                v-if=\"iconRight\"\n                :pack=\"iconPack\"\n                :icon=\"iconRight\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\n        </span>\n    </component>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Button from \"./Button.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export button plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Button);\n    },\n} as Plugin;\n\n/** export button components */\nexport { Button as OButton };\n", "import {\n    computed,\n    ref,\n    watch,\n    nextTick,\n    type ExtractPropTypes,\n    type WritableComputedRef,\n    type Ref,\n    type UnwrapRef,\n    type ComponentObjectPropsOptions,\n} from \"vue\";\n\n/**\n * Adaption of {@link https://vueuse.org/core/useVModel/} options.\n */\nexport interface PropBindingOptions<Passive extends boolean = false> {\n    /**\n     * When passive is set to `true`, it will use `watch` to sync with props and ref.\n     * Instead of relying on the `v-model` or `.sync` to work.\n     *\n     * @default false\n     */\n    passive?: Passive;\n    /**\n     * When eventName is set, it's value will be used to overwrite the emit event name.\n     *\n     * @default undefined\n     */\n    eventName?: string;\n    /**\n     * Attempting to check for changes of properties in a deeply nested object or array.\n     * Apply only when `passive` option is set to `true`\n     *\n     * @default false\n     */\n    deep?: boolean;\n}\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way model binding in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param name Property name\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function usePropBinding<T, Passive extends boolean>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<Passive>,\n): Ref<UnwrapRef<T>> | WritableComputedRef<T> {\n    const event = options?.eventName || `update:${name!.toString()}`;\n\n    if (options?.passive) {\n        const proxy = ref<T>(props[name!]);\n        let isUpdating = false;\n\n        watch(\n            () => props[name!],\n            (value) => {\n                if (!isUpdating) {\n                    isUpdating = true;\n                    proxy.value = value;\n                    nextTick(() => (isUpdating = false));\n                }\n            },\n        );\n\n        watch(\n            proxy,\n            (value) => {\n                if ((!isUpdating && value !== props[name!]) || options.deep)\n                    emit(event, value as T);\n            },\n            { deep: options.deep },\n        );\n\n        return proxy;\n    } else {\n        return computed<T>({\n            get() {\n                return props[name!] as T;\n            },\n            set(value) {\n                emit(event, value);\n            },\n        });\n    }\n}\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way binded modelValue property in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function useVModelBinding<T, Options extends PropBindingOptions>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: Options,\n): WritableComputedRef<T> | Ref<UnwrapRef<T>> {\n    return usePropBinding(\"modelValue\", props, emit, options);\n}\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    onBeforeUnmount,\n    onMounted,\n    ref,\n    nextTick,\n    readonly,\n    toRaw,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useEventListener,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * A Slideshow for cycling images in confined spaces\n * @displayName Carousel\n * @requires ./CarouselItem.vue\n * @style _carousel.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarousel\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Number, default: 0 },\n    /** Enable drag mode */\n    dragable: { type: Boolean, default: true },\n    /** Timer interval for `autoplay` */\n    interval: {\n        type: Number,\n        default: () => getOption(\"carousel.interval\", 3500),\n    },\n    /** Move item automaticalls after `interval` */\n    autoplay: { type: Boolean, default: false },\n    /** Pause autoplay on hover */\n    pauseHover: { type: Boolean, default: false },\n    /** Repeat from the beginning after reaching the end */\n    repeat: { type: Boolean, default: false },\n    /** Show an overlay */\n    overlay: { type: Boolean, default: false },\n    /** Enable indicators */\n    indicators: { type: Boolean, default: true },\n    /** Place indicators inside the carousel */\n    indicatorInside: { type: Boolean, default: false },\n    /**\n     * Indicator interaction mode\n     * @values click, hover\n     */\n    indicatorMode: {\n        type: String,\n        default: \"click\",\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\n    },\n    /** Position of the indicator - depends on used theme */\n    indicatorPosition: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\n    },\n    /** Style of the indicator - depends on used theme */\n    indicatorStyle: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\n    },\n    /** Number of items to show at once*/\n    itemsToShow: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToShow\", 1),\n    },\n    /** Number of items to switch at once */\n    itemsToList: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToList\", 1),\n    },\n    /** Show next / prev arrows */\n    arrows: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrows\", true),\n    },\n    /** Show next / prev arrows only on hover */\n    arrowsHover: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrowsHover\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"carousel.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"carousel.iconSize\"),\n    },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\n    },\n    /** Define these props for different screen sizes */\n    breakpoints: {\n        type: Object as PropType<Record<number, any>>,\n        default: () => ({}),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element in overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element of carousel items */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items */\n    itemsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items on drag */\n    itemsDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of arrow elements */\n    arrowIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of prev arrow element */\n    arrowIconPrevClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of next arrow element */\n    arrowIconNextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator link element */\n    indicatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element */\n    indicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside */\n    indicatorsInsideClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside and position */\n    indicatorsInsidePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator item element */\n    indicatorItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element when is active */\n    indicatorItemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element to separate different styles */\n    indicatorItemStyleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number): void;\n    /**\n     * on carousel scroll event\n     * @param value {number} scroll index\n     */\n    (e: \"scroll\", value: number): void;\n    /**\n     * on item click event\n     * @param event {event} native event\n     */\n    (e: \"click\", event: Event): void;\n}>();\n\nconst rootRef = ref();\n\nfunction restartTimer(): void {\n    pauseTimer();\n    startTimer();\n}\n\nconst provideData = computed<CarouselComponent>(() => ({\n    restartTimer,\n    itemWidth: itemWidth.value,\n    activeIndex: scrollIndex.value,\n    onClick: (event: Event): void => emits(\"click\", event),\n    setActive: (index: number): void => switchTo(index),\n}));\n\n/** Provide functionalities and data to child item components */\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\n\nconst activeIndex = useVModelBinding<number>(props, emits);\nconst scrollIndex = ref(props.modelValue);\n\nconst resizeObserver = ref(null);\nconst windowWidth = ref(0);\n\nconst refresh_ = ref(0);\n\n/** When v-model is changed switch to the new active item. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value <= childItems.value.length - 1)\n            switchTo(value * settings.value.itemsToList, true);\n    },\n);\n\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\n\nonMounted(() => {\n    if (isClient) {\n        if (window.ResizeObserver) {\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\n            resizeObserver.value.observe(rootRef.value);\n        }\n        onResized();\n        startTimer();\n    }\n});\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\n        dragEnd();\n        pauseTimer();\n    }\n});\n\n// add dom event handler\nif (isClient) {\n    useEventListener(\"resize\", onResized, window);\n    useEventListener(\"animationend\", onRefresh);\n    useEventListener(\"transitionend\", onRefresh);\n    useEventListener(\"transitionstart\", onRefresh);\n}\n\nfunction onResized(): void {\n    windowWidth.value = window.innerWidth;\n}\n\nfunction onRefresh(): void {\n    nextTick(() => refresh_.value++);\n}\n\nconst settings = computed<typeof props>(() => {\n    const breakpoints = Object.keys(props.breakpoints)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n    const breakpoint = breakpoints.filter(\n        (breakpoint) => windowWidth.value >= breakpoint,\n    )[0];\n\n    const settings = toRaw(\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\n    );\n\n    // prevent empty values\n    if (!settings.itemsToList) settings.itemsToList = 1;\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\n    return readonly(settings);\n});\n\nconst itemWidth = computed(() => {\n    // Ensure component is mounted\n    if (!windowWidth.value) return 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\n\n    const rect = rootRef.value.getBoundingClientRect();\n    return rect.width / settings.value.itemsToShow;\n});\n\nconst translation = computed(\n    () =>\n        -bound(\n            delta.value + scrollIndex.value * itemWidth.value,\n            0,\n            (childItems.value.length - settings.value.itemsToShow) *\n                itemWidth.value,\n        ),\n);\n\nconst total = computed(() => childItems.value.length);\n\nconst indicatorCount = computed(() =>\n    Math.ceil(total.value / settings.value.itemsToList),\n);\n\nconst indicatorIndex = computed(() =>\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\n);\n\nconst hasArrows = computed(\n    () =>\n        (settings.value.arrowsHover && isHovered.value) ||\n        !settings.value.arrowsHover,\n);\n\nconst hasPrev = computed(\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\n);\n\nfunction onPrev(): void {\n    switchTo(scrollIndex.value - settings.value.itemsToList);\n}\n\nconst hasNext = computed(\n    () =>\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\n        hasArrows.value,\n);\n\nfunction onNext(): void {\n    switchTo(scrollIndex.value + settings.value.itemsToList);\n}\n\nfunction switchTo(index: number, onlyMove?: boolean): void {\n    if (settings.value.repeat) index = mod(index, total.value);\n\n    index = bound(index, 0, total.value);\n    scrollIndex.value = index;\n    emits(\"scroll\", indicatorIndex.value);\n\n    if (!onlyMove)\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\n}\n\nfunction onModeChange(trigger: string, index: number): void {\n    if (props.indicatorMode === trigger)\n        switchTo(index * settings.value.itemsToList);\n}\n\n// --- Autoplay Feature ---\n\nconst isHovered = ref(false);\nconst isPaused = ref(false);\nconst timer = ref(null);\n\nfunction onMouseEnter(): void {\n    isHovered.value = true;\n    checkPause();\n}\n\nfunction onMouseLeave(): void {\n    isHovered.value = false;\n    startTimer();\n}\n\n/** When autoplay is changed, start or pause timer accordingly */\nwatch(\n    () => props.autoplay,\n    (status) => {\n        if (status) startTimer();\n        else pauseTimer();\n    },\n);\n\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\nwatch(\n    () => props.repeat,\n    (status) => {\n        if (status) startTimer();\n    },\n);\n\nfunction startTimer(): void {\n    if (!props.autoplay || timer.value) return;\n    isPaused.value = false;\n    timer.value = setInterval(() => {\n        if (!props.repeat && !hasNext.value) pauseTimer();\n        else onNext();\n    }, props.interval);\n}\n\nfunction pauseTimer(): void {\n    isPaused.value = true;\n    if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n    }\n}\n\nfunction checkPause(): void {\n    if (props.pauseHover && props.autoplay) pauseTimer();\n}\n\n// --- Drag & Drop Feature ---\n\nconst isTouch = ref(false);\nconst dragX = ref();\nconst hold = ref(0);\nconst delta = ref(0);\n\nconst isDragging = computed(() => isDefined(dragX.value));\n\n/** handle drag event */\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\n    if (\n        isDragging.value ||\n        !settings.value.dragable ||\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\n    )\n        return;\n    hold.value = Date.now();\n    isTouch.value = !!(event as TouchEvent).touches;\n    dragX.value = isTouch.value\n        ? (event as TouchEvent).touches[0].clientX\n        : (event as MouseEvent).clientX;\n    if (isTouch.value) {\n        pauseTimer();\n    }\n    if (isClient) {\n        window.addEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.addEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\nfunction dragMove(event: TouchEvent | MouseEvent): void {\n    if (!isDragging.value) return;\n    const dragEndX = (event as TouchEvent).touches\n        ? (\n              (event as TouchEvent).changedTouches[0] ||\n              (event as TouchEvent).touches[0]\n          ).clientX\n        : (event as MouseEvent).clientX;\n    delta.value = dragX.value - dragEndX;\n    // prevent event if not touch event\n    if (!(event as TouchEvent).touches) event.preventDefault();\n}\n\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\n    if (!isDragging.value && !hold.value) return;\n    if (hold.value) {\n        const signCheck = sign(delta.value);\n        const results = Math.round(\n            Math.abs(delta.value / itemWidth.value) + 0.15,\n        ); // Hack\n        switchTo(scrollIndex.value + signCheck * results);\n    }\n    delta.value = 0;\n    dragX.value = undefined;\n    if ((event as TouchEvent)?.touches) startTimer();\n\n    if (isClient) {\n        window.removeEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.removeEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-car\"],\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\n\nconst itemsClasses = defineClasses(\n    [\"itemsClass\", \"o-car__items\"],\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\n);\n\nconst arrowIconClasses = defineClasses([\n    \"arrowIconClass\",\n    \"o-car__arrow__icon\",\n]);\n\nconst arrowIconPrevClasses = defineClasses([\n    \"arrowIconPrevClass\",\n    \"o-car__arrow__icon-prev\",\n]);\n\nconst arrowIconNextClasses = defineClasses([\n    \"arrowIconNextClass\",\n    \"o-car__arrow__icon-next\",\n]);\n\nfunction indicatorItemClasses(index): ClassBind[] {\n    return defineClasses(\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\n        [\n            \"indicatorItemActiveClass\",\n            \"o-car__indicator__item--active\",\n            null,\n            indicatorIndex.value === index,\n        ],\n        [\n            \"indicatorItemStyleClass\",\n            \"o-car__indicator__item--\",\n            props.indicatorStyle,\n            !!props.indicatorStyle,\n        ],\n    ).value;\n}\n\nconst indicatorsClasses = defineClasses(\n    [\"indicatorsClass\", \"o-car__indicators\"],\n    [\n        \"indicatorsInsideClass\",\n        \"o-car__indicators--inside\",\n        null,\n        computed(() => !!props.indicatorInside),\n    ],\n    [\n        \"indicatorsInsidePositionClass\",\n        \"o-car__indicators--inside--\",\n        computed(() => props.indicatorPosition),\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\n    ],\n);\n\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\n</script>\n\n<template>\n    <div\n        ref=\"rootRef\"\n        :class=\"rootClasses\"\n        data-oruga=\"carousel\"\n        role=\"region\"\n        @mouseover=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @focus=\"onMouseEnter\"\n        @blur=\"onMouseLeave\"\n        @keydown.left=\"onPrev\"\n        @keydown.right=\"onNext\">\n        <div :class=\"wrapperClasses\">\n            <div\n                :class=\"itemsClasses\"\n                :style=\"'transform:translateX(' + translation + 'px)'\"\n                tabindex=\"0\"\n                role=\"group\"\n                draggable=\"true\"\n                aria-roledescription=\"carousel\"\n                @mousedown=\"onDragStart\"\n                @touchstart=\"onDragStart\">\n                <!--\n                    @slot Display carousel item\n                -->\n                <slot />\n            </div>\n            <!--\n                @slot Override the arrows\n                @binding {boolean} has-prev has prev arrow button \n                @binding {boolean} has-next has next arrow button \n                @binding {(): void} prev switch to prev item function\n                @binding {(): void} next switch to next item function\n            -->\n            <slot\n                name=\"arrow\"\n                :has-prev=\"hasPrev\"\n                :prev=\"onPrev\"\n                :has-next=\"hasNext\"\n                :next=\"onNext\">\n                <template v-if=\"arrows\">\n                    <o-icon\n                        v-show=\"hasPrev\"\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconPrev\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onPrev\"\n                        @keydown.enter=\"onPrev\" />\n                    <o-icon\n                        v-show=\"hasNext\"\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconNext\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onNext\"\n                        @keydown.enter=\"onNext\" />\n                </template>\n            </slot>\n        </div>\n\n        <!--\n            @slot Override the indicators\n            @binding {number} active active index \n            @binding {(idx: number): void} switch-to switch to item function\n            @binding {number} indicator-index current indicator index\n        -->\n        <slot\n            :active=\"activeIndex\"\n            :switch-to=\"switchTo\"\n            :indicator-index=\"indicatorIndex\"\n            name=\"indicators\">\n            <template v-if=\"childItems.length\">\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\n                    <div\n                        v-for=\"(_, index) in indicatorCount\"\n                        :key=\"index\"\n                        :class=\"indicatorClasses\"\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @focus=\"onModeChange('hover', index)\"\n                        @mouseover=\"onModeChange('hover', index)\"\n                        @click=\"onModeChange('click', index)\"\n                        @keypress.enter=\"onModeChange('click', index)\">\n                        <!--\n                            @slot Override the indicator elements\n                            @binding {index} index indicator index \n                        -->\n                        <slot :index=\"index\" name=\"indicator\">\n                            <span :class=\"indicatorItemClasses(index)\" />\n                        </slot>\n                    </div>\n                </div>\n            </template>\n        </slot>\n        <template v-if=\"overlay\">\n            <!-- @slot Overlay element -->\n            <slot name=\"overlay\" />\n        </template>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A Slideshow item used by the carousel\n * @displayName Carousel Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarouselItem\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Make item clickable */\n    clickable: { type: Boolean, default: false },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of carousel item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is active */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<CarouselComponent>();\n\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\n\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\n\nfunction onClick(event: Event): void {\n    if (isActive.value) parent.value.onClick(event);\n    if (props.clickable) parent.value.setActive(item.value.index);\n}\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-car__item\"],\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\n    [\n        \"itemClickableClass\",\n        \"o-car__item--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n);\n</script>\n\n<template>\n    <div\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n        :data-id=\"`carousel-${item.identifier}`\"\n        data-oruga=\"carousel-item\"\n        :role=\"ariaRole\"\n        aria-roledescription=\"item\"\n        :aria-selected=\"isActive\"\n        @click=\"onClick\"\n        @keypress.enter=\"onClick\">\n        <!--\n            @slot Default content\n        -->\n        <slot />\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Carousel from \"./Carousel.vue\";\nimport CarouselItem from \"./CarouselItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export carousel plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Carousel);\n        registerComponent(app, CarouselItem);\n    },\n} as Plugin;\n\n/** export carousel components */\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\n", "<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select a single or grouped options\n * @displayName Checkbox\n * @style _checkbox.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCheckbox\",\n    configField: \"checkbox\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean, Array], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"checkbox.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"checkbox.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native indeterminate */\n    indeterminate: { type: Boolean, default: false },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"checkbox.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is indeterminate */\n    indeterminateClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox labe */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean, array} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | Array<string | number | boolean>,\n    ): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean, array} input value\n     * @param event {Event} native event\n     */\n    (\n        e: \"input\",\n        value: string | number | boolean | Array<string | number | boolean>,\n        event: Event,\n    ): void;\n    /**\n     * indeterminate prop two-way binding\n     * @param value {boolean} updated indeterminate prop\n     */\n    (e: \"update:indeterminate\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | Array<string | number | boolean>\n>(props, emits, { passive: true });\n\nconst isIndeterminate = usePropBinding<boolean>(\"indeterminate\", props, emits);\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-chk\"],\n    [\"checkedClass\", \"o-chk--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-chk--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"disabledClass\", \"o-chk--disabled\", null, computed(() => props.disabled)],\n    [\n        \"variantClass\",\n        \"o-chk--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-chk__input\"],\n    [\"inputCheckedClass\", \"o-chk__input--checked\", null, isChecked],\n    [\n        \"indeterminateClass\",\n        \"o-chk__input--indeterminate\",\n        null,\n        isIndeterminate,\n    ],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-chk__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"checkbox\"\n        role=\"checkbox\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            data-oruga-input=\"checkbox\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :indeterminate.prop=\"indeterminate\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Content slot, default is label prop\n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Checkbox from \"./Checkbox.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export checkbox plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Checkbox);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Checkbox as OCheckbox };\n", "<script setup lang=\"ts\">\nimport { type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An easy way to toggle what you want\n * @displayName Collapse\n * @style _collapse.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCollapse\",\n    configField: \"collapse\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\n    open: { type: Boolean, default: true },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"collapse.animation\", \"fade\"),\n    },\n    /** Id property of the content container */\n    contentId: { type: String, default: () => uuid() },\n    /**\n     * Trigger position\n     * @values top, bottom\n     */\n    position: {\n        type: String as PropType<\"top\" | \"bottom\">,\n        default: () => getOption(\"collapse.position\", \"top\"),\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * open prop two-way binding\n     * @param value {boolean} updated open prop\n     */\n    (e: \"update:open\", value: boolean): void;\n    /** on collapse opened */\n    (e: \"open\"): void;\n    /** on collapse closed */\n    (e: \"close\"): void;\n}>();\n\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\n\n/** Toggle and emit events */\nfunction toggle(): void {\n    isOpen.value = !isOpen.value;\n    isOpen.value ? emits(\"open\") : emits(\"close\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\n\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\n        <div\n            v-if=\"position === 'top'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n\n        <Transition :name=\"animation\">\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\n                <!--\n                    @slot Default content\n                -->\n                <slot />\n            </div>\n        </Transition>\n\n        <div\n            v-if=\"position === 'bottom'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Collapse from \"./Collapse.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export collapse plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Collapse);\n    },\n} as Plugin;\n\n/** export collapse components */\nexport { Collapse as OCollapse };\n", "<script setup lang=\"ts\">\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/fieldInjection\";\n\nimport type { OptionsItem } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an item in a dropdown list. Use with Field to access all functionalities\n * @displayName Select\n * @style _select.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSelect\",\n    configField: \"select\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: null,\n    },\n    /** Select options, unnecessary when default slot is used */\n    options: {\n        type: Array as PropType<string[] | OptionsItem[]>,\n        default: undefined,\n    },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"select.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"select.variant\"),\n    },\n    /** Text when nothing is selected */\n    placeholder: { type: String, default: undefined },\n    /** Allow multiple selection */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native size */\n    nativeSize: { type: [String, Number], default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"select.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"select.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"select.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Same as native id. Also set the for label for o-field wrapper. */\n    id: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"select.autocomplete\", \"off\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native select element */\n    selectClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the select */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the select */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select when multiple mode is active */\n    multipleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select placeholder */\n    placeholderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant for the root element*/\n    rootVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | object | Array<any>,\n    ): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst selectRef = ref<HTMLInputElement>();\n\n// use form input functionality\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\n    useInputHandler(selectRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | object | Array<any>\n>(props, emits, { passive: true });\n\nconst placeholderVisible = computed(() => vmodel.value === null);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            checkHtml5Validity();\n        },\n        { immediate: true },\n    );\n});\n\nconst selectOptions = computed<OptionsItem[]>(() => {\n    if (!props.options || !Array.isArray(props.options)) return [];\n\n    return props.options.map((option) =>\n        typeof option === \"string\"\n            ? { value: option, label: option, key: uuid() }\n            : { ...option, key: uuid() },\n    );\n});\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(\n    () =>\n        (props.iconRight && !props.multiple) ||\n        (props.statusIcon && statusVariantIcon.value),\n);\n\nconst rightIcon = computed(() =>\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\n);\n\nconst rightIconVariant = computed(() =>\n    props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event): void {\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-ctrl-sel\"],\n    [\n        \"expandedClass\",\n        \"o-ctrl-sel--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"rootVariantClass\",\n        \"o-ctrl-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n);\n\nconst selectClasses = defineClasses(\n    [\"selectClass\", \"o-sel\"],\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\n    [\n        \"sizeClass\",\n        \"o-sel--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-sel-iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-sel-iconspace-right\",\n        null,\n        computed(() => !!props.iconRight),\n    ],\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\n    [\n        \"arrowClass\",\n        \"o-sel-arrow\",\n        null,\n        computed(() => !props.iconRight && !props.multiple),\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"select\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick('icon-click', $event)\" />\n\n        <select\n            v-bind=\"$attrs\"\n            :id=\"id\"\n            ref=\"selectRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"select\"\n            :class=\"selectClasses\"\n            :autocomplete=\"autocomplete\"\n            :multiple=\"multiple\"\n            :size=\"nativeSize\"\n            :disabled=\"disabled\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\">\n            <template v-if=\"placeholder || $slots.placeholder\">\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\n                    <!--\n                        @slot Override the placeholder\n                    -->\n                    <slot name=\"placeholder\">\n                        {{ placeholder }}\n                    </slot>\n                </option>\n            </template>\n\n            <!--\n                @slot Override the options, default is options prop\n            -->\n            <slot>\n                <option\n                    v-for=\"option in selectOptions\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    v-bind=\"option.attrs\">\n                    {{ option.label }}\n                </option>\n            </slot>\n        </select>\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"iconRightClickable\"\n            :icon=\"rightIcon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"rightIconVariant\"\n            both\n            @click=\"rightIconClick\" />\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, useAttrs, type PropType, ref, watch, nextTick } from \"vue\";\n\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    getActiveClasses,\n    useEventListener,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ClassBind, ComponentClass } from \"@/types\";\n\n/**\n * This is a internal used component.\n * Used by Datepicker and Timepicker.\n */\ndefineOptions({\n    name: \"OPickerWrapper\",\n});\n\nconst props = defineProps({\n    /** parent picker component props  */\n    picker: { type: Object, required: true },\n    /** data-oruga attribute value */\n    dataOruga: { type: String, required: true },\n    /** the internal input value */\n    value: { type: [Date, Array], default: undefined },\n    /** the active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** formatted display value to show when client is desktop */\n    formattedValue: { type: String, default: undefined },\n    /** native value when client is mobile native */\n    nativeValue: { type: [String, Number], default: undefined },\n    nativeType: { type: String, required: true },\n    nativeStep: { type: String, default: undefined },\n    nativeMin: { type: [String, Number], default: undefined },\n    nativeMax: { type: [String, Number], default: undefined },\n    stayOpen: { type: Boolean, default: false },\n    rootClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    dropdownClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    boxClass: {\n        type: Array as PropType<ComponentClass>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on value change event */\n    (e: \"change\", value: string): void;\n    /** on natvie value change event */\n    (e: \"native-change\", value: string): void;\n    /** on input focus event */\n    (e: \"focus\", evt: Event): void;\n    /** on input blur event */\n    (e: \"blur\", evt: Event): void;\n    /** on input invalid event */\n    (e: \"invalid\", evt: Event): void;\n    /** on icon click event */\n    (e: \"icon-click\", evt: Event): void;\n    /** on icon right click event */\n    (e: \"icon-right-click\", evt: Event): void;\n}>();\n\nconst isMobileNative = computed(\n    () =>\n        !props.picker.inline &&\n        props.picker.mobileNative &&\n        isMobileAgent.any(),\n);\n\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\n);\n\n// use form input functionality for native input\nconst {\n    input,\n    checkHtml5Validity,\n    setFocus,\n    onBlur,\n    onFocus,\n    onInvalid,\n    isValid,\n} = useInputHandler<HTMLInputElement>(elementRef, emits, props.picker);\n\n/**\n * Show input as text for placeholder,\n * when placeholder and no native value is given.\n */\nconst initialNativeType =\n    !props.picker.placeholder || !!props.nativeValue\n        ? props.nativeType\n        : \"text\";\n\n/** input value based on mobile native or formatted desktop value */\nconst inputValue = computed(() =>\n    isMobileNative.value ? props.nativeValue : props.formattedValue,\n);\n\n/** internal o-input vmodel value */\nconst vmodel = ref(inputValue.value);\n// update the o-input vmodel value when prop value change\nwatch(inputValue, (value) => (vmodel.value = value));\n\n/**\n * When v-model is changed:\n *  1. Update internal value.\n *  2. If it's invalid, validate again.\n */\nwatch(\n    () => props.value,\n    () => {\n        // reset input value if they not match\n        if (vmodel.value !== inputValue.value) vmodel.value = inputValue.value;\n\n        // toggle picker if not stay open\n        if (!isMobileNative.value && !props.stayOpen) togglePicker(false);\n        if (!isValid.value) checkHtml5Validity();\n    },\n    { flush: \"post\" },\n);\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nwatch(isActive, onActiveChange);\n\nconst ariaRole = computed(() => (!props.picker.inline ? \"dialog\" : undefined));\n\nconst triggers = computed(() => (props.picker.openOnFocus ? [\"click\"] : []));\n\nif (isClient) useEventListener(\"keyup\", onKeyPress);\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\n        togglePicker(false);\n}\n\n// --- PICKER EVENT HANDLER ---\n\n/** Toggle picker */\nfunction togglePicker(active: boolean): void {\n    if (dropdownRef.value) {\n        if (active || props.picker.closeOnClick)\n            nextTick(() => (isActive.value = active));\n    }\n}\n\n/** Avoid dropdown toggle when is already visible */\nfunction onInputClick(event): void {\n    if (isActive.value) event.stopPropagation();\n}\n\n/** Emit 'blur' event on dropdown is not active (closed) */\nfunction onActiveChange(value: boolean): void {\n    if (value) onFocus();\n    else if (!value) onBlur();\n}\n\n// --- NATIVE EVENT HANDLER ---\n\nfunction onNativeClick(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // blur the current state to remove active native keyboards for type 'text'\n        input.value.blur();\n\n        setTimeout(() => {\n            // make the input editable\n            input.value.readOnly = false;\n            input.value.type = props.nativeType;\n\n            // focus the underlaying input element again to open native keyboards for type 'date'\n            setFocus();\n        }, 50);\n    }\n}\n\nfunction onNativeFocus(event: Event): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when input is not editable jet\n    if (input.value.type === \"text\") {\n        // prevent focus\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    // only emit focus event if editable\n    else onFocus();\n}\n\nfunction onNativeBlur(): void {\n    // do nothing if client is not mobile\n    if (!isMobileNative.value) return;\n\n    // when the input does not have any value\n    if (!input.value.value) {\n        // make the input uneditable\n        input.value.readOnly = true;\n        input.value.type = \"text\";\n    }\n    // emit blur event\n    onBlur();\n}\n\nfunction handleNativeChange(event: Event): void {\n    const value = (event.target as HTMLInputElement).value\n        ? (event.target as HTMLInputElement).value\n        : null;\n\n    // when the input does not have any value\n    if (!value) {\n        input.value.value = value;\n        input.value.blur();\n    }\n\n    emits(\"native-change\", value);\n}\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...props.picker.inputClasses,\n}));\n\nconst dropdownBind = computed(() => ({\n    \"root-class\": getActiveClasses(props.dropdownClasses),\n    ...props.picker.dropdownClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\" @click=\"onNativeClick\">\n        <o-dropdown\n            v-if=\"!isMobileNative\"\n            ref=\"dropdownRef\"\n            v-bind=\"dropdownBind\"\n            v-model:active=\"isActive\"\n            :position=\"picker.position\"\n            :disabled=\"picker.disabled\"\n            :inline=\"picker.inline\"\n            :mobile-modal=\"picker.mobileModal\"\n            :trap-focus=\"picker.trapFocus\"\n            :aria-role=\"ariaRole\"\n            :aria-modal=\"!picker.inline\"\n            :tabindex=\"-1\"\n            :teleport=\"picker.teleport\"\n            :triggers=\"triggers\">\n            <template v-if=\"!picker.inline\" #trigger>\n                <slot name=\"trigger\">\n                    <o-input\n                        ref=\"inputRef\"\n                        v-bind=\"inputBind\"\n                        v-model=\"vmodel\"\n                        autocomplete=\"off\"\n                        :placeholder=\"picker.placeholder\"\n                        :size=\"picker.size\"\n                        :icon-pack=\"picker.iconPack\"\n                        :icon=\"picker.icon\"\n                        :icon-right=\"picker.iconRight\"\n                        :icon-right-clickable=\"picker.iconRightClickable\"\n                        :expanded=\"picker.expanded\"\n                        :rounded=\"picker.rounded\"\n                        :disabled=\"picker.disabled\"\n                        :readonly=\"picker.readonly\"\n                        :use-html5-validation=\"false\"\n                        @click=\"onInputClick\"\n                        @keyup.enter=\"togglePicker(true)\"\n                        @change=\"$emit('change', $event.target.value)\"\n                        @focus=\"onFocus\"\n                        @blur=\"onBlur\"\n                        @icon-click=\"$emit('icon-click', $event)\"\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\n                </slot>\n            </template>\n            <o-dropdown-item\n                override\n                tag=\"div\"\n                :item-class=\"boxClass\"\n                :disabled=\"picker.disabled\"\n                :clickable=\"false\">\n                <slot />\n            </o-dropdown-item>\n        </o-dropdown>\n\n        <!-- Native Picker -->\n        <template v-else>\n            <slot name=\"trigger\">\n                <o-input\n                    ref=\"nativeInputRef\"\n                    v-bind=\"inputBind\"\n                    v-model=\"vmodel\"\n                    :type=\"initialNativeType\"\n                    :min=\"nativeMin\"\n                    :max=\"nativeMax\"\n                    :step=\"nativeStep\"\n                    :placeholder=\"picker.placeholder\"\n                    :size=\"picker.size\"\n                    :icon-pack=\"picker.iconPack\"\n                    :icon=\"picker.icon\"\n                    :icon-right=\"picker.iconRight\"\n                    :icon-right-clickable=\"picker.iconRightClickable\"\n                    :rounded=\"picker.rounded\"\n                    :disabled=\"picker.disabled\"\n                    :readonly=\"initialNativeType == 'text'\"\n                    autocomplete=\"off\"\n                    :use-html5-validation=\"false\"\n                    @change=\"handleNativeChange\"\n                    @focus=\"onNativeFocus\"\n                    @blur=\"onNativeBlur\"\n                    @invalid=\"onInvalid\"\n                    @icon-click=\"$emit('icon-click', $event)\"\n                    @icon-right-click=\"$emit('icon-right-click', $event)\" />\n            </slot>\n        </template>\n    </div>\n</template>\n", "/**\n * Return month names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\n * @return {Array<String>} An array of month names\n */\ntype MonthType =\n    | \"numeric\"\n    | \"2-digit\"\n    | \"long\"\n    | \"short\"\n    | \"narrow\"\n    | undefined;\n\nexport function getMonthNames(\n    locale: string = undefined,\n    format: MonthType = \"long\",\n): string[] {\n    const dates = [];\n    for (let i = 0; i < 12; i++) {\n        dates.push(new Date(2000, i, 15));\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        month: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Return weekday names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {Number} first day of week index\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\n * @return {Array<String>} An array of weekday names\n */\n\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\n\nexport function getWeekdayNames(\n    locale: string = undefined,\n    firstDayOfWeek: number = 0,\n    format: WeekdayType = \"narrow\",\n): string[] {\n    const dates = [];\n    for (let i = 1, j = 0; j < 7; i++) {\n        const d = new Date(2000, 0, i);\n        const day = d.getDay();\n        if (day === firstDayOfWeek || j > 0) {\n            dates.push(d);\n            j++;\n        }\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        weekday: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Accept a regex with group names and return an object\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\n * will return { year: 2000, month: 12, day: 25 }\n * @param  {String} includes injections of (?!={groupname}) for each group\n * @param  {String} the string to run regex\n * @return {Object} an object with a property for each group having the group's match as the value\n */\nexport function matchWithGroups(pattern: string, str: string): any {\n    const matches = str.match(pattern);\n    return (\n        pattern\n            // get the pattern as a string\n            .toString()\n            // suss out the groups\n            .match(/<(.+?)>/g)\n            // remove the braces\n            .map((group) => {\n                const groupMatches = group.match(/<(.+)>/);\n                if (!groupMatches || groupMatches.length <= 0) {\n                    return null;\n                }\n                return group.match(/<(.+)>/)[1];\n            })\n            // create an object with a property for each group having the group's match as the value\n            .reduce((acc, curr, index) => {\n                if (matches && matches.length > index) {\n                    acc[curr] = matches[index + 1];\n                } else {\n                    acc[curr] = null;\n                }\n                return acc;\n            }, {})\n    );\n}\n\n/** Return array of all days in the week that the startingDate is within */\nexport function weekBuilder(\n    startingDate: number,\n    month: number,\n    year: number,\n    firstDayOfWeek: number,\n): Date[] {\n    const thisMonth = new Date(year, month);\n\n    const thisWeek = [];\n\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\n\n    const end =\n        dayOfWeek >= firstDayOfWeek\n            ? dayOfWeek - firstDayOfWeek\n            : 7 - firstDayOfWeek + dayOfWeek;\n\n    let daysAgo = 1;\n    for (let i = 0; i < end; i++) {\n        thisWeek.unshift(\n            new Date(\n                thisMonth.getFullYear(),\n                thisMonth.getMonth(),\n                startingDate - daysAgo,\n            ),\n        );\n        daysAgo++;\n    }\n\n    thisWeek.push(new Date(year, month, startingDate));\n\n    let daysForward = 1;\n    while (thisWeek.length < 7) {\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\n        daysForward++;\n    }\n\n    return thisWeek;\n}\n\nexport function firstWeekOffset(year, dow, doy): number {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    const firstJanuary = new Date(year, 0, fwd);\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n\n/** Return the number of days in a specific year */\nexport function daysInYear(year): number {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\n}\n\n/** Return the number of weeks in a specific year */\nexport function weeksInYear(year, dow, doy): number {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n", "import { computed } from \"vue\";\nimport { matchWithGroups } from \"./utils\";\nimport type { DatepickerProps } from \"./types\";\n\nexport function useDatepickerMixins(props: DatepickerProps) {\n    /**\n     * Check that selected date is within earliest/latest params and\n     * is within a given month\n     */\n    function isDateSelectable(date: Date, month: number): boolean {\n        const validity = [];\n\n        if (props.minDate) validity.push(date >= props.minDate);\n        if (props.maxDate) validity.push(date <= props.maxDate);\n\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\n            validity.push(date.getMonth() === month);\n\n        if (props.selectableDates) {\n            if (typeof props.selectableDates === \"function\") {\n                if (props.selectableDates(date)) return true;\n                else validity.push(false);\n            } else {\n                for (let i = 0; i < props.selectableDates.length; i++) {\n                    const enabledDate = props.selectableDates[i];\n                    if (\n                        date.getDate() === enabledDate.getDate() &&\n                        date.getFullYear() === enabledDate.getFullYear() &&\n                        date.getMonth() === enabledDate.getMonth()\n                    )\n                        return true;\n                    else validity.push(false);\n                }\n            }\n        }\n\n        if (props.unselectableDates) {\n            if (typeof props.unselectableDates === \"function\") {\n                validity.push(!props.unselectableDates(date));\n            } else {\n                for (let i = 0; i < props.unselectableDates.length; i++) {\n                    const disabledDate = props.unselectableDates[i];\n                    validity.push(\n                        date.getDate() !== disabledDate.getDate() ||\n                            date.getFullYear() !== disabledDate.getFullYear() ||\n                            date.getMonth() !== disabledDate.getMonth(),\n                    );\n                }\n            }\n        }\n\n        if (props.unselectableDaysOfWeek) {\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\n                validity.push(date.getDay() !== dayOfWeek);\n            }\n        }\n\n        return validity.indexOf(false) < 0;\n    }\n\n    const isTypeMonth = computed(() => props.type === \"month\");\n\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    /** DateTime Format */\n    const dtf = computed(\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\n    );\n\n    /** DateTime Month Format */\n    const dtfMonth = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"2-digit\",\n                // timeZone: 'UTC'\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.dateCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    /** Format date into string */\n    const defaultDateFormatter = (date: Date | Date[]): string => {\n        if (!date) return \"\";\n        const targetDates = Array.isArray(date) ? date : [date];\n        if (!targetDates.length) return \"\";\n        const dates = targetDates.map((date) => {\n            const d = new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                12,\n            );\n            return !isTypeMonth.value\n                ? dtf.value.format(d)\n                : dtfMonth.value.format(d);\n        });\n        return !props.multiple ? dates.join(\" - \") : dates.join(\", \");\n    };\n\n    /** Parse a string into a date */\n    const defaultDateParser = (date: string): Date[] | Date => {\n        if (!date) return null;\n        const targetDates = !props.multiple ? [date] : date.split(\", \");\n        const dates = targetDates.map((date) => {\n            if (\n                dtf.value.formatToParts &&\n                typeof dtf.value.formatToParts === \"function\"\n            ) {\n                const formatRegex = (\n                    isTypeMonth.value ? dtfMonth.value : dtf.value\n                )\n                    .formatToParts(sampleTime.value)\n                    .map((part) => {\n                        if (part.type === \"literal\") return part.value;\n                        return `((?!=<${part.type}>)\\\\d+)`;\n                    })\n                    .join(\"\");\n                const dateGroups = matchWithGroups(formatRegex, date);\n\n                // We do a simple validation for the group.\n                // If it is not valid, it will fallback to Date.parse below\n                if (\n                    dateGroups.year &&\n                    dateGroups.year.length === 4 &&\n                    dateGroups.month &&\n                    dateGroups.month <= 12\n                ) {\n                    if (isTypeMonth.value)\n                        return new Date(dateGroups.year, dateGroups.month - 1);\n                    else if (dateGroups.day && dateGroups.day <= 31) {\n                        return new Date(\n                            dateGroups.year,\n                            dateGroups.month - 1,\n                            dateGroups.day,\n                            12,\n                        );\n                    }\n                }\n            }\n            // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n            if (!isTypeMonth.value) return new Date(Date.parse(date));\n            const s = date.split(\"/\");\n            const year = s[0].length === 4 ? s[0] : s[1];\n            const month = s[0].length === 2 ? s[0] : s[1];\n            if (year && month) {\n                return new Date(\n                    parseInt(year, 10),\n                    parseInt(month, 10) - 1,\n                    1,\n                    0,\n                    0,\n                    0,\n                    0,\n                );\n            }\n        });\n        return props.multiple ? dates : dates[0];\n    };\n\n    return { isDateSelectable, defaultDateParser, defaultDateFormatter };\n}\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    ref,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerTableRow\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    day: { type: Number, required: true },\n    week: { type: Array as PropType<Date[]>, required: true },\n    month: { type: Number, required: true },\n    selectedDate: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    hoveredDateRange: { type: Array as PropType<Date[]>, default: () => [] },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    (e: \"select\", value: Date): void;\n    (e: \"hover-enddate\", value: Date): void;\n    (e: \"change-focus\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!props.events?.length);\n\nconst dayRefs = ref(new Map());\n\nfunction setDayRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\n    if (el) dayRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.day,\n    (day) => {\n        // if day is in week\n        if (props.week.map((d) => d.getDate()).includes(day))\n            nextTick(() => {\n                // $nextTick is needed when month is changed\n                const refKey = `day-${props.month}-${day}`;\n                const ref = dayRefs.value.get(refKey);\n                if (ref) ref.focus();\n            });\n    },\n);\n\nwatch(\n    () => props.month,\n    // clear day refs on month change\n    () => (dayRefs.value = new Map()),\n);\n\nfunction clickWeekNumber(week: number): void {\n    if (datepicker.value.weekNumberClickable) emits(\"week-number-click\", week);\n}\n\nfunction getDayOfYear(input): number {\n    return (\n        Math.round(\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\n                864e5,\n        ) + 1\n    );\n}\n\nfunction getWeekNumber(mom): number {\n    const dow = datepicker.value.firstDayOfWeek; // first day of week\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\n    const doy = datepicker.value.rulesForFirstWeek;\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = mom.getFullYear() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\n        resYear = mom.getFullYear() + 1;\n    } else {\n        resYear = mom.getFullYear();\n        resWeek = week;\n    }\n    return resWeek;\n}\n\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\n    if (!props.events?.length) return [];\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/** Emit select event with chosen date as payload */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled || datepicker.value.readonly) return;\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\n}\n\nfunction changeFocus(day, inc): void {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(day.getDate() + inc);\n    // if next day is out of range or not selectable, move to next selectable date\n    while (\n        (datepicker.value.minDate && nextDay < datepicker.value.minDate) ||\n        (datepicker.value.maxDate && nextDay > datepicker.value.maxDate) ||\n        !isDateSelectable(nextDay, nextDay.getMonth())\n    ) {\n        // revert day selection until selectable day is reached\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\n    }\n    setRangeHoverEndDate(nextDay);\n    emits(\"change-focus\", nextDay);\n}\n\nfunction setRangeHoverEndDate(day): void {\n    if (datepicker.value.range) emits(\"hover-enddate\", day);\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(\n    dateOne: Date,\n    dateTwo: Date | Date[],\n    multiple = false,\n): boolean {\n    // if either date is null or undefined, return false\n    // if using multiple flag, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n\n    if (Array.isArray(dateTwo)) {\n        return dateTwo.some(\n            (date) =>\n                dateOne.getDate() === date.getDate() &&\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    }\n    return (\n        dateOne.getDate() === dateTwo.getDate() &&\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(\n    dateOne: Date,\n    dates: Date | Date[],\n    multiple = false,\n): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\n/** Build cellClasses for cell using validations */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tableCellSelectedClass\",\n            \"o-dpck__table__cell--selected\",\n            null,\n            dateMatch(day, props.selectedDate) ||\n                dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellFirstSelectedClass\",\n            \"o-dpck__table__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellWithinSelectedClass\",\n            \"o-dpck__table__cell--within-selected\",\n            null,\n            dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellLastSelectedClass\",\n            \"o-dpck__table__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellFirstHoveredClass\",\n            \"o-dpck__table__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[0],\n            ),\n        ],\n        [\n            \"tableCellWithinHoveredClass\",\n            \"o-dpck__table__cell--within-hovered\",\n            null,\n            dateWithin(day, props.hoveredDateRange),\n        ],\n        [\n            \"tableCellLastHoveredClass\",\n            \"o-dpck__table__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[1],\n            ),\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"tableCellSelectableClass\",\n            \"o-dpck__table__cell--selectable\",\n            null,\n            isDateSelectable(day, props.month) &&\n                !datepicker.value.disabled &&\n                !datepicker.value.readonly,\n        ],\n        [\n            \"tableCellUnselectableClass\",\n            \"o-dpck__table__cell--unselectable\",\n            null,\n            !isDateSelectable(day, props.month) || datepicker.value.disabled,\n        ],\n\n        [\n            \"tableCellInvisibleClass\",\n            \"o-dpck__table__cell--invisible\",\n            null,\n            !datepicker.value.nearbyMonthDays && day.getMonth() !== props.month,\n        ],\n\n        [\n            \"tableCellNearbyClass\",\n            \"o-dpck__table__cell--nearby\",\n            null,\n            datepicker.value.nearbySelectableMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n    );\n\n    return [\n        ...tableCellClasses.value,\n        ...cellEventsClass.value,\n        ...classes.value,\n    ];\n}\n\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"tableEventClass\", \"o-dpck__table__event\"],\n        [\n            \"tableEventVariantClass\",\n            \"o-dpck__table__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"tableEventIndicatorsClass\",\n            \"o-dpck__table__event--\",\n            datepicker.value.indicators,\n            !!datepicker.value.indicators,\n        ],\n    );\n    return classes.value;\n}\n\nconst tableRowClasses = defineClasses([\"tableRowClass\", \"o-dpck__table__row\"]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableEventsClasses = defineClasses([\n    \"tableEventsClass\",\n    \"o-dpck__table__events\",\n]);\n\nconst cellEventsClass = defineClasses([\n    \"tableCellEventsClass\",\n    \"o-dpck__table__cell--events\",\n    null,\n    hasEvents,\n]);\n</script>\n\n<template>\n    <div :class=\"tableRowClasses\">\n        <div\n            v-if=\"datepicker.showWeekNumber\"\n            :class=\"tableCellClasses\"\n            :style=\"{\n                cursor: datepicker.weekNumberClickable ? 'pointer' : 'auto',\n            }\"\n            :tabindex=\"datepicker.weekNumberClickable ? 0 : null\"\n            role=\"button\"\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\n            <span>{{ getWeekNumber(week[6]) }}</span>\n        </div>\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\n            <div\n                v-if=\"\n                    !datepicker.disabled &&\n                    !datepicker.readonly &&\n                    isDateSelectable(weekDay, month)\n                \"\n                :ref=\"(el) => setDayRef(weekDay, el)\"\n                :class=\"cellClasses(weekDay)\"\n                role=\"button\"\n                :tabindex=\"\n                    day === weekDay.getDate() && month === weekDay.getMonth()\n                        ? null\n                        : 0\n                \"\n                @click.prevent=\"selectDate(weekDay)\"\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\n                @focus=\"setRangeHoverEndDate(weekDay)\"\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n                <div\n                    v-if=\"eventsDateMatch(weekDay).length\"\n                    :class=\"tableEventsClasses\">\n                    <div\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\n                        :key=\"index\"\n                        :class=\"eventClasses(event)\" />\n                </div>\n            </div>\n            <div v-else :class=\"cellClasses(weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n            </div>\n        </template>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weekBuilder } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\n\ndefineOptions({\n    name: \"ODatepickerTable\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    dayNames: { type: Array as PropType<string[]>, required: true },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\");\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst visibleDayNames = computed(() => {\n    const visibleDayNames = [];\n    let index = datepicker.value.firstDayOfWeek;\n    while (visibleDayNames.length < props.dayNames.length) {\n        const currentDayName = props.dayNames[index % props.dayNames.length];\n        visibleDayNames.push(currentDayName);\n        index++;\n    }\n    if (datepicker.value.showWeekNumber) visibleDayNames.unshift(\"\");\n    return visibleDayNames;\n});\n\n/** Return array of all events in the specified month */\nconst eventsInThisMonth = computed(() => {\n    if (!datepicker.value.events) return [];\n    return datepicker.value.events\n        .map((event) =>\n            !event.date && event instanceof Date ? { date: event } : event,\n        )\n        .filter(\n            (event) =>\n                event.date.getMonth() === focusedDateModel.value.month &&\n                event.date.getFullYear() === focusedDateModel.value.year,\n        );\n});\n\n/** Return array of all weeks in the specified month */\nconst weeksInThisMonth = computed(() => {\n    validateFocusedDay();\n    const month = focusedDateModel.value.month;\n    const year = focusedDateModel.value.year;\n    const weeksInThisMonth = [];\n\n    let startingDay = 1;\n\n    while (weeksInThisMonth.length < 6) {\n        const newWeek = weekBuilder(\n            startingDay,\n            month,\n            year,\n            datepicker.value.firstDayOfWeek,\n        );\n        weeksInThisMonth.push(newWeek);\n        startingDay += 7;\n    }\n\n    return weeksInThisMonth;\n});\n\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\n    if (!datepicker.value.events) return [];\n    return eventsInThisMonth.value.filter((event) => {\n        const stripped = new Date(event.date);\n        stripped.setHours(0, 0, 0, 0);\n        const timed = stripped.getTime();\n        return week.some((weekDate) => weekDate.getTime() === timed);\n    });\n}\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || selectedEndDate.value) return [];\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction validateFocusedDay(): void {\n    const currentDate = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month,\n        focusedDateModel.value.day,\n    );\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\n\n    let day = 0;\n    // Number of days in the current month\n    const monthDays = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month + 1,\n        0,\n    ).getDate();\n    let firstFocusable = null;\n    while (!firstFocusable && ++day < monthDays) {\n        const date = new Date(\n            focusedDateModel.value.year,\n            focusedDateModel.value.month,\n            day,\n        );\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\n            firstFocusable = currentDate;\n            focusedDateModel.value = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n            };\n        }\n    }\n}\n\n// --- Event Handlers ---\n\n/** Emit input event with selected date as payload for v-model in parent */\nfunction onSelectedDate(date: Date): void {\n    if (datepicker.value.disabled) return;\n    if (!datepicker.value.range && !datepicker.value.multiple)\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\n/*\n * If selected date already exists list of selected dates, remove it from the list\n * Otherwise, add date to list of selected dates\n */\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n\n    let multipleSelectedDates = props.modelValue;\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates = [...multipleSelectedDates, date];\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction onRangeHoverEndDate(date: Date): void {\n    hoveredEndDate.value = date;\n}\n\nfunction onChangeFocus(date: Date): void {\n    focusedDateModel.value = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n    };\n}\n\n// --- Computed Component Classes ---\n\nconst tableClasses = defineClasses([\"tableClass\", \"o-dpck__table\"]);\n\nconst tableHeadClasses = defineClasses([\n    \"tableHeadClass\",\n    \"o-dpck__table__head\",\n]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableHeadCellClasses = defineClasses([\n    \"tableHeadCellClass\",\n    \"o-dpck__table__head-cell\",\n]);\n\nconst tableBodyClasses = defineClasses([\n    \"tableBodyClass\",\n    \"o-dpck__table__body\",\n]);\n</script>\n\n<template>\n    <section :class=\"tableClasses\">\n        <header :class=\"tableHeadClasses\">\n            <div\n                v-for=\"(day, index) in visibleDayNames\"\n                :key=\"index\"\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\n                <span>{{ day }}</span>\n            </div>\n        </header>\n        <div :class=\"tableBodyClasses\">\n            <o-datepicker-table-row\n                v-for=\"(week, index) in weeksInThisMonth\"\n                :key=\"index\"\n                :selected-date=\"modelValue\"\n                :day=\"focusedDateModel.day\"\n                :week=\"week\"\n                :month=\"focusedDateModel.month\"\n                :events=\"eventsInThisWeek(week)\"\n                :hovered-date-range=\"hoveredDateRange\"\n                :picker-props=\"props.pickerProps\"\n                @select=\"onSelectedDate\"\n                @hover-enddate=\"onRangeHoverEndDate\"\n                @change-focus=\"onChangeFocus\"\n                @week-number-click=\"$emit('week-number-click', $event)\" />\n        </div>\n    </section>\n</template>\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    nextTick,\n    watch,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerMonth\",\n    configField: \"datepicker\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n}>();\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!datepicker.value.events?.length);\n\nconst monthRefs = ref(new Map());\n\nfunction setMonthRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `month-${date.getMonth()}`;\n    if (el) monthRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.focusedDate.month,\n    (month) => {\n        const refKey = `month-${month}`;\n        nextTick(() => {\n            // $nextTick is needed when month is changed\n            const ref = monthRefs.value.get(refKey);\n            if (ref?.length > 0 && ref[0]) {\n                ref[0].focus();\n            }\n        });\n    },\n);\n\n/** Return array of all events in the specified month */\nconst eventsInThisYear = computed(() => {\n    if (!datepicker.value.events) return [];\n\n    return datepicker.value.events\n        .map((event) => {\n            if (!event.date && event instanceof Date) event = { date: event };\n            if (!event.type) event.type = \"is-primary\";\n            return event;\n        })\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\n});\n\nconst monthDates = computed(() => {\n    const year = props.focusedDate.year;\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        const d = new Date(year, i, 1);\n        d.setHours(0, 0, 0, 0);\n        months.push(d);\n    }\n    return months;\n});\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || !selectedEndDate.value) return [];\n\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction eventsDateMatch(day): DatepickerEvent[] {\n    if (!eventsInThisYear.value.length) return [];\n    return eventsInThisYear.value.filter(\n        (event) => event.date.getMonth() === day.getMonth(),\n    );\n}\n\nfunction isDateSelectable(date: Date): boolean {\n    const validity = [];\n\n    if (datepicker.value.minDate)\n        validity.push(date >= datepicker.value.minDate);\n    if (datepicker.value.maxDate)\n        validity.push(date <= datepicker.value.maxDate);\n\n    validity.push(date.getFullYear() === props.focusedDate.year);\n\n    if (datepicker.value.selectableDates) {\n        if (typeof datepicker.value.selectableDates === \"function\") {\n            if (datepicker.value.selectableDates(date)) return true;\n            else validity.push(false);\n        } else {\n            for (let i = 0; i < datepicker.value.selectableDates.length; i++) {\n                const enabledDate = datepicker.value.selectableDates[i];\n                if (\n                    date.getFullYear() === enabledDate.getFullYear() &&\n                    date.getMonth() === enabledDate.getMonth()\n                )\n                    return true;\n                else validity.push(false);\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDates) {\n        if (typeof datepicker.value.unselectableDates === \"function\") {\n            validity.push(!datepicker.value.unselectableDates(date));\n        } else {\n            for (\n                let i = 0;\n                i < datepicker.value.unselectableDates.length;\n                i++\n            ) {\n                const disabledDate = datepicker.value.unselectableDates[i];\n                validity.push(\n                    date.getFullYear() !== disabledDate.getFullYear() ||\n                        date.getMonth() !== disabledDate.getMonth(),\n                );\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDaysOfWeek) {\n        for (\n            let i = 0;\n            i < datepicker.value.unselectableDaysOfWeek.length;\n            i++\n        ) {\n            const dayOfWeek = datepicker.value.unselectableDaysOfWeek[i];\n            validity.push(date.getDay() !== dayOfWeek);\n        }\n    }\n\n    return validity.indexOf(false) < 0;\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/*\n * Emit update:modelValue event with selected date as payload for v-model in parent\n */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled || datepicker.value.readonly) return;\n    if (\n        !datepicker.value.range &&\n        !datepicker.value.multiple &&\n        isDateSelectable(date)\n    )\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\nconst multipleSelectedDates = computed(() =>\n    datepicker.value.multiple && props.modelValue ? props.modelValue : [],\n);\n\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n    let multipleSelectedDates = props.modelValue;\n\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates.push(date);\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction changeFocus(month: Date, inc: number): void {\n    month.setMonth(month.getMonth() + inc);\n    const focused = {\n        day: month.getDate(),\n        month: month.getMonth(),\n        year: month.getFullYear(),\n    };\n    emits(\"update:focusedDate\", focused);\n}\n\nfunction onRangeHoverEndDate(day: Date): void {\n    if (datepicker.value.range) hoveredEndDate.value = day;\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\n    // if either date is null or undefined, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    return (\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || !multiple) return false;\n    return dates.some(\n        (date) =>\n            dateOne.getDate() === date.getDate() &&\n            dateOne.getFullYear() === date.getFullYear() &&\n            dateOne.getMonth() === date.getMonth(),\n    );\n}\n\nconst monthClasses = defineClasses([\"monthClass\", \"o-dpck__month\"]);\n\nconst monthBodyClasses = defineClasses([\n    \"monthBodyClass\",\n    \"o-dpck__month__body\",\n]);\n\nconst monthTableClasses = defineClasses([\n    \"monthTableClass\",\n    \"o-dpck__month__table\",\n]);\n\nconst monthCellClasses = defineClasses(\n    [\"monthCellClass\", \"o-dpck__month__cell\"],\n    [\"monthCellEventsClass\", \"o-dpck__month__cell--events\", null, hasEvents],\n);\n\n/**\n * Build cellClasses for cell using validations\n */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"monthCellSelectedClass\",\n            \"o-dpck__month__cell--selected\",\n            null,\n            dateMatch(day, props.modelValue, datepicker.value.multiple) ||\n                dateWithin(day, props.modelValue, datepicker.value.multiple) ||\n                dateMultipleSelected(\n                    day,\n                    multipleSelectedDates.value,\n                    datepicker.value.multiple,\n                ),\n        ],\n\n        [\n            \"monthCellFirstSelectedClass\",\n            \"o-dpck__month__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinSelectedClass\",\n            \"o-dpck__month__cell--within-selected\",\n            null,\n            dateWithin(day, props.modelValue, datepicker.value.multiple),\n        ],\n        [\n            \"monthCellLastSelectedClass\",\n            \"o-dpck__month__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredRangeClass\",\n            \"o-dpck__month__cell--within-hovered-range\",\n            null,\n            hoveredDateRange.value &&\n                hoveredDateRange.value.length === 2 &&\n                (dateMatch(day, hoveredDateRange.value) ||\n                    dateWithin(day, hoveredDateRange.value)),\n        ],\n        [\n            \"monthCellFirstHoveredClass\",\n            \"o-dpck__month__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[0],\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredClass\",\n            \"o-dpck__month__cell--within-hovered\",\n            null,\n            dateWithin(day, hoveredDateRange.value),\n        ],\n        [\n            \"monthCellLastHoveredClass\",\n            \"o-dpck__month__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[1],\n            ),\n        ],\n        [\n            \"monthCellTodayClass\",\n            \"o-dpck__month__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"monthCellSelectableclass\",\n            \"o-dpck__month__cell--selectable\",\n            null,\n            isDateSelectable(day) &&\n                !datepicker.value.disabled &&\n                !datepicker.value.readonly,\n        ],\n        [\n            \"monthCellUnselectableClass\",\n            \"o-dpck__month__cell--unselectable\",\n            null,\n            !isDateSelectable(day) || datepicker.value.disabled,\n        ],\n    );\n\n    return [...monthCellClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <section :class=\"monthClasses\">\n        <div :class=\"monthBodyClasses\">\n            <div :class=\"monthTableClasses\">\n                <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\n                    <div\n                        v-if=\"\n                            !datepicker.disabled &&\n                            !datepicker.readonly &&\n                            isDateSelectable(date)\n                        \"\n                        :ref=\"(el) => setMonthRef(date, el)\"\n                        :class=\"cellClasses(date)\"\n                        role=\"button\"\n                        :tabindex=\"\n                            focusedDate.month === date.getMonth() ? null : 0\n                        \"\n                        @click.prevent=\"selectDate(date)\"\n                        @mouseenter=\"onRangeHoverEndDate(date)\"\n                        @focus=\"onRangeHoverEndDate(date)\"\n                        @keydown.prevent=\"onKeydown($event, date)\">\n                        {{ monthNames[date.getMonth()] }}\n                        <div v-if=\"eventsDateMatch(date).length\" class=\"events\">\n                            <div\n                                v-for=\"(event, index) in eventsDateMatch(date)\"\n                                :key=\"index\"\n                                class=\"event\"\n                                :class=\"event.type\" />\n                        </div>\n                    </div>\n                    <div v-else :class=\"cellClasses(date)\">\n                        {{ monthNames[date.getMonth()] }}\n                    </div>\n                </template>\n            </div>\n        </div>\n    </section>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\nimport ODatepickerTable from \"./DatepickerTable.vue\";\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDate } from \"@/utils/helpers\";\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ComponentClass, OrugaOptions } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile\n * @displayName Datepicker\n * @style _datepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatepicker\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Define picker mode\n     * @values date, month\n     */\n    type: {\n        type: String,\n        default: \"date\",\n        validator: (value: string) => [\"month\", \"date\"].indexOf(value) >= 0,\n    },\n    /** Set custom day names, else use names based on locale */\n    dayNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.dayNames\", undefined),\n    },\n    /** Set custom month names, else use names based on locale */\n    monthNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.monthNames\", undefined),\n    },\n    /**\n     * Size of the control input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datepicker.size\"),\n    },\n    /** Set default date to focus on */\n    focusedDate: { type: Date, default: undefined },\n    /** Events to display on picker */\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    /** Event indicators for style class definiton */\n    indicators: { type: String, default: \"dots\" },\n    /** Min date to select */\n    minDate: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDate: { type: Date, default: undefined },\n    /** Enable date range selection */\n    range: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.closeOnClick\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    dateFormatter: {\n        type: Function as PropType<(date: Date | Date[]) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    dateParser: {\n        type: Function as PropType<(date: string) => Date | Date[]>,\n        default: (\n            date: string,\n            defaultFunction: (date: string) => Date | Date[],\n        ) => getOption(\"datepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    dateCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"datepicker.dateCreator\", () => new Date())(),\n    },\n    /** Define a list of dates which can be selected */\n    selectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of dates which can not be selected */\n    unselectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of weeks which can not be selected */\n    unselectableDaysOfWeek: {\n        type: Array as PropType<number[]>,\n        default: () =>\n            getOption(\"datepicker.unselectableDaysOfWeek\", undefined),\n    },\n    /** Show nearby month days */\n    nearbyMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbyMonthDays\", true),\n    },\n    /** Define if nearby month days can be selected */\n    nearbySelectableMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbySelectableMonthDays\", false),\n    },\n    /** Show weeek numbers */\n    showWeekNumber: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.showWeekNumber\", false),\n    },\n    /** Define if weeek numbers are clickable */\n    weekNumberClickable: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.weekNumberClickable\", false),\n    },\n    /** Set the first day of a week */\n    firstDayOfWeek: {\n        type: Number,\n        default: () => getOption(\"datepicker.firstDayOfWeek\", 0),\n    },\n    /** Rules for the first week : 1 for the 1st January, 4 for the 4th January */\n    rulesForFirstWeek: { type: Number, default: () => 4 },\n    /** Define the range of years to show */\n    yearsRange: {\n        type: Array as PropType<number[]>,\n        default: () => getOption(\"datepicker.yearsRange\", [-100, 10]),\n    },\n    /** Trap dropdown on focus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.trapFocus\", true),\n    },\n    /** Position of the dropdown relative to the input */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileModal\", true),\n    },\n    /**\n     * Enable mobile native input if mobile agent\n     * (Default will be switched to `false` in 0.9)\n     */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileNative\", true), // TODO: make false\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"datepicker.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"datepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Next Page\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Previous Page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker header inside the box */\n    headerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box */\n    headerButtonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box when a size is choosen */\n    headerButtonsSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button inside the Datepicker box */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button inside the Datepicker box */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the month and year selects container inside the Datepicker box */\n    listsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Datepicker header with days of the week inside the table */\n    tableHeadClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell inside the table header */\n    tableHeadCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box */\n    tableBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table row */\n    tableRowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell */\n    tableCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby month days are hidden */\n    tableCellInvisibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected */\n    tableCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range */\n    tableCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected */\n    tableCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection */\n    tableCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection */\n    tableCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection */\n    tableCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection */\n    tableCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day */\n    tableCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable */\n    tableCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable */\n    tableCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby days (prev/next month) are selectable */\n    tableCellNearbyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell of a row when at least one event is present */\n    tableCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the events container */\n    tableEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event */\n    tableEventClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator when a `variant` is specified */\n    tableEventVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator */\n    tableEventIndicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box when type is month */\n    monthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box when type is month */\n    monthBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table container when type is month */\n    monthTableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when type is month */\n    monthCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected when type is month */\n    monthCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range when type is month */\n    monthCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected when type is month */\n    monthCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection when type is month */\n    monthCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection when type is month */\n    monthCellWithinHoveredRangeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection when type is month */\n    monthCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection and cell is in range when type is month */\n    monthCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection when type is month */\n    monthCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day when type is month */\n    monthCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable when type is month */\n    monthCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable when type is month */\n    monthCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**Class of the events container when type is month */\n    monthCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"input\"]>(\"datepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"dropdown\"]>(\n                \"datepicker.dropdownClasses\",\n                {},\n            ),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"select\"]>(\"datepicker.selectClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { defaultDateFormatter, defaultDateParser } = useDatepickerMixins(props);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\n/** modelvalue of selected date */\nconst vmodel = defineModel<Date | Date[]>({ default: null });\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\n/** modelValue formated into string */\nconst formattedValue = computed(() =>\n    Array.isArray(vmodel.value)\n        ? (props.dateFormatter as any)([...vmodel.value], defaultDateFormatter)\n        : (props.dateFormatter as any)(vmodel.value, defaultDateFormatter),\n);\n\nconst isTypeMonth = computed(() => props.type === \"month\");\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        const isArray = Array.isArray(value);\n        const currentDate = isArray\n            ? value.length\n                ? value[value.length - 1]\n                : props.dateCreator()\n            : value\n              ? value\n              : props.dateCreator();\n        if (\n            !isArray ||\n            (isArray &&\n                Array.isArray(vmodel.value) &&\n                value.length > vmodel.value.length)\n        )\n            // updateInternalState\n            focusedDateData.value = {\n                day: currentDate.getDate(),\n                month: currentDate.getMonth(),\n                year: currentDate.getFullYear(),\n            };\n    },\n);\n\nwatch(\n    () => props.focusedDate,\n    (value) => {\n        if (value) {\n            focusedDateData.value = {\n                day: value.getDate(),\n                month: value.getMonth(),\n                year: value.getFullYear(),\n            };\n        }\n    },\n);\n\nconst _initialDate =\n    (Array.isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue) ||\n    props.focusedDate ||\n    props.dateCreator();\n\nif (\n    !props.modelValue &&\n    props.maxDate &&\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\n) {\n    _initialDate.setFullYear(props.maxDate.getFullYear());\n}\n\nconst focusedDateData = ref<FocusedDate>({\n    day: _initialDate.getDate(),\n    month: _initialDate.getMonth(),\n    year: _initialDate.getFullYear(),\n});\n\n/*\n * Emit input event on month and/or year change\n */\nwatch(\n    () => focusedDateData.value.month,\n    (value) => emits(\"change-month\", value),\n);\nwatch(\n    () => focusedDateData.value.year,\n    (value) => emits(\"change-year\", value),\n);\n\nconst computedMonthNames = computed(() =>\n    Array.isArray(props.monthNames)\n        ? props.monthNames\n        : getMonthNames(props.locale),\n);\n\nconst listOfMonths = computed(() => {\n    let minMonth = 0;\n    let maxMonth = 12;\n    if (\n        props.minDate &&\n        focusedDateData.value.year === props.minDate.getFullYear()\n    ) {\n        minMonth = props.minDate.getMonth();\n    }\n    if (\n        props.maxDate &&\n        focusedDateData.value.year === props.maxDate.getFullYear()\n    ) {\n        maxMonth = props.maxDate.getMonth();\n    }\n    return computedMonthNames.value.map((name, index) => ({\n        name: name,\n        index: index,\n        disabled: index < minMonth || index > maxMonth,\n    }));\n});\n\nconst computedDayNames = computed(() => {\n    if (Array.isArray(props.dayNames)) return props.dayNames;\n    return getWeekdayNames(props.locale);\n});\n\n/*\n * Returns an array of years for the year dropdown. If earliest/latest\n * dates are set by props, range of years will fall within those dates.\n */\nconst listOfYears = computed(() => {\n    let latestYear = focusedDateData.value.year + props.yearsRange[1];\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\n        latestYear = Math.max(\n            props.maxDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    let earliestYear = focusedDateData.value.year + props.yearsRange[0];\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\n        earliestYear = Math.min(\n            props.minDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    return Array.from(\n        { length: latestYear - earliestYear + 1 || 1 },\n        (value, index) => earliestYear + index,\n    ).reverse();\n});\n\nconst showPrev = computed(() => {\n    if (!props.minDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year > props.minDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.minDate.getFullYear(),\n        props.minDate.getMonth(),\n    );\n    return dateToCheck > date;\n});\n\n/**\n * Either decrement month by 1 if not January or decrement year by 1\n * and set month to 11 (December) or decrement year when 'month'\n */\nfunction prev(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        if (focusedDateData.value.month > 0) {\n            focusedDateData.value.month -= 1;\n        } else {\n            focusedDateData.value.month = 11;\n            focusedDateData.value.year -= 1;\n        }\n    }\n}\n\nconst showNext = computed(() => {\n    if (!props.maxDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year < props.maxDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.maxDate.getFullYear(),\n        props.maxDate.getMonth(),\n    );\n    return dateToCheck < date;\n});\n\n/**\n * Either increment month by 1 if not December or increment year by 1\n * and set month to 0 (January) or increment year when 'month'\n */\nfunction next(): void {\n    if (props.disabled) return;\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        if (focusedDateData.value.month < 11) {\n            focusedDateData.value.month += 1;\n        } else {\n            focusedDateData.value.month = 0;\n            focusedDateData.value.year += 1;\n        }\n    }\n}\n\nfunction formatNative(value: Date | Date[]): string {\n    if (Array.isArray(value)) value = value[0];\n    const date = new Date(value);\n    // return null if no value is given or value can't parse to proper date\n    if (!value || !date || isNaN(date.getTime())) return null;\n\n    if (isTypeMonth.value) {\n        // Format date into string 'YYYY-MM'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        return year + \"-\" + ((month < 10 ? \"0\" : \"\") + month);\n    } else {\n        // Format date into string 'YYYY-MM-DD'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day)\n        );\n    }\n}\n\n// --- Event Handler ---\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.dateParser as any)(value, defaultDateParser);\n\n    const isValid =\n        isDate(date) ||\n        (Array.isArray(date) &&\n            date.length === 2 &&\n            isDate(date[0]) &&\n            isDate(date[1]));\n\n    vmodel.value = isValid ? date : null;\n}\n\n/** Parse date from string */\nfunction onChangeNativePicker(value: string): void {\n    const s = value ? value.split(\"-\") : [];\n    if (s.length === 3) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1]) - 1;\n        const day = parseInt(s[2]);\n        vmodel.value = new Date(year, month, day);\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-dpck\"],\n    [\n        \"sizeClass\",\n        \"o-dpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-dpck--mobile\", null, isMobile],\n    [\"expandedClass\", \"o-dpck--expanded\", null, computed(() => props.expanded)],\n);\n\nconst headerClasses = defineClasses([\"headerClass\", \"o-dpck__header\"]);\n\nconst headerButtonsClasses = defineClasses(\n    [\"headerButtonsClass\", \"o-dpck__header__buttons\"],\n    [\n        \"headerButtonsSizeClass\",\n        \"o-dpck__header__buttons--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst prevButtonClasses = defineClasses([\n    \"prevButtonClass\",\n    \"o-dpck__header__previous\",\n]);\n\nconst nextButtonClasses = defineClasses([\n    \"nextButtonClass\",\n    \"o-dpck__header__next\",\n]);\n\nconst listsClasses = defineClasses([\"listsClass\", \"o-dpck__header__list\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-dpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-dpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"datepicker\"\n        :value=\"vmodel\"\n        :picker=\"props\"\n        :formatted-value=\"formattedValue\"\n        :native-type=\"!isTypeMonth ? 'date' : 'month'\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxDate)\"\n        :native-min=\"formatNative(minDate)\"\n        :stay-open=\"multiple\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <header :class=\"headerClasses\">\n            <!--\n                @slot Override the header\n            -->\n            <slot name=\"header\">\n                <div :class=\"headerButtonsClasses\">\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"prevButtonClasses\"\n                        :disabled=\"!showPrev\"\n                        :aria-label=\"ariaPreviousLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconPrev\"\n                        outlined\n                        @click.prevent=\"prev\"\n                        @keydown.enter.prevent=\"prev\"\n                        @keydown.space.prevent=\"prev\" />\n\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"nextButtonClasses\"\n                        :disabled=\"!showNext\"\n                        :aria-label=\"ariaNextLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconNext\"\n                        outlined\n                        @click.prevent=\"next\"\n                        @keydown.enter.prevent=\"next\"\n                        @keydown.space.prevent=\"next\" />\n\n                    <div :class=\"listsClasses\">\n                        <o-select\n                            v-if=\"!isTypeMonth\"\n                            v-model=\"focusedDateData.month\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"month in listOfMonths\"\n                                :key=\"month.name\"\n                                :value=\"month.index\"\n                                :disabled=\"month.disabled\">\n                                {{ month.name }}\n                            </option>\n                        </o-select>\n                        <o-select\n                            v-model=\"focusedDateData.year\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"year in listOfYears\"\n                                :key=\"year\"\n                                :value=\"year\">\n                                {{ year }}\n                            </option>\n                        </o-select>\n                    </div>\n                </div>\n            </slot>\n        </header>\n        <!--\n            @slot Override the body\n        -->\n        <slot name=\"body\">\n            <o-datepicker-month\n                v-if=\"isTypeMonth\"\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n            <o-datepicker-table\n                v-else\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :day-names=\"computedDayNames\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n        </slot>\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Datepicker from \"./Datepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datepicker specific types */\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\n\n/** export datepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datepicker);\n    },\n} as Plugin;\n\n/** export datepicker components */\nexport { Datepicker as ODatepicker };\n", "import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { TimepickerProps } from \"./types\";\n\nconst AM = \"AM\" as const;\nconst PM = \"PM\" as const;\nconst HOUR_FORMAT_24 = \"24\" as const;\nconst HOUR_FORMAT_12 = \"12\" as const;\n\nexport function useTimepickerMixins(props: TimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const isHourFormat24 = computed(\n        () =>\n            (props.hourFormat && props.hourFormat === HOUR_FORMAT_24) ||\n            (!props.hourFormat && !localeOptions.value.hour12),\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.timeCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) {\n                return dayPeriod.value;\n            }\n        }\n        return PM;\n    });\n\n    const meridiens = computed(() => [amString.value, pmString.value]);\n\n    const hourLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const minuteLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const secondLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\n            );\n            if (literal) return literal.value;\n        }\n        return undefined;\n    });\n\n    function defaultTimeFormatter(time: Date): string {\n        return dtf.value.format(time);\n    }\n\n    function defaultTimeParser(time: string): Date {\n        if (!time) return null;\n\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = dtf.value\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") {\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${amString.value}|${\n                            pmString.value\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const timeGroups = matchWithGroups(formatRegex, time);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            timeGroups.hour = timeGroups.hour\n                ? parseInt(timeGroups.hour, 10)\n                : null;\n            timeGroups.minute = timeGroups.minute\n                ? parseInt(timeGroups.minute, 10)\n                : null;\n            timeGroups.second = timeGroups.second\n                ? parseInt(timeGroups.second, 10)\n                : null;\n            if (\n                timeGroups.hour &&\n                timeGroups.hour >= 0 &&\n                timeGroups.hour < 24 &&\n                timeGroups.minute &&\n                timeGroups.minute >= 0 &&\n                timeGroups.minute < 59\n            ) {\n                if (\n                    timeGroups.dayPeriod &&\n                    (timeGroups.dayPeriod.toLowerCase() ===\n                        pmString.value.toLowerCase() ||\n                        timeGroups.dayPeriod.toLowerCase() ===\n                            PM.toLowerCase()) &&\n                    timeGroups.hour < 12\n                ) {\n                    timeGroups.hour += 12;\n                }\n                const date = sampleTime.value;\n                date.setHours(timeGroups.hour);\n                date.setMinutes(timeGroups.minute);\n                date.setSeconds(timeGroups.second || 0);\n                return date;\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        let am = false;\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            const dateString12 = time.split(\" \");\n            time = dateString12[0];\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\n        }\n        const timeSplit = time.split(\":\");\n        let hours = parseInt(timeSplit[0], 10);\n        const minutes = parseInt(timeSplit[1], 10);\n        const seconds = props.enableSeconds ? parseInt(timeSplit[2], 10) : 0;\n        if (\n            isNaN(hours) ||\n            hours < 0 ||\n            hours > 23 ||\n            (props.hourFormat === HOUR_FORMAT_12 &&\n                (hours < 1 || hours > 12)) ||\n            isNaN(minutes) ||\n            minutes < 0 ||\n            minutes > 59\n        ) {\n            return null;\n        }\n        const date = sampleTime.value;\n        date.setSeconds(seconds);\n        date.setMinutes(minutes);\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            if (am && hours === 12) {\n                hours = 0;\n            } else if (!am && hours !== 12) {\n                hours += 12;\n            }\n        }\n        date.setHours(hours);\n        return new Date(date.getTime());\n    }\n\n    return {\n        defaultTimeFormatter,\n        defaultTimeParser,\n        pmString,\n        amString,\n        meridiens,\n        isHourFormat24,\n        hourLiteral,\n        minuteLiteral,\n        secondLiteral,\n    };\n}\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia, getActiveClasses } from \"@/composables\";\n\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile\n * @displayName Timepicker\n * @style _timepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTimepicker\",\n    configField: \"timepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date as PropType<Date>, default: undefined },\n    /** The active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** Min time to select */\n    minTime: { type: Date as PropType<Date>, default: undefined },\n    /** Max time to select */\n    maxTime: { type: Date as PropType<Date>, default: undefined },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Size of the button\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"timepicker.size\"),\n    },\n    hourFormat: {\n        type: [String, Number] as PropType<\"12\" | \"24\" | 12 | 24>,\n        validator: (value: string | number) =>\n            [\"12\", \"24\", 12, 24, undefined].includes(value),\n        default: undefined,\n    },\n    incrementHours: { type: Number, default: 1 },\n    incrementMinutes: { type: Number, default: 1 },\n    incrementSeconds: { type: Number, default: 1 },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.closeOnClick\", true),\n    },\n    enableSeconds: { type: Boolean, default: false },\n    defaultMinutes: { type: Number, default: undefined },\n    defaultSeconds: { type: Number, default: undefined },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    timeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"timepicker.timeFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    timeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"timepicker.timeParser\", defaultFunction)(date),\n    },\n    /** time creator function, default is `new Date()` */\n    timeCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"timepicker.timeCreator\", () => new Date())(),\n    },\n    /** Define a list of times which can not be selected */\n    unselectableTimes: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Reset the time inputs when meridian changes */\n    resetOnMeridianChange: {\n        type: Boolean,\n        default: false,\n    },\n    /** Dropdown trapFocus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.trapFocus\", true),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileModal\", true),\n    },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"timepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"timepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"timepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"timepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"timepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker separator */\n    separatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.dropdownClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.selectClasses\", {}),\n    },\n});\n\ndefineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst {\n    defaultTimeFormatter,\n    defaultTimeParser,\n    pmString,\n    amString,\n    meridiens,\n    isHourFormat24,\n    hourLiteral,\n    minuteLiteral,\n    secondLiteral,\n} = useTimepickerMixins(props);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\nconst vmodel = defineModel<Date>({ default: undefined });\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst hoursSelected = ref();\nconst minutesSelected = ref();\nconst secondsSelected = ref();\nconst meridienSelected = ref();\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n *   2. If it's invalid, validate again.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value) {\n            hoursSelected.value = value.getHours();\n            minutesSelected.value = value.getMinutes();\n            secondsSelected.value = value.getSeconds();\n            meridienSelected.value =\n                value.getHours() >= 12 ? pmString.value : amString.value;\n        } else {\n            hoursSelected.value = null;\n            minutesSelected.value = null;\n            secondsSelected.value = null;\n            meridienSelected.value = amString.value;\n        }\n    },\n    { immediate: true },\n);\n\n/** Format date into string */\nconst formattedValue = computed(() =>\n    (props.timeFormatter as any)(props.modelValue, defaultTimeFormatter),\n);\n\nconst nativeStep = computed(() => (props.enableSeconds ? \"1\" : null));\n\nwatch(\n    () => props.hourFormat,\n    () => {\n        if (hoursSelected.value !== null) {\n            meridienSelected.value =\n                hoursSelected.value >= 12 ? pmString.value : amString.value;\n        }\n    },\n);\n\nwatch(\n    () => props.locale,\n    (value) => {\n        // see updateInternalState default\n        if (!value) meridienSelected.value = amString.value;\n    },\n);\n\nfunction formatNumber(value: number, prependZero: boolean): string {\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\n}\n\nfunction pad(value: number): string {\n    return (value < 10 ? \"0\" : \"\") + value;\n}\n\nconst hours = computed(() => {\n    if (!props.incrementHours || props.incrementHours < 1)\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\n    const hours = [];\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\n        let value = i;\n        let label = value;\n        if (!isHourFormat24.value) {\n            value = i + 1;\n            label = value;\n            if (meridienSelected.value === amString.value) {\n                if (value === 12) {\n                    value = 0;\n                }\n            } else if (meridienSelected.value === pmString.value) {\n                if (value !== 12) {\n                    value += 12;\n                }\n            }\n        }\n        hours.push({\n            label: formatNumber(label, false),\n            value: value,\n        });\n    }\n    return hours;\n});\n\nconst minutes = computed(() => {\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\n    const minutes = [];\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\n        minutes.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return minutes;\n});\n\nconst seconds = computed(() => {\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\n        throw new Error(\"Second increment cannot be null or less than 1.\");\n    const seconds = [];\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\n        seconds.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return seconds;\n});\n\nfunction isHourDisabled(hour: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const noMinutesAvailable = minutes.value.every((minute) => {\n            return isMinuteDisabledForHour(hour, minute.value);\n        });\n        disabled = hour < minHours || noMinutesAvailable;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            disabled = hour > maxHours;\n        }\n    }\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hour);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(secondsSelected.value);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && secondsSelected.value !== null) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else if (minutesSelected.value !== null) {\n                    return (\n                        time.getHours() === hour &&\n                        time.getMinutes() === minutesSelected.value\n                    );\n                }\n                return false;\n            });\n            if (unselectable.length > 0) {\n                disabled = true;\n            } else {\n                disabled = minutes.value.every((minute) => {\n                    return (\n                        (props.unselectableTimes as Date[]).filter((time) => {\n                            return (\n                                time.getHours() === hour &&\n                                time.getMinutes() === minute.value\n                            );\n                        }).length > 0\n                    );\n                });\n            }\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const minMinutes = props.minTime.getMinutes();\n        disabled = hour === minHours && minute < minMinutes;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            const maxMinutes = props.maxTime.getMinutes();\n            disabled = hour === maxHours && minute > maxMinutes;\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabled(minute: number): boolean {\n    if (hoursSelected.value === null) return false;\n\n    let disabled = isHourDisabled(hoursSelected.value)\n        ? true\n        : isMinuteDisabledForHour(hoursSelected.value, minute);\n\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minute);\n            date.setSeconds(secondsSelected.value);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                if (props.enableSeconds && secondsSelected.value !== null) {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute &&\n                        time.getSeconds() === secondsSelected.value\n                    );\n                } else {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minute\n                    );\n                }\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n}\n\nfunction isSecondDisabled(second: number): boolean {\n    if (minutesSelected.value == null) return false;\n    let disabled = false;\n\n    if (isMinuteDisabled(minutesSelected.value)) {\n        disabled = true;\n    } else {\n        if (props.minTime) {\n            const minHours = props.minTime.getHours();\n            const minMinutes = props.minTime.getMinutes();\n            const minSeconds = props.minTime.getSeconds();\n            disabled =\n                hoursSelected.value === minHours &&\n                minutesSelected.value === minMinutes &&\n                second < minSeconds;\n        }\n        if (props.maxTime) {\n            if (!disabled) {\n                const maxHours = props.maxTime.getHours();\n                const maxMinutes = props.maxTime.getMinutes();\n                const maxSeconds = props.maxTime.getSeconds();\n                disabled =\n                    hoursSelected.value === maxHours &&\n                    minutesSelected.value === maxMinutes &&\n                    second > maxSeconds;\n            }\n        }\n    }\n    if (props.unselectableTimes && !disabled) {\n        if (typeof props.unselectableTimes === \"function\") {\n            const date = new Date();\n            date.setHours(hoursSelected.value);\n            date.setMinutes(minutesSelected.value);\n            date.setSeconds(second);\n            return props.unselectableTimes(date);\n        } else {\n            const unselectable = props.unselectableTimes.filter((time) => {\n                return (\n                    time.getHours() === hoursSelected.value &&\n                    time.getMinutes() === minutesSelected.value &&\n                    time.getSeconds() === second\n                );\n            });\n            disabled = unselectable.length > 0;\n        }\n    }\n}\n\nfunction isMeridienDisabled(meridienString: string): boolean {\n    const offset = meridienString == \"AM\" ? 0 : 12;\n    for (let i = 0; i < 12; i++) {\n        if (!isHourDisabled(i + offset)) return false;\n    }\n    return true;\n}\n\nfunction updateDateSelected(\n    hours: number,\n    minutes: number,\n    seconds: number,\n    meridiens,\n): void {\n    if (\n        hours != null &&\n        minutes != null &&\n        ((!isHourFormat24.value && meridiens !== null) || isHourFormat24.value)\n    ) {\n        let time: Date = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        time.setHours(hours);\n        time.setMinutes(minutes);\n        time.setSeconds(seconds);\n        if (!isNaN(time.getTime())) {\n            vmodel.value = new Date(time.getTime());\n        }\n    }\n}\n\n/** Format date into string 'HH-MM-SS'*/\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    // return null if no value is given or value can't parse to proper date\n    if (!value || !date || isNaN(date.getTime())) return null;\n\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return (\n        formatNumber(hours, true) +\n        \":\" +\n        formatNumber(minutes, true) +\n        \":\" +\n        formatNumber(seconds, true)\n    );\n}\n\n// --- Event Handler ---\n\nfunction onMeridienChange(value: string): void {\n    if (hoursSelected.value !== null && props.resetOnMeridianChange) {\n        hoursSelected.value = null;\n        minutesSelected.value = null;\n        secondsSelected.value = null;\n        vmodel.value = null;\n    } else if (hoursSelected.value !== null) {\n        if (value === pmString.value) hoursSelected.value += 12;\n        else if (value === amString.value) hoursSelected.value -= 12;\n    }\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        value,\n    );\n}\n\nfunction onHoursChange(value: string): void {\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\n        minutesSelected.value = props.defaultMinutes;\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        parseInt(value, 10),\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onMinutesChange(value: string): void {\n    if (!secondsSelected.value && props.defaultSeconds)\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        hoursSelected.value,\n        parseInt(value, 10),\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onSecondsChange(value: string): void {\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        parseInt(value, 10),\n        meridienSelected.value,\n    );\n}\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.timeParser as any)(value, defaultTimeParser);\n    vmodel.value = date ? date : null;\n}\n\n/** Parse time from string */\nfunction onChangeNativePicker(date: string): void {\n    if (date) {\n        let time = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        const t = date.split(\":\");\n        time.setHours(parseInt(t[0], 10));\n        time.setMinutes(parseInt(t[1], 10));\n        time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\n        vmodel.value = new Date(time.getTime());\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst selectSelectClasses = defineClasses([\n    \"selectClasses.selectClass\",\n    \"o-tpck__select\",\n]);\n\nconst selectPlaceholderClasses = defineClasses([\n    \"selectClasses.placeholderClass\",\n    \"o-tpck__select-placeholder\",\n]);\n\nconst selectBind = computed(() => ({\n    \"select-class\": getActiveClasses(selectSelectClasses.value),\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses.value),\n    ...props.selectClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tpck\"],\n    [\n        \"sizeClass\",\n        \"o-tpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-tpck--mobile\", null, isMobile],\n);\n\nconst separatorClasses = defineClasses([\"separatorClass\", \"o-tpck__separtor\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-tpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-tpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"timepicker\"\n        :value=\"vmodel\"\n        :picker=\"props\"\n        :formatted-value=\"formattedValue\"\n        native-type=\"time\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxTime)\"\n        :native-min=\"formatNative(minTime)\"\n        :native-step=\"nativeStep\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"hoursSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onHoursChange($event.target.value)\">\n            <option\n                v-for=\"hour in hours\"\n                :key=\"hour.value\"\n                :value=\"hour.value\"\n                :disabled=\"isHourDisabled(hour.value)\">\n                {{ hour.label }}\n            </option>\n        </o-select>\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"minutesSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onMinutesChange($event.target.value)\">\n            <option\n                v-for=\"minute in minutes\"\n                :key=\"minute.value\"\n                :value=\"minute.value\"\n                :disabled=\"isMinuteDisabled(minute.value)\">\n                {{ minute.label }}\n            </option>\n        </o-select>\n        <template v-if=\"enableSeconds\">\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\n            <o-select\n                v-bind=\"selectBind\"\n                v-model=\"secondsSelected\"\n                override\n                :disabled=\"disabled\"\n                placeholder=\"00\"\n                @change=\"onSecondsChange($event.target.value)\">\n                <option\n                    v-for=\"second in seconds\"\n                    :key=\"second.value\"\n                    :value=\"second.value\"\n                    :disabled=\"isSecondDisabled(second.value)\">\n                    {{ second.label }}\n                </option>\n            </o-select>\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\n        </template>\n        <o-select\n            v-if=\"!isHourFormat24\"\n            v-bind=\"selectBind\"\n            v-model=\"meridienSelected\"\n            override\n            :disabled=\"disabled\"\n            @change=\"onMeridienChange($event.target.value)\">\n            <option\n                v-for=\"meridien in meridiens\"\n                :key=\"meridien\"\n                :value=\"meridien\"\n                :disabled=\"isMeridienDisabled(meridien)\">\n                {{ meridien }}\n            </option>\n        </o-select>\n\n        <footer v-if=\"$slots.default\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional content on footer\n            -->\n            <slot />\n        </footer>\n    </OPickerWrapper>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { matchWithGroups } from \"../datepicker/utils\";\n\nimport type { DatepickerProps } from \"../datepicker/types\";\nimport type { TimepickerProps } from \"../timepicker/types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\n * @displayName Datetimepicker\n * @style _datetimepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatetimepicker\",\n    configField: \"datetimepicker\",\n    inheritAttrs: false,\n});\n\nconst AM = \"AM\";\nconst PM = \"PM\";\nconst HOUR_FORMAT_24 = \"24\";\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date, default: undefined },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Define props for the underlying datepicker component */\n    datepicker: {\n        type: Object as PropType<DatepickerProps>,\n        default: undefined,\n    },\n    /** Define props for the underlying timepicker component */\n    timepicker: {\n        type: Object as PropType<TimepickerProps>,\n        default: undefined,\n    },\n    /** Min date to select */\n    minDatetime: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDatetime: { type: Date, default: undefined },\n    /**\n     * Size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datetimepicker.size\"),\n    } /** Makes input full width when inside a grouped or addon field */,\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Display datetimepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    datetimeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    datetimeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    datetimeCreator: {\n        type: Function as PropType<(date: Date) => Date>,\n        default: (date: Date) =>\n            getOption(\n                \"datetimepicker.datetimeCreator\",\n                (d: Date) => new Date(d),\n            )(date),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datetimepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datetimepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the Datepicker wrapper */\n    datepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker wrapper */\n    timepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst timepickerProps = ref<TimepickerProps>(props.timepicker);\nwatch(\n    () => props.timepicker,\n    (value) => (timepickerProps.value = value),\n    { deep: true },\n);\nconst datepickerProps = ref<DatepickerProps>(props.datepicker);\nwatch(\n    () => props.datepicker,\n    (value) => (datepickerProps.value = value),\n    { deep: true },\n);\n\nconst isMobileNative = computed(\n    () => props.mobileNative && isMobileAgent.any(),\n);\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\n);\n\n// use form input functionality for native input\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\n    elementRef,\n    emits,\n    props,\n);\n\nwatch([() => isMobileNative.value, () => props.inline], () => {\n    // $refs attached, it's time to refresh datepicker (input)\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\n});\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst vmodel = defineModel<Date>({ default: undefined });\n\nfunction updateVModel(value: Date | Date[]): void {\n    if (!value) {\n        vmodel.value = undefined;\n        return;\n    }\n    if (Array.isArray(value)) {\n        updateVModel(value[0]);\n        return;\n    }\n    let date = new Date(value.getTime());\n    if (!props.modelValue) {\n        date = props.datetimeCreator(value);\n    } else {\n        // restore time part\n        if (\n            (value.getDate() !== props.modelValue.getDate() ||\n                value.getMonth() !== props.modelValue.getMonth() ||\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\n            value.getHours() === 0 &&\n            value.getMinutes() === 0 &&\n            value.getSeconds() === 0\n        ) {\n            date.setHours(\n                props.modelValue.getHours(),\n                props.modelValue.getMinutes(),\n                props.modelValue.getSeconds(),\n                0,\n            );\n        }\n    }\n    // check min and max range\n    if (props.minDatetime && date < props.minDatetime) {\n        date = props.minDatetime;\n    } else if (props.maxDatetime && date > props.maxDatetime) {\n        date = props.maxDatetime;\n    }\n    vmodel.value = new Date(date.getTime());\n}\n\nconst minDate = computed(() => {\n    if (!props.minDatetime)\n        return datepickerProps.value ? datepickerProps.value.minDate : null;\n    return new Date(\n        props.minDatetime.getFullYear(),\n        props.minDatetime.getMonth(),\n        props.minDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\nconst maxDate = computed(() => {\n    if (!props.maxDatetime)\n        return datepickerProps.value ? datepickerProps.value.maxDate : null;\n    return new Date(\n        props.maxDatetime.getFullYear(),\n        props.maxDatetime.getMonth(),\n        props.maxDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\n// Only enable min/max time if local (not necessarily UTC) date portion matches\nconst minTime = computed(() => {\n    if (\n        !props.minDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\n        vmodel.value.getDate() != props.minDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.minTime : null;\n    }\n    return props.minDatetime;\n});\n\nconst maxTime = computed(() => {\n    if (\n        !props.maxDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\n        vmodel.value.getDate() != props.maxDatetime.getDate()\n    ) {\n        return timepickerProps.value ? timepickerProps.value.maxTime : null;\n    }\n    return props.maxDatetime;\n});\n\nconst datepickerSize = computed(() =>\n    datepickerProps.value?.size ? datepickerProps.value.size : props.size,\n);\n\nconst timepickerSize = computed(() =>\n    timepickerProps.value?.size ? timepickerProps.value.size : props.size,\n);\n\nconst timepickerDisabled = computed(() =>\n    timepickerProps.value?.disabled\n        ? timepickerProps.value.disabled\n        : props.disabled,\n);\n\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    if (value && !isNaN(date.getTime())) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day) +\n            \"T\" +\n            ((hours < 10 ? \"0\" : \"\") + hours) +\n            \":\" +\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\n            \":\" +\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\n        );\n    }\n    return \"\";\n}\n\n// --- Time Format Feature ---\n\nconst enableSeconds = computed(() =>\n    timepickerRef.value?.enableSeconds\n        ? timepickerRef.value.enableSeconds\n        : false,\n);\n\nconst localeOptions = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: \"numeric\",\n            month: \"numeric\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: enableSeconds.value ? \"numeric\" : undefined,\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\n);\n\nconst isHourFormat24 = computed(\n    () =>\n        (timepickerProps.value?.hourFormat &&\n            timepickerProps.value.hourFormat === HOUR_FORMAT_24) ||\n        (!timepickerProps.value?.hourFormat && !localeOptions.value.hour12),\n);\n\nconst dtf = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: localeOptions.value.year || \"numeric\",\n            month: localeOptions.value.month || \"numeric\",\n            day: localeOptions.value.day || \"numeric\",\n            hour: localeOptions.value.hour || \"numeric\",\n            minute: localeOptions.value.minute || \"numeric\",\n            second: enableSeconds.value\n                ? localeOptions.value.second || \"numeric\"\n                : undefined,\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n        }),\n);\n\nconst amString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(10);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return AM;\n});\n\nconst pmString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(20);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return PM;\n});\n\nfunction defaultDatetimeParser(value: string): Date {\n    function defaultParser(date: string): Date {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\n            if (timepickerRef.value) {\n                dayPeriods.push(amString.value);\n                dayPeriods.push(pmString.value);\n            }\n            const parts = dtf.value.formatToParts(new Date());\n            const formatRegex = parts\n                .map((part, idx) => {\n                    if (part.type === \"literal\") {\n                        if (\n                            idx + 1 < parts.length &&\n                            parts[idx + 1].type === \"hour\"\n                        ) {\n                            return `[^\\\\d]+`;\n                        }\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\n                            \"|\",\n                        )})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const datetimeGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                datetimeGroups.year &&\n                datetimeGroups.year.length === 4 &&\n                datetimeGroups.month &&\n                datetimeGroups.month <= 12 &&\n                datetimeGroups.day &&\n                datetimeGroups.day <= 31 &&\n                datetimeGroups.hour &&\n                datetimeGroups.hour >= 0 &&\n                datetimeGroups.hour < 24 &&\n                datetimeGroups.minute &&\n                datetimeGroups.minute >= 0 &&\n                datetimeGroups.minute <= 59\n            ) {\n                const d = new Date(\n                    datetimeGroups.year,\n                    datetimeGroups.month - 1,\n                    datetimeGroups.day,\n                    datetimeGroups.hour,\n                    datetimeGroups.minute,\n                    datetimeGroups.second || 0,\n                );\n                return d;\n            }\n        }\n\n        return new Date(Date.parse(date));\n    }\n    const date = (props.datetimeParser as any)(value, defaultParser);\n    return date;\n}\n\nfunction defaultDatetimeFormatter(date: Date): string {\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\n        date ? dtf.value.format(date) : \"\",\n    );\n}\n\n// --- Event Handler ---\n\n/** Parse date from string */\nfunction onChangeNativePicker(event: Event): void {\n    const date = (event.target as HTMLInputElement).value;\n    const s = date ? date.split(/\\D/) : [];\n    if (s.length >= 5) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1], 10) - 1;\n        const day = parseInt(s[2], 10);\n        const hours = parseInt(s[3], 10);\n        const minutes = parseInt(s[4], 10);\n        // Seconds are omitted intentionally; they are unsupported by input\n        // type=datetime-local and cause the control to fail native validation\n        updateVModel(new Date(year, month, day, hours, minutes));\n    } else {\n        updateVModel(null);\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst datepickerWrapperClasses = defineClasses([\n    \"datepickerWrapperClass\",\n    \"o-dtpck__date\",\n]);\n\nconst timepickerWrapperClasses = defineClasses([\n    \"timepickerWrapperClass\",\n    \"o-dtpck__time\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-datepicker\n        v-if=\"!isMobileNative || inline\"\n        ref=\"datepickerRef\"\n        v-bind=\"{ ...$attrs, ...datepicker }\"\n        v-model:active=\"isActive\"\n        :model-value=\"vmodel\"\n        data-oruga=\"datetimepicker\"\n        :class=\"datepickerWrapperClasses\"\n        :rounded=\"rounded\"\n        :open-on-focus=\"openOnFocus\"\n        :position=\"position\"\n        :inline=\"inline\"\n        :readonly=\"readonly\"\n        :expanded=\"expanded\"\n        :close-on-click=\"false\"\n        :date-formatter=\"defaultDatetimeFormatter\"\n        :date-parser=\"defaultDatetimeParser\"\n        :min-date=\"minDate\"\n        :max-date=\"maxDate\"\n        :icon=\"icon\"\n        :icon-right=\"iconRight\"\n        :icon-right-clickable=\"iconRightClickable\"\n        :icon-pack=\"iconPack\"\n        :size=\"datepickerSize\"\n        :placeholder=\"placeholder\"\n        :range=\"false\"\n        :disabled=\"disabled\"\n        :mobile-native=\"isMobileNative\"\n        :locale=\"locale\"\n        :teleport=\"teleport\"\n        @update:model-value=\"updateVModel\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change-month=\"$emit('change-month', $event)\"\n        @change-year=\"$emit('change-year', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template #footer>\n            <div :class=\"timepickerWrapperClasses\">\n                <o-timepicker\n                    ref=\"timepickerRef\"\n                    v-bind=\"timepicker\"\n                    v-model=\"vmodel\"\n                    inline\n                    :readonly=\"readonly\"\n                    :min-time=\"minTime\"\n                    :max-time=\"maxTime\"\n                    :size=\"timepickerSize\"\n                    :disabled=\"timepickerDisabled\"\n                    :mobile-native=\"isMobileNative\"\n                    :locale=\"locale\" />\n            </div>\n            <template v-if=\"$slots.footer !== undefined\">\n                <!--\n                    @slot Define an additional footer\n                -->\n                <slot name=\"footer\" />\n            </template>\n        </template>\n    </o-datepicker>\n\n    <!-- Native Picker -->\n    <o-input\n        v-else\n        v-bind=\"$attrs\"\n        ref=\"nativeInputRef\"\n        type=\"datetime-local\"\n        autocomplete=\"off\"\n        :value=\"formatNative(vmodel)\"\n        :max=\"formatNative(maxDate)\"\n        :min=\"formatNative(minDate)\"\n        :placeholder=\"placeholder\"\n        :size=\"datepickerSize\"\n        :icon-pack=\"iconPack\"\n        :icon=\"icon\"\n        :rounded=\"rounded\"\n        :disabled=\"disabled\"\n        :readonly=\"false\"\n        :use-html5-validation=\"false\"\n        @change=\"onChangeNativePicker\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\" />\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Datetimepicker from \"./Datetimepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datetimepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datetimepicker);\n    },\n} as Plugin;\n\n/** export datetimepicker components */\nexport { Datetimepicker as ODatetimepicker };\n", "import type { App, Plugin } from \"vue\";\n\nimport Dropdown from \"./Dropdown.vue\";\nimport DropdownItem from \"./DropdownItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export dropdown plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Dropdown);\n        registerComponent(app, DropdownItem);\n    },\n} as Plugin;\n\n/** export dropdown components */\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    useSlots,\n    watch,\n    type PropType,\n    type VNodeArrayChildren,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isVNodeEmpty } from \"@/utils/helpers\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport { injectField, provideField } from \"./fieldInjection\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Fields are used to add functionality to controls and to attach/group components and elements together\n * @displayName Field\n * @style _field.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OField\",\n    configField: \"field\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Color of the field and help message, also adds a matching icon.\n     * Used by Input, Select and Autocomplete.\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: { type: String, default: undefined },\n    /** Field label */\n    label: { type: String, default: undefined },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    labelSize: {\n        type: String,\n        default: () => getOption(\"field.labelsize\"),\n    },\n    /** Same as native for set on the label */\n    labelFor: { type: String, default: undefined },\n    /** Help message text */\n    message: { type: String, default: undefined },\n    messageTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"field.messageTag\", \"p\"),\n    },\n    /**\n     * Direct child components/elements of Field will be grouped horizontally\n     * (see which ones at the top of the page).\n     */\n    grouped: { type: Boolean, default: false },\n    /** Allow controls to fill up multiple lines, making it responsive */\n    groupMultiline: { type: Boolean, default: false },\n    /** Group label and control on the same line for horizontal forms */\n    horizontal: { type: Boolean, default: false },\n    /** Field automatically attach controls together */\n    addons: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"field.mobileBreakpoint\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to align label and control in horizontal forms */\n    horizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields are grouped together */\n    groupedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields fill up multiple lines */\n    groupMultilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label size */\n    labelSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label when horizontal */\n    labelHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field body */\n    bodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** \"Class for field body when horizontal */\n    bodyHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for components automatically attached together when inside a field */\n    addonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the field message */\n    messageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the message field variant */\n    variantMessageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the label field variant */\n    variantLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of file component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the focused field */\n    focusedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the filled field */\n    filledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst inputId = ref(props.labelFor);\nwatch(\n    () => props.labelFor,\n    (v) => (inputId.value = v),\n);\n\n/** Set internal variant when prop change. */\nconst fieldVariant = ref(props.variant);\nwatch(\n    () => props.variant,\n    (v) => (fieldVariant.value = v),\n);\n\n/** Set internal message when prop change. */\nconst fieldMessage = ref(props.message);\nwatch(\n    () => props.message,\n    (v) => (fieldMessage.value = v),\n);\n\n/** Set parent message if we use Field in Field. */\nwatch(\n    () => fieldMessage.value,\n    (value) => {\n        if (parentField?.value?.hasInnerField) {\n            if (!parentField.value.fieldVariant)\n                parentField.value.setVariant(fieldVariant.value);\n            if (!parentField.value.fieldMessage)\n                parentField.value.setMessage(value);\n        }\n    },\n);\n\n/** this can be set from outside to update the focus state */\nconst isFocused = ref(false);\n/** this can be set from outside to update the filled state */\nconst isFilled = ref(false);\n/** this can be set from sub fields to update the has inner field state */\nconst hasInnerField = ref<boolean>(false);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n// tell parent field it has an inner field\nif (parentField?.value) parentField.value.addInnerField();\n\nconst slots = useSlots();\n\nconst hasLabel = computed(() => props.label || !!slots.label);\n\nconst hasMessage = computed(() => !!fieldMessage.value || !!slots.message);\n\nconst isGrouped = computed(\n    () =>\n        props.grouped ||\n        props.groupMultiline ||\n        hasInnerField.value ||\n        hasAddons.value,\n);\n\nconst hasAddons = computed(\n    () => props.addons && !props.horizontal && !!slots.default,\n);\n\nfunction getInnerContent(vnode): VNodeArrayChildren {\n    const slot = vnode();\n    return slot.length === 1 && Array.isArray(slot[0].children)\n        ? slot[0].children\n        : slot;\n}\n\n// --- Field Dependency Injection Feature ---\n\nconst rootRef = ref();\n\nfunction addInnerField(): void {\n    hasInnerField.value = true;\n}\nfunction setFocus(value: boolean): void {\n    isFocused.value = value;\n}\nfunction setFilled(value: boolean): void {\n    isFilled.value = value;\n}\nfunction setVariant(value: string): void {\n    fieldVariant.value = value;\n}\nfunction setMessage(value: string): void {\n    fieldMessage.value = value;\n}\nfunction setInputId(value: string): void {\n    inputId.value = value;\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed(() => ({\n    $el: rootRef.value,\n    props,\n    hasInnerField: hasInnerField.value,\n    hasMessage: hasMessage.value,\n    fieldVariant: fieldVariant.value,\n    fieldMessage: fieldMessage.value,\n    addInnerField,\n    setInputId,\n    setFocus,\n    setFilled,\n    setVariant,\n    setMessage,\n}));\n\n// Provide field component data via dependency injection.\nprovideField(provideData);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"horizontalClass\",\n        \"o-field--horizontal\",\n        null,\n        computed(() => !!props.horizontal),\n    ],\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\n);\n\nconst messageClasses = defineClasses(\n    [\"messageClass\", \"o-field__message\"],\n    [\n        \"variantMessageClass\",\n        \"o-field__message-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelClasses = defineClasses(\n    [\"labelClass\", \"o-field__label\"],\n    [\n        \"labelSizeClass\",\n        \"o-field__label-\",\n        computed(() => props.labelSize),\n        computed(() => !!props.labelSize),\n    ],\n    [\n        \"variantLabelClass\",\n        \"o-field__label-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelHorizontalClasses = defineClasses([\n    \"labelHorizontalClass\",\n    \"o-field__horizontal-label\",\n]);\n\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\n\nconst bodyHorizontalClasses = defineClasses([\n    \"bodyHorizontalClass\",\n    \"o-field__horizontal-body\",\n]);\n\nconst innerFieldClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"groupMultilineClass\",\n        \"o-field--grouped-multiline\",\n        null,\n        computed(() => props.groupMultiline),\n    ],\n\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\n    [\n        \"addonsClass\",\n        \"o-field--addons\",\n        null,\n        computed(() => !props.grouped && hasAddons.value),\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"field\" :class=\"rootClasses\">\n        <div v-if=\"horizontal\" :class=\"labelHorizontalClasses\">\n            <label v-if=\"hasLabel\" :for=\"inputId\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </div>\n        <template v-else>\n            <label v-if=\"hasLabel\" :for=\"inputId\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                    @binding {string} label - label property \n                -->\n                <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n            </label>\n        </template>\n\n        <div v-if=\"horizontal\" :class=\"bodyHorizontalClasses\">\n            <template\n                v-for=\"(element, index) in getInnerContent($slots.default)\"\n                :key=\"index\">\n                <component :is=\"element\" v-if=\"isVNodeEmpty(element)\" />\n\n                <OField\n                    v-else\n                    :variant=\"fieldVariant\"\n                    :addons=\"false\"\n                    :message-tag=\"messageTag\"\n                    :message-class=\"messageClass\">\n                    <!-- render inner default slot element -->\n                    <component :is=\"element\" />\n                    <!-- show field message here -->\n                    <template v-if=\"index === 0\" #message>\n                        <slot name=\"message\" :message=\"fieldMessage\">\n                            {{ fieldMessage }}\n                        </slot>\n                    </template>\n                </OField>\n            </template>\n        </div>\n\n        <div v-else-if=\"isGrouped\" :class=\"bodyClasses\">\n            <div :class=\"innerFieldClasses\">\n                <!--\n                   @slot Default content\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <template v-else>\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </template>\n\n        <component\n            :is=\"messageTag\"\n            v-if=\"hasMessage && !horizontal\"\n            :class=\"messageClasses\">\n            <!--\n                @slot Override the message\n                @binding {string} message - field message \n            -->\n            <slot name=\"message\" :message=\"fieldMessage\">\n                {{ fieldMessage }}\n            </slot>\n        </component>\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Field from \"./Field.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export field plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Field);\n    },\n} as Plugin;\n\n/** export field components */\nexport { Field as OField };\n", "import type { App, Plugin } from \"vue\";\n\nimport Icon from \"./Icon.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export icon plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Icon);\n    },\n} as Plugin;\n\n/** export icon components */\nexport { Icon as OIcon };\n", "import type { App, Plugin } from \"vue\";\n\nimport Input from \"./Input.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export input plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Input);\n    },\n} as Plugin;\n\n/** export input components */\nexport { Input as OInput };\n", "import { computed, getCurrentInstance, onMounted, type Ref } from \"vue\";\nimport type { ProgrammaticInstance } from \"..\";\nimport { isClient, HTMLElement } from \"@/utils/ssr\";\nimport { usePropBinding } from \"./usePropValue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { removeElement } from \"@/utils/helpers\";\n\ntype ProgrammaticProps = {\n    active: boolean;\n    /** Define if the component is cancelable at all or by specific events. */\n    cancelable?: boolean | string[];\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: (...args: any[]) => void;\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: (...args: any[]) => void;\n    /** DOM element where the programmatic component will be mounted on. */\n    container?: string | HTMLElement;\n    /** This defines the programmatic usage. */\n    programmatic?: ProgrammaticInstance;\n};\n\nexport interface ProgrammaticOptions {\n    /** Method options that allow the component to be cancelled. */\n    cancelOptions?: string[];\n    /** Destroy the component on hide. Default is `true`. */\n    destroyOnHide?: boolean;\n}\n\n/**\n * This provides functionalities for programmatic usage.\n * The component get appended to the container.\n * This defines a cancel and close handler, as well as escape handler.\n * The component will be distroyed on close.\n * @param elementRef HTMLElement which should injected\n * @param props ProgrammaticProps\n * @param emits [\"update:active\", \"close\"]\n * @param options\n */\nexport function useProgrammaticComponent(\n    elementRef: Ref<HTMLElement> | (() => HTMLElement),\n    props: ProgrammaticProps,\n    emits: {\n        (e: \"update:active\", value: boolean): void;\n        (e: \"close\", ...args: any[]): void;\n    },\n    options: ProgrammaticOptions = { cancelOptions: [\"escape\", \"outside\"] },\n) {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProgrammaticComponent must be called within a component setup function.\",\n        );\n\n    const isActive = usePropBinding(\"active\", props, emits);\n\n    const cancelOptions = computed(() =>\n        typeof props.cancelable === \"boolean\"\n            ? props.cancelable\n                ? options.cancelOptions\n                : []\n            : props.cancelable,\n    );\n\n    function getElement(): HTMLElement {\n        return typeof elementRef === \"function\"\n            ? elementRef()\n            : elementRef.value;\n    }\n\n    const container = computed(\n        (): HTMLElement =>\n            typeof props.container === \"string\"\n                ? document.querySelector<HTMLElement>(props.container)\n                : (props.container as HTMLElement) || document.body,\n    );\n\n    onMounted(() => {\n        if (props.programmatic) {\n            if (props.programmatic.instances) {\n                props.programmatic.instances.add(vm);\n            }\n            // Insert the component in the container or the body tag\n            // only if it's programmatic\n            const el = getElement();\n            container.value.appendChild(el);\n\n            isActive.value = true;\n        }\n    });\n\n    if (isClient) useEventListener(\"keyup\", onKeyPress, container.value);\n\n    /** Keypress event that is bound to the document. */\n    function onKeyPress(event: KeyboardEvent): void {\n        if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n            cancel(\"escape\");\n        }\n    }\n\n    /**\n     * Close the component if cancelable.\n     * @param method Cancel method\n     */\n    function cancel(method: string): void {\n        if (!props.cancelable || !isActive.value) return;\n        // check if method is in options\n        if (cancelOptions.value.indexOf(method) < 0) return;\n        props.onCancel.apply(null);\n        close({ action: \"cancel\", method });\n    }\n\n    /**\n     * Emit events, and destroy the component if it's programmatic.\n     * Can get called outside of a setup scope.\n     */\n    function close(...args: any[]): void {\n        vm.emit(\"close\");\n        props.onClose.apply(null, args);\n\n        if (props.programmatic) {\n            if (props.programmatic.instances)\n                props.programmatic.instances.remove(vm);\n\n            if (props.programmatic.resolve)\n                props.programmatic.resolve.apply(null, args);\n\n            // Timeout for the animation complete before destroying\n            setTimeout(() => {\n                // set active state of current instance\n                vm.props.active = false;\n                vm.emit(\"update:active\", false);\n                if (\n                    typeof options.destroyOnHide === \"undefined\" ||\n                    options.destroyOnHide\n                )\n                    if (isClient)\n                        window.requestAnimationFrame(() => {\n                            // remove the component from the container or the body tag\n                            const el = getElement();\n                            if (el) removeElement(el);\n                        });\n                    else {\n                        const el = getElement();\n                        if (el) removeElement(el);\n                    }\n            });\n        } else {\n            // set active state of current instance\n            vm.props.active = false;\n            vm.emit(\"update:active\", false);\n        }\n    }\n\n    return { close, cancel, isActive, container };\n}\n", "<script setup lang=\"ts\">\nimport { ref, onMounted, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProgrammaticComponent,\n    usePropBinding,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A simple loading overlay\n * @displayName Loading\n * @style _loading.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OLoading\",\n    configField: \"loading\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether loading is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Loader will overlay the full page. */\n    fullPage: { type: Boolean, default: true },\n    /** Notification label, unnecessary when default slot is used. */\n    label: { type: String, default: undefined },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"loading.animation\", \"fade\"),\n    },\n    /** Is Loading cancable by pressing escape or clicking outside. */\n    cancelable: { type: Boolean, default: false },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /** Icon name to show, unnecessary when default slot is used. */\n    icon: {\n        type: String,\n        default: () => getOption(\"loading.icon\", \"loading\"),\n    },\n    /** Enable spin effect on icon */\n    iconSpin: {\n        type: Boolean,\n        default: () => getOption(\"loading.iconSpin\", true),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"loading.iconSize\", \"medium\"),\n    },\n    /**\n     * DOM element where the loading component will be created on (for programmatic usage).\n     * Note that this also changes fullPage to false.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"loading.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when fullpage */\n    fullPageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the loading overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * fullPage prop two-way binding\n     * @param value {boolean} - updated fullPage prop\n     */\n    (e: \"update:fullPage\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\nconst displayInFullPage = usePropBinding(\"fullPage\", props, emits);\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"outside\"],\n    },\n);\n\nonMounted(() => {\n    if (props.programmatic && props.container) displayInFullPage.value = false;\n});\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-load\"],\n    [\"fullPageClass\", \"o-load--fullpage\", null, displayInFullPage],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-load__overlay\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-load__icon\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-load__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <div\n            v-if=\"isActive\"\n            ref=\"rootRef\"\n            data-oruga=\"loading\"\n            role=\"dialog\"\n            :class=\"rootClasses\">\n            <div\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"cancel('outside')\" />\n            <!-- \n                @slot Override icon and label\n                @binding {close} close - function to close the component\n            -->\n            <slot :close=\"close\">\n                <o-icon\n                    :icon=\"icon\"\n                    :spin=\"iconSpin\"\n                    :size=\"iconSize\"\n                    :class=\"iconClasses\"\n                    both />\n                <span v-if=\"label\" :class=\"labelClasses\">\n                    {{ label }}\n                </span>\n            </slot>\n        </div>\n    </transition>\n</template>\n", "export default class InstanceRegistry<T> {\n    entries: Array<T>;\n\n    constructor() {\n        this.entries = [];\n    }\n\n    add(entry: T): void {\n        this.entries.push(entry);\n    }\n\n    remove(entry: T): void {\n        const index = this.entries.indexOf(entry);\n        this.entries.splice(index, 1);\n    }\n\n    walk(callback: (value: T) => boolean | void): void {\n        // Walk a copy of the array so that the callback is allowed to remove the instance\n        this.entries = [...this.entries].filter((e) => {\n            const ret = callback(e);\n            return !(ret === true);\n        });\n    }\n}\n", "import { createVNode, render } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport type { LoadingProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        loading: typeof LoadingProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Loading>();\n\ntype LoadingProgrammaticProps = Readonly<\n    string | (LoadingProps & OrugaOptions[\"loading\"])\n>;\n\nconst LoadingProgrammatic = {\n    open(params: LoadingProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      label: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.label)) {\n            slot = componentParams.label;\n            delete componentParams.label;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Loading, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default LoadingProgrammatic;\n", "import type { App, Plugin } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export loading specific types */\nexport type { LoadingProps } from \"./types\";\n\n/** export loading plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Loading);\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\n    },\n} as Plugin;\n\n/** export loading components */\nexport { LoadingProgrammatic, Loading as OLoading };\n", "<script setup lang=\"ts\">\nimport { ref, computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type { MenuComponent, MenuItemComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple menu\n * @displayName Menu\n * @requires ./MenuItem.vue\n * @style _menu.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenu\",\n    configField: \"menu\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Menu label */\n    label: { type: String, default: undefined },\n    /** If sub menu items are collapsible */\n    accordion: { type: Boolean, default: true },\n    /** If the menu items are clickable */\n    activable: { type: Boolean, default: true },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.ariaRole\", \"menu\"),\n        validator: (value: string) =>\n            [\"menu\", \"list\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list label */\n    listLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootRef = ref();\n\n// provided data is a computed ref to enjure reactivity\nconst provideData = computed<MenuComponent>(() => ({\n    activable: props.activable,\n    accordion: props.accordion,\n    resetMenu,\n}));\n\n/** provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<MenuItemComponent>(rootRef, {\n    data: provideData,\n});\n\nfunction resetMenu(excludedItems: ProviderItem[] = []): void {\n    childItems.value.forEach((item) => {\n        if (!excludedItems.map((i) => i?.identifier).includes(item.identifier))\n            item.data.reset();\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\n\nconst labelClasses = defineClasses([\"listLabelClass\", \"o-menu__label\"]);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"menu\" :class=\"rootClasses\">\n        <div v-if=\"label || $slots.label\" :class=\"labelClasses\">\n            <!-- \n                @slot Override icon and label\n            -->\n            <slot name=\"label\">\n                <o-icon\n                    v-if=\"icon\"\n                    :icon=\"icon\"\n                    :pack=\"iconPack\"\n                    :size=\"iconSize\" />\n                <span>{{ label }}</span>\n            </slot>\n        </div>\n        <ul :class=\"listClasses\" :role=\"ariaRole\">\n            <!--\n                @slot Place menu items here \n            -->\n            <slot />\n        </ul>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { ref, computed, toRaw, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProviderChild,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type {\n    MenuComponent,\n    MenuItemComponent,\n    MenuItemProvider,\n} from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A menu list item\n * @displayName Menu Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenuItem\",\n    configField: \"menu\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** The active state of the menu item, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Menu item label */\n    label: { type: String, default: undefined },\n    /** Menu item will be expanded */\n    expanded: { type: Boolean, default: false },\n    /** Menu item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    /** Transition name to apply on menu list */\n    animation: {\n        type: String,\n        default: () => getOption(\"menu.animation\", \"slide\"),\n    },\n    /** Menu item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"menu.menuTag\", \"button\"),\n    },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * @values listitem, menuitem\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.itemAriaRole\", \"menuitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the menu item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the active menu item */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled menu item */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon of menu item */\n    itemIconTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu item when is a submenu */\n    itemSubmenuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element of menu item */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\ndefineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * expanded prop two-way binding\n     * @param value {boolean} updated expanded prop\n     */\n    (e: \"update:expanded\", value: boolean): void;\n}>();\n\nconst providedData = computed<MenuItemComponent>(() => ({\n    reset,\n}));\n\n// inject functionalities and data from the parent menu component\nconst { parent, item } = useProviderChild<MenuComponent>({\n    data: providedData,\n});\n\n// inject functionalities and data from the parent menu-item component\nconst providedItem = useProviderChild<MenuItemProvider>({\n    key: \"menu-item\",\n    needParent: false,\n});\n\nconst itemParent = computed(() => providedItem.parent?.value);\n\nconst isActive = defineModel<boolean>(\"active\", { default: false });\n\nconst isExpanded = defineModel<boolean>(\"expanded\", { default: false });\n\n/** template identifier */\nconst identifier = computed(() =>\n    itemParent.value\n        ? `menu-item-${providedItem.item.value.identifier}`\n        : `menu-${item.value.identifier}`,\n);\n\nfunction onClick(): void {\n    if (props.disabled) return;\n    triggerReset();\n    if (parent.value.accordion) isExpanded.value = !isExpanded.value;\n    if (parent.value.activable) isActive.value = !isActive.value;\n}\n\nfunction triggerReset(child?: ProviderItem): void {\n    // The point of this method is to collect references to the clicked item and any parent,\n    // this way we can skip resetting those elements.\n    if (typeof itemParent.value?.triggerReset === \"function\") {\n        itemParent.value.triggerReset(toRaw(item.value));\n    }\n    // else if not a sub item reset parent menu\n    else if (typeof parent.value.resetMenu === \"function\") {\n        parent.value.resetMenu([toRaw(item.value), child]);\n    }\n}\n\nfunction reset(): void {\n    if (parent.value.accordion) isExpanded.value = false;\n    if (parent.value.activable) isActive.value = false;\n}\n\nconst rootRef = ref();\n\n// provided data is a computed ref to enjure reactivity\nconst provideData = computed<MenuItemProvider>(() => ({\n    triggerReset,\n}));\n\n/** provide functionalities and data to child item components */\nuseProviderParent(rootRef, { key: \"menu-item\", data: provideData });\n\n// --- Computed Component Classes ---\n\nconst wrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-menu__item__wrapper\",\n]);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-menu__item\"],\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\n    [\n        \"itemDisabledClass\",\n        \"o-menu__item--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"itemIconTextClass\",\n        \"o-menu__item--icon-text\",\n        null,\n        computed(() => !!props.icon),\n    ],\n);\n\nconst submenuClasses = defineClasses([\n    \"itemSubmenuClass\",\n    \"o-menu__item__submenu\",\n]);\n</script>\n\n<template>\n    <li\n        ref=\"rootRef\"\n        :role=\"ariaRole\"\n        :class=\"wrapperClasses\"\n        :data-id=\"identifier\"\n        data-oruga=\"menu-item\"\n        aria-roledescription=\"item\">\n        <component\n            :is=\"tag\"\n            v-bind=\"$attrs\"\n            :class=\"itemClasses\"\n            role=\"button\"\n            :disabled=\"disabled\"\n            @keyup.enter=\"onClick()\"\n            @click=\"onClick()\">\n            <o-icon\n                v-if=\"icon\"\n                :icon=\"icon\"\n                :pack=\"iconPack\"\n                :size=\"iconSize\" />\n            <!-- \n                @slot Override label\n                @binding {boolean} expanded - item expanded state\n                @binding {boolean} active - item active state\n            -->\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\n                <span>{{ label }}</span>\n            </slot>\n        </component>\n\n        <!-- sub menu items -->\n        <template v-if=\"$slots.default\">\n            <transition :name=\"animation\">\n                <ul v-show=\"isExpanded\" :class=\"submenuClasses\">\n                    <!--\n                        @slot Place menu items here \n                    -->\n                    <slot />\n                </ul>\n            </transition>\n        </template>\n    </li>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Menu from \"./Menu.vue\";\nimport MenuItem from \"./MenuItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export menu plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Menu);\n        registerComponent(app, MenuItem);\n    },\n} as Plugin;\n\n/** export menu components */\nexport { Menu as OMenu, MenuItem as OMenuItem };\n", "<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    nextTick,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { getOption } from \"@/utils/config\";\nimport { removeElement, toCssDimension } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * Classic modal overlay to include any content you may need\n * @displayName Modal\n * @style _modal.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OModal\",\n    configField: \"modal\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Display modal as full screen */\n    fullScreen: { type: Boolean, default: false },\n    /** Text content, unnecessary when default slot is used */\n    content: { type: String, default: undefined },\n    /** Width of the Modal */\n    width: {\n        type: [String, Number],\n        default: () => getOption(\"modal.width\", 960),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"modal.animation\", \"zoom-out\"),\n    },\n    /**\n     * Is Modal cancleable by clicking 'X', pressing escape or clicking outside\n     * @values escape, x, outside, button, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"modal.cancelable\", [\"escape\", \"x\", \"outside\", \"button\"]),\n    },\n    /** Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"modal.scroll\", \"keep\"),\n        validator: (value: string) => [\"keep\", \"clip\"].indexOf(value) >= 0,\n    },\n    /** Trap focus inside the modal */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.trapFocus\", true),\n    },\n    /**\n     * Role attribute to be passed to the div wrapper for better accessibility.\n     * @values dialog, alertdialog\n     */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"modal.ariaRole\"),\n        validator: (value: string) =>\n            [\"dialog\", \"alertdialog\"].indexOf(value) >= 0,\n    },\n    /** Accessibility aria-label to be passed to the div wrapper element */\n    ariaLabel: { type: String, default: () => getOption(\"modal.ariaLabel\") },\n    /** Destroy modal on hide - default `true` for programmatic usage */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"modal.destroyOnHide\", false),\n    },\n    /** Automatically focus modal when active */\n    autoFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.autoFocus\", true),\n    },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"modal.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"modal.closeIconSize\", \"medium\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"modal.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"modal.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component modal programmatically.\n     * Close modal within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the modal component will be created on (for programmatic usage) */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"modal.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when fullscreen */\n    fullScreenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is clip */\n    scrollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is not clip */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"modal.cancelable\", [\n            \"escape\",\n            \"x\",\n            \"outside\",\n            \"button\",\n        ]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    handleScroll();\n    if (value && rootRef.value && props.autoFocus)\n        nextTick(() => rootRef.value.focus());\n    // mark the modal as destoyed after it get closed\n    if (!value && props.destroyOnHide)\n        // wait for transition finish\n        setTimeout(() => removeElement(rootRef.value));\n});\n\nconst showX = computed(() =>\n    Array.isArray(props.cancelable)\n        ? props.cancelable.indexOf(\"x\") >= 0\n        : props.cancelable,\n);\n\nconst customStyle = computed(() =>\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\n);\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        // reset scroll\n        const scrollto = savedScrollTop.value\n            ? savedScrollTop.value\n            : document.documentElement.scrollTop;\n        if (scrollClass.value) {\n            document.body.classList.remove(...scrollClass.value);\n            document.documentElement.classList.remove(...scrollClass.value);\n        }\n        document.documentElement.scrollTop = scrollto;\n        document.body.style.top = null;\n    }\n});\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value) {\n            if (isActive.value)\n                document.documentElement.classList.add(...scrollClass.value);\n            else\n                document.documentElement.classList.remove(...scrollClass.value);\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-modal\"],\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\n    [\"activeClass\", \"o-modal--active\", null, isActive],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-modal__content\"],\n    [\n        \"fullScreenClass\",\n        \"o-modal__content--full-screen\",\n        null,\n        computed(() => props.fullScreen),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <transition\n            :name=\"animation\"\n            @after-enter=\"afterEnter\"\n            @before-leave=\"beforeLeave\">\n            <div\n                v-show=\"isActive\"\n                v-bind=\"$attrs\"\n                ref=\"rootRef\"\n                v-trap-focus=\"trapFocus\"\n                data-oruga=\"modal\"\n                :class=\"rootClasses\"\n                :tabindex=\"-1\"\n                :role=\"ariaRole\"\n                :aria-label=\"ariaLabel\"\n                :aria-modal=\"isActive\">\n                <div\n                    :class=\"overlayClasses\"\n                    tabindex=\"-1\"\n                    aria-hidden=\"true\"\n                    @click=\"cancel('outside')\" />\n\n                <div :class=\"contentClasses\" :style=\"customStyle\">\n                    <!-- injected component for programmatic usage -->\n                    <component\n                        v-bind=\"$props.props\"\n                        :is=\"component\"\n                        v-if=\"component\"\n                        v-on=\"$props.events\"\n                        @close=\"close\" />\n                    <!--\n                        @slot Modal default content, default is content prop\n                        @binding {(...args): void} close - function to close the component\n                    -->\n                    <slot v-else :close=\"close\">\n                        <div v-if=\"content\">{{ content }}</div>\n                    </slot>\n\n                    <o-icon\n                        v-if=\"showX\"\n                        v-show=\"!isAnimating\"\n                        clickable\n                        both\n                        :class=\"closeClasses\"\n                        :icon=\"closeIcon\"\n                        :size=\"closeIconSize\"\n                        @click=\"cancel('x')\" />\n                </div>\n            </div>\n        </transition>\n    </Teleport>\n</template>\n", "import { createVNode, render } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport type { ModalProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        modal: typeof ModalProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Modal>();\n\ntype ModalProgrammaticProps = Readonly<\n    string | (ModalProps & OrugaOptions[\"modal\"])\n>;\n\nconst ModalProgrammatic = {\n    open(params: ModalProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      content: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.content)) {\n            slot = componentParams.content;\n            delete componentParams.content;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n            destroyOnHide: true, // set destroy on hide true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Modal, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default ModalProgrammatic;\n", "import type { App, Plugin } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport ModalProgrammatic from \"./ModalProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export modal specific types */\nexport type { ModalProps } from \"./types\";\n\n/** export modal plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Modal);\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\n    },\n} as Plugin;\n\n/** export modal components */\nexport { ModalProgrammatic, Modal as OModal };\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Bold notification blocks to alert your users of something\n * @displayName Notification\n * @requires ./NotificationNotice.vue\n * @style _notification.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotification\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: true },\n    /**\n     * Type (color) of the notification\n     * @values info, success, warning, danger\n     */\n    type: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"info\", \"success\", \"warning\", \"danger\", undefined].indexOf(value) >\n            -1,\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"notification.variant\"),\n    },\n    /**\n     * Which position the notification will appear when programmatically\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Message text (can contain HTML), unnecessary when default slot is used */\n    message: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: undefined,\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"notification.animation\", \"fade\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"notification.ariaCloseLabel\", \"Close\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"notification.iconPack\"),\n    },\n    /** Icon name to use */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"notification.iconSize\", \"large\"),\n    },\n    /** Add close button to the item that closes the notification */\n    closable: { type: Boolean, default: false },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"notification.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"notification.closeIconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button container */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content element */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon on the left */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when positioned */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notification variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\n/** Icon name (MDI) based on type. */\nconst computedIcon = computed(() => {\n    if (props.icon) return props.icon;\n\n    switch (props.type) {\n        case \"info\":\n            return \"information\";\n        case \"success\":\n            return \"check-circle\";\n        case \"warning\":\n            return \"alert\";\n        case \"danger\":\n            return \"alert-circle\";\n        default:\n            return null;\n    }\n});\n\n/** Close the Message and emit events. */\nfunction close(...args: any[]): void {\n    isActive.value = false;\n    emits(\"close\", ...args);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-notification\"],\n    [\n        \"variantClass\",\n        \"o-notification--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-notification--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\n    \"wrapperClass\",\n    \"o-notification__wrapper\",\n]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\n\nconst contentClasses = defineClasses([\n    \"contentClass\",\n    \"o-notification__content\",\n]);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <article\n            v-show=\"isActive\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"notification\">\n            <button\n                v-if=\"closable\"\n                :class=\"closeClasses\"\n                type=\"button\"\n                :aria-label=\"ariaCloseLabel\"\n                @click=\"close({ action: 'close', method: 'x' })\">\n                <o-icon\n                    clickable\n                    :pack=\"iconPack\"\n                    both\n                    :icon=\"closeIcon\"\n                    :size=\"closeIconSize\" />\n            </button>\n\n            <!--\n                @slot Notification inner content, outside of the message container\n                @binding {(...args): void} close - function to close the notification\n            -->\n            <slot name=\"inner\" :close=\"close\" />\n\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\n                <o-icon\n                    v-if=\"computedIcon\"\n                    :icon=\"computedIcon\"\n                    :pack=\"iconPack\"\n                    :class=\"iconClasses\"\n                    both\n                    :size=\"iconSize\"\n                    aria-hidden />\n                <div :class=\"contentClasses\">\n                    <!--\n                        @slot Notification default content, default is message prop\n                        @binding {(...args): void} close - function to close the notification\n                    -->\n                    <slot :close=\"close\">\n                        <span v-if=\"message\" v-html=\"message\" />\n                    </slot>\n                </div>\n            </div>\n        </article>\n    </transition>\n</template>\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    onMounted,\n    onBeforeMount,\n    watch,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { NotifcationProps } from \"./types\";\nimport type { ProgrammaticInstance, ComponentClass } from \"@/types\";\n\n/**\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage\n * @displayName Notification Notice\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotificationNotice\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether notification is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: true },\n    /**\n     * Which position the notification will appear when programmatically.\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Hide notification after duration (in miliseconds) */\n    duration: {\n        type: Number,\n        default: () => getOption(\"notification.duration\", 2000),\n    },\n    /** Show the Notification infinitely until it is dismissed. */\n    infinite: { type: Boolean, default: false },\n    /** If notice should queue with others notices (snackbar/toast/notification). */\n    queue: {\n        type: Boolean,\n        default: () => getOption(\"notification.queue\"),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Component to be injected.\n     * Close notification within the component by emitting a 'close' event — $emit('close').\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /**\n     * DOM element the toast will be created on (for programmatic usage).\n     * Note that this also changes the position of the toast from fixed to absolute.\n     * Meaning that the container should be fixed.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"notification.container\", \"body\"),\n    },\n    /**\n     * Props passed to the internal notification component.\n     * @ignore\n     */\n    notification: {\n        type: Object as PropType<NotifcationProps>,\n        default: () => ({}),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Root class of the notice */\n    noticeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notice when positioned */\n    noticePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the custom container element */\n    noticeCustomContainerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst notificationRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, container } = useProgrammaticComponent(\n    () => notificationRef.value.$el,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"x\"],\n    },\n);\n\nconst parentTop = ref(null);\nconst parentBottom = ref(null);\n\nconst timer = ref();\n\nwatch(\n    () => isActive,\n    (value) => {\n        if (value) setAutoClose();\n        else if (timer.value) clearTimeout(timer.value);\n    },\n);\n\n/** Create or inject notice dom container elements. */\nonBeforeMount(() => {\n    if (\n        noticeClasses.value &&\n        positionBottomClasses.value &&\n        positionTopClasses.value\n    ) {\n        const rootClasses = getActiveClasses(noticeClasses.value);\n        const topClasses = getActiveClasses(positionTopClasses.value);\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\n\n        parentTop.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\n        );\n        parentBottom.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\n        );\n\n        if (parentTop.value && parentBottom.value) return;\n\n        if (!parentTop.value) {\n            parentTop.value = document.createElement(\"div\");\n            parentTop.value.className = `${rootClasses.join(\n                \" \",\n            )} ${topClasses.join(\" \")}`;\n        }\n\n        if (!parentBottom.value) {\n            parentBottom.value = document.createElement(\"div\");\n            parentBottom.value.className = `${rootClasses.join(\n                \" \",\n            )} ${bottomClasses.join(\" \")}`;\n        }\n\n        container.value.appendChild(parentTop.value);\n        container.value.appendChild(parentBottom.value);\n\n        if (container.value.tagName !== \"BODY\") {\n            const classes = getActiveClasses(\n                noticeCustomContainerClasses.value,\n            );\n            if (classes?.length)\n                classes\n                    .filter((c) => !!c)\n                    .forEach((c: string) => {\n                        parentTop.value.classList.add(c);\n                        parentBottom.value.classList.add(c);\n                    });\n        }\n    }\n});\n\nonMounted(() => {\n    showNotice();\n    setAutoClose();\n});\n\nconst correctParent = computed(() => {\n    switch (props.position) {\n        case \"top-right\":\n        case \"top\":\n        case \"top-left\":\n            return parentTop.value;\n\n        case \"bottom-right\":\n        case \"bottom\":\n        case \"bottom-left\":\n            return parentBottom.value;\n        default:\n            return null;\n    }\n});\n\nconst shouldQueue = computed(() =>\n    props.queue\n        ? parentTop.value.childElementCount > 0 ||\n          parentBottom.value.childElementCount > 0\n        : false,\n);\n\nfunction showNotice(): void {\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\n    correctParent.value.insertAdjacentElement(\n        \"afterbegin\",\n        notificationRef.value.$el,\n    );\n    isActive.value = true;\n}\n\n/** Set timer to auto close message */\nfunction setAutoClose(): void {\n    if (!props.infinite) {\n        // clear old timer\n        if (timer.value) clearTimeout(timer.value);\n        // set new timer\n        timer.value = setTimeout(() => {\n            if (isActive.value)\n                handleClose({ action: \"close\", method: \"timeout\" });\n        }, props.duration);\n    }\n}\n\nfunction handleClose(...args: any[]): void {\n    clearTimeout(timer.value);\n    close(...args);\n}\n\n// --- Computed Component Classes ---\n\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\n\nconst positionTopClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"top\",\n]);\nconst positionBottomClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"bottom\",\n]);\n\nconst noticeCustomContainerClasses = defineClasses([\n    \"noticeCustomContainerClass\",\n    \"o-notices__custom-container\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close: handleClose, promise: props.promise });\n</script>\n\n<template>\n    <o-notification\n        v-bind=\"notification\"\n        ref=\"notificationRef\"\n        v-model:active=\"isActive\"\n        :position=\"position\"\n        @close=\"handleClose\">\n        <template #inner=\"{ close }\">\n            <!-- injected component for programmatic usage -->\n            <component\n                v-bind=\"$props.props\"\n                :is=\"component\"\n                v-if=\"component\"\n                v-on=\"$props.events\"\n                @close=\"close\" />\n        </template>\n        <slot />\n    </o-notification>\n</template>\n", "import { createVNode, render } from \"vue\";\n\nimport NotificationNotice from \"./NotificationNotice.vue\";\nimport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport { getOption } from \"@/utils/config\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        notification: typeof NotificationProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof NotificationNotice>();\n\ntype NotifcationProgrammaticProps = Readonly<\n    | string\n    | (NotifcationNoticeProps &\n          NotifcationProps &\n          OrugaOptions[\"notification\"] &\n          Record<string, unknown>)\n>;\n\nconst NotificationProgrammatic = {\n    open(params: NotifcationProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      message: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.message)) {\n            slot = componentParams.message;\n            delete componentParams.message;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n            position: getOption(\"notification.position\", \"top-right\"),\n        };\n\n        const notificationParams = componentParams.notification\n            ? componentParams.notification\n            : componentParams;\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.notification = merge({}, notificationParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(NotificationNotice, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default NotificationProgrammatic;\n", "import type { App, Plugin } from \"vue\";\n\nimport Notification from \"./Notification.vue\";\nimport NotificationProgrammatic from \"./NotificationProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export notification specific types */\nexport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\n/** export notification plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Notification);\n        registerComponentProgrammatic(\n            app,\n            \"notification\",\n            NotificationProgrammatic,\n        );\n    },\n} as Plugin;\n\n/** export notification components */\nexport { Notification as ONotification, NotificationProgrammatic };\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport type { ClassBind, DynamicComponent } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OPaginationButton\",\n    configField: \"pagination\",\n});\n\nconst props = defineProps({\n    number: { type: Number, default: undefined },\n    isCurrent: { type: Boolean, default: false },\n    click: {\n        type: Function as PropType<(event: Event) => void>,\n        required: true,\n    },\n    ariaLabel: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: \"button\" as DynamicComponent,\n    },\n    class: { type: String, default: undefined },\n    linkClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    linkCurrentClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\n// --- Computed Component Classes ---\n\nconst linkClasses = computed(() => [\n    ...props.linkClass,\n    props.class,\n    ...(props.isCurrent ? props.linkCurrentClass : []),\n]);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        role=\"button\"\n        :tabindex=\"disabled ? null : 0\"\n        :disabled=\"disabled\"\n        :class=\"linkClasses\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-current=\"isCurrent\"\n        @click.prevent=\"click\"\n        @keydown.enter.prevent=\"click\">\n        <slot>{{ number }}</slot>\n    </component>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, watch, nextTick, type PropType } from \"vue\";\n\nimport OPaginationButton from \"./PaginationButton.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A responsive and flexible pagination\n * @displayName Pagination\n * @style _pagination.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OPagination\",\n    configField: \"pagination\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Total count of items */\n    total: { type: Number, default: undefined },\n    /** Items count for each page */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"pagination.perPage\", 20),\n    },\n    /** Current page number, use v-model:current to make it two-way binding. */\n    current: { type: Number, default: 1 },\n    /** Number of pagination items to show before current page. */\n    rangeBefore: { type: Number, default: 1 },\n    /** Number of pagination items to show after current page. */\n    rangeAfter: { type: Number, default: 1 },\n    /**\n     * Pagination size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"pagination.size\"),\n    },\n    /** Simple style */\n    simple: {\n        type: Boolean,\n        default: () => getOption(\"pagination.simple\", false),\n    },\n    /** Rounded button style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"pagination.rounded\", false),\n    },\n    /**\n     * Buttons order\n     * @values centered, right, left\n     */\n    order: {\n        type: String,\n        default: () => getOption(\"pagination.order\", \"right\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Pagination button tag name */\n    buttonTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"pagination.buttonTag\", \"button\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"pagination.iconPack\"),\n    },\n    /** Icon to use for previous button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"pagination.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for next button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"pagination.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"pagination.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaNextLabel\", \"Next page\"),\n    },\n    /** Accessibility label for the previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () =>\n            getOption(\"pagination.ariaPreviousLabel\", \"Previous page\"),\n    },\n    /** Accessibility label for the page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaPageLabel\", \"page\"),\n    },\n    /** Accessibility label for the current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaCurrentLabel\", \"Current page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list items */\n    listItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the link button */\n    linkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the current link */\n    linkCurrentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination ellipsis */\n    ellipsisClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the info in `simple` mode */\n    infoClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination order */\n    orderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination in `simple` mode */\n    simpleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled link */\n    linkDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the pagination size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of pagination component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst current = usePropBinding(\"current\", props, emits);\n\n/** Total page size (count). */\nconst pageCount = computed(() =>\n    Math.ceil(props.total / Number(props.perPage)),\n);\n\n/** If current page is trying to be greater than page count, set to last. */\nwatch(\n    () => pageCount.value,\n    (value) => {\n        if (props.current > value) last();\n    },\n);\n\n/** First item of the page (count). */\nconst firstItem = computed(() => {\n    const perPage = Number(props.perPage);\n    const firstItem = props.current * perPage - perPage + 1;\n    return firstItem >= 0 ? firstItem : 0;\n});\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => props.current > 1);\n\n/** Check if first page button should be visible. */\nconst hasFirst = computed(() => props.current >= 2 + props.rangeBefore);\n\n/** Check if first ellipsis should be visible. */\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\n\n/** Check if last page button should be visible. */\nconst hasLast = computed(\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\n);\n\n/** Check if last ellipsis should be visible. */\nconst hasLastEllipsis = computed(\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\n);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => props.current < pageCount.value);\n\n/**\n * Get near pages, 1 before and 1 after the current.\n * Also add the click event to the array.\n */\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\n    if (props.simple) return;\n\n    let left = Math.max(1, props.current - props.rangeBefore);\n    if (left - 1 === 2) {\n        left--; // Do not show the ellipsis if there is only one to hide\n    }\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\n    if (pageCount.value - right === 2) {\n        right++; // Do not show the ellipsis if there is only one to hide\n    }\n\n    const pages = [];\n    for (let i = left; i <= right; i++) {\n        pages.push(getPage(i));\n    }\n    return pages;\n});\n\n/** Get properties for a page */\nfunction getPage(\n    num: number,\n    ariaLabel?: string,\n): {\n    number: number;\n    isCurrent: boolean;\n    click: (event: Event) => void;\n    ariaLabel: string;\n    tag: DynamicComponent;\n} {\n    return {\n        number: num,\n        isCurrent: props.current === num,\n        click: (event: Event): void => changePage(num, event),\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\n        tag: props.buttonTag,\n    };\n}\n\n/** Get text for aria-label according to page number. */\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\n        return (\n            props.ariaCurrentLabel +\n            \", \" +\n            props.ariaPageLabel +\n            \" \" +\n            pageNumber +\n            \".\"\n        );\n    return null;\n}\n\n/** Previous button click listener. */\nfunction prev(event?: Event): void {\n    changePage(props.current - 1, event);\n}\n\n/** Next button click listener. */\nfunction next(event?: Event): void {\n    changePage(props.current + 1, event);\n}\n\n/** First button click listener. */\nfunction first(event?: Event): void {\n    changePage(1, event);\n}\n\n/** Last button click listener. */\nfunction last(event?: Event): void {\n    changePage(pageCount.value, event);\n}\n\nfunction changePage(page: number, event: Event): void {\n    if (props.current === page || page < 1 || page > pageCount.value) return;\n    emits(\"change\", page);\n    current.value = page;\n\n    // Set focus on element to keep tab order\n    if (event && event.target)\n        nextTick(() => (event.target as HTMLElement).focus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-pag\"],\n    [\n        \"orderClass\",\n        \"o-pag--\",\n        computed(() => props.order),\n        computed(() => !!props.order),\n    ],\n    [\n        \"sizeClass\",\n        \"o-pag--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"simpleClass\", \"o-pag--simple\", null, computed(() => props.simple)],\n    [\"mobileClass\", \"o-pag--mobile\", null, isMobile],\n);\n\nconst prevBtnClasses = defineClasses(\n    [\"prevButtonClass\", \"o-pag__previous\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasPrev.value),\n    ],\n);\n\nconst nextBtnClasses = defineClasses(\n    [\"nextButtonClass\", \"o-pag__next\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasNext.value),\n    ],\n);\n\nconst infoClasses = defineClasses([\"infoClass\", \"o-pag__info\"]);\n\nconst ellipsisClasses = defineClasses([\"ellipsisClass\", \"o-pag__ellipsis\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-pag__list\"]);\n\nconst linkClasses = defineClasses(\n    [\"linkClass\", \"o-pag__link\"],\n    [\n        \"roundedClass\",\n        \"o-pag__link--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst linkCurrentClasses = defineClasses([\n    \"linkCurrentClass\",\n    \"o-pag__link--current\",\n]);\n\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pag__item\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ last, first, prev, next });\n</script>\n\n<template>\n    <nav :class=\"rootClasses\" data-oruga=\"pagination\">\n        <!-- \n            @slot Previous button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"previous\" v-bind=\"getPage(current - 1, ariaPreviousLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current - 1, ariaPreviousLabel)\"\n                :class=\"prevBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconPrev\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n        <!-- \n            @slot Next button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"next\" v-bind=\"getPage(current + 1, ariaNextLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current + 1, ariaNextLabel)\"\n                :class=\"nextBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconNext\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n\n        <small v-if=\"simple\" :class=\"infoClasses\">\n            <template v-if=\"perPage == 1\">\n                {{ firstItem }} / {{ total }}\n            </template>\n            <template v-else>\n                {{ firstItem }}-{{ Math.min(current * Number(perPage), total) }}\n                /\n                {{ total }}\n            </template>\n        </small>\n\n        <ul v-else :class=\"listClasses\">\n            <!--First-->\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\n                <slot v-bind=\"getPage(1)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(1)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n\n            <!--Pages-->\n            <li\n                v-for=\"page in pagesInRange\"\n                :key=\"page.number\"\n                :class=\"listItemClasses\">\n                <slot v-bind=\"page\">\n                    <o-pagination-button\n                        v-bind=\"page\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n\n            <!--Last-->\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\n                <!-- \n                    @slot Pagination button slot\n                    @binding {number} number - page number \n                    @binding {boolean} isCurrent - if page is current\n                    @binding {(event:Event): void} click - onClick handler\n                    @binding {string} ariaLabel - aria-label attribute\n                -->\n                <slot v-bind=\"getPage(pageCount)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(pageCount)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n        </ul>\n    </nav>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Pagination from \"./Pagination.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export pagination plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Pagination);\n    },\n} as Plugin;\n\n/** export pagination components */\nexport { Pagination as OPagination };\n", "<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an option from a set\n * @displayName Radio\n * @style _radio.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ORadio\",\n    configField: \"radio\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"radio.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"radio.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when radio is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\n\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-radio\"],\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-radio--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-radio--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-radio--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-radio__input\"],\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"radio\"\n        role=\"radio\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"radio\"\n            data-oruga-input=\"radio\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Radio from \"./Radio.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export radio plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Radio);\n    },\n} as Plugin;\n\n/** export radio components */\nexport { Radio as ORadio };\n", "import type { App, Plugin } from \"vue\";\n\nimport Select from \"./Select.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export select specific types */\nexport type { OptionsItem } from \"./types\";\n\n/** export select plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Select);\n    },\n} as Plugin;\n\n/** export select components */\nexport { Select as OSelect };\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { toCssDimension } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A placeholder for content to load\n * @displayName Skeleton\n * @style _skeleton.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSkeleton\",\n    configField: \"skeleton\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Show or hide loader\t */\n    active: { type: Boolean, default: true },\n    /** Show a loading animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.animated\", true),\n    },\n    /** Custom width */\n    width: { type: [Number, String], default: undefined },\n    /** Custom height */\n    height: { type: [Number, String], default: undefined },\n    /** Show a circle shape */\n    circle: { type: Boolean, default: false },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.rounded\", true),\n    },\n    /** Number of shapes to display */\n    count: { type: Number, default: 1 },\n    /**\n     * Size of skeleton\n     * @values small, medium, large\n     */\n    size: { type: String, default: undefined },\n    /**\n     * Skeleton position in relation to the element\n     * @values left, centered, right\n     */\n    position: {\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\n        default: \"left\",\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton animation */\n    animationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item rounded */\n    itemRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst itemStyle = computed(() => ({\n    height: toCssDimension(props.height),\n    width: toCssDimension(props.width),\n    borderRadius: props.circle ? \"50%\" : null,\n}));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-sklt\"],\n    [\n        \"positionClass\",\n        \"o-sklt--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-sklt__item\"],\n    [\n        \"itemRoundedClass\",\n        \"o-sklt__item--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n    [\n        \"animationClass\",\n        \"o-sklt__item--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n    [\n        \"sizeClass\",\n        \"o-sklt__item--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n</script>\n\n<template>\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\n        <div\n            v-for=\"i in count\"\n            :key=\"i\"\n            :class=\"itemClasses\"\n            :style=\"itemStyle\" />\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Skeleton from \"./Skeleton.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export skeleton plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Skeleton);\n    },\n} as Plugin;\n\n/** export skeleton components */\nexport { Skeleton as OSkeleton };\n", "<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    onMounted,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useClickOutside,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A sidebar to use as left/right overlay or static\n * @displayName Sidebar\n * @style _sidebar.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSidebar\",\n    configField: \"sidebar\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Color of the sidebar\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"sidebar.variant\"),\n    },\n    /** Show an overlay like modal */\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\n    /** Display the Sidebear inline */\n    inline: { type: Boolean, default: false },\n    /**\n     * Sidebar position\n     * @values top, right, bottom, left\n     */\n    position: {\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\n        default: () => getOption(\"sidebar.position\", \"left\"),\n    },\n    /** Show sidebar in fullheight */\n    fullheight: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullheight\", false),\n    },\n    /** Show sidebar in fullwidth */\n    fullwidth: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullwidth\", false),\n    },\n    /** Show a small sidebar */\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\n    /**\n     * Custom layout on mobile\n     * @values fullwidth, reduced, hidden\n     */\n    mobile: {\n        type: String,\n        default: getOption(\"sidebar.mobile\"),\n        validator: (value: string) =>\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\n    },\n    /** Expand sidebar on hover when reduced or mobile is reduce */\n    expandOnHover: {\n        type: Boolean,\n        default: getOption(\"sidebar.expandOnHover\", false),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"sidebar.animation\"),\n    },\n    /**\n     * Is Sidebar cancleable by pressing escape or clicking outside.\n     * @values escape, outside, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\n    },\n    /** Destroy sidebar on hide */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"sidebar.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component sidebar programmatically.\n     * Close sidebar within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"sidebar.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar when teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullheight */\n    fullheightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullwidth */\n    fullwidthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when its inlined */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when reduced */\n    reduceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when expanded on hover */\n    expandOnHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar clipped */\n    crollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar is not clipped */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is hidden */\n    hiddenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is visible */\n    visibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\nconst sidebarContent = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    if (props.overlay) handleScroll();\n    if (value) addHandler();\n    else removeHandler();\n});\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst transitionName = computed(() => {\n    if (props.animation) return props.animation;\n\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\n    const right = props.position === \"right\";\n    const open = right ? !isActive.value : isActive.value;\n\n    return open\n        ? vertical\n            ? \"slide-down\"\n            : \"slide-next\"\n        : vertical\n          ? \"slide-up\"\n          : \"slide-prev\";\n});\n\nconst hideOnMobile = computed(\n    () => props.mobile === \"hidden\" && isMobile.value,\n);\n\nonMounted(() => {\n    if (props.active) addHandler();\n});\n\nonBeforeUnmount(() => {\n    removeHandler();\n    if (isClient) {\n        if (props.overlay) {\n            // reset scroll\n            const scrollto = savedScrollTop.value\n                ? savedScrollTop.value\n                : document.documentElement.scrollTop;\n            if (scrollClass.value) {\n                document.body.classList.remove(...scrollClass.value);\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n            document.documentElement.scrollTop = scrollto;\n            document.body.style.top = null;\n        }\n    }\n});\n\nlet removeOutsideListener = null;\n\n/** add outside click event listener */\nfunction addHandler(): void {\n    if (isClient && !props.overlay) {\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\n    }\n}\n\n/** remove outside click event listener */\nfunction removeHandler(): void {\n    if (removeOutsideListener !== null) removeOutsideListener();\n}\n\n/** Close fixed sidebar if clicked outside. */\nfunction clickedOutside(event: Event): void {\n    if (props.inline || !isActive.value || isAnimating.value) return;\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\n        event.preventDefault();\n    cancel(\"outside\");\n}\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value?.length) {\n            if (isActive.value) {\n                document.documentElement.classList.add(...scrollClass.value);\n            } else {\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-side\"],\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\n    [\"activeClass\", \"o-side--active\", null, isActive],\n    [\n        \"teleportClass\",\n        \"o-side--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-side__content\"],\n    [\n        \"variantClass\",\n        \"o-side__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-side__content--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"fullheightClass\",\n        \"o-side__content--fullheight\",\n        null,\n        computed(() => props.fullheight),\n    ],\n    [\n        \"fullwidthClass\",\n        \"o-side__content--fullwidth\",\n        null,\n        computed(\n            () =>\n                props.fullwidth ||\n                (props.mobile === \"fullwidth\" && isMobile.value),\n        ),\n    ],\n    [\n        \"reduceClass\",\n        \"o-side__content--reduced\",\n        null,\n        computed(\n            () =>\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\n        ),\n    ],\n    [\n        \"expandOnHoverClass\",\n        \"o-side__content--reduced-expand\",\n        null,\n        computed(\n            () =>\n                props.expandOnHover &&\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\n        ),\n    ],\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\n    [\n        \"hiddenClass\",\n        \"o-side__content--hidden\",\n        null,\n        computed(() => !isActive.value),\n    ],\n);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <div\n            v-show=\"!hideOnMobile\"\n            ref=\"rootRef\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"sidebar\">\n            <div\n                v-if=\"overlay && isActive\"\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"(evt) => clickedOutside(evt)\" />\n            <transition\n                :name=\"transitionName\"\n                @after-enter=\"afterEnter\"\n                @before-leave=\"beforeLeave\">\n                <div\n                    v-show=\"isActive\"\n                    ref=\"sidebarContent\"\n                    :class=\"contentClasses\">\n                    <!--\n                        @slot Sidebar default content, default is component prop\n                        @binding {(...args):void} close - function to close the component\n                    -->\n                    <slot :close=\"close\">\n                        <!-- injected component for programmatic usage -->\n                        <component\n                            v-bind=\"$props.props\"\n                            :is=\"component\"\n                            v-if=\"component\"\n                            v-on=\"$props.events\"\n                            @close=\"close\" />\n                    </slot>\n                </div>\n            </transition>\n        </div>\n    </Teleport>\n</template>\n", "import { createVNode, render } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport type { SidebarProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        sidebar: typeof SidebarProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Sidebar>();\n\ntype SidebarProgrammaticProps = Readonly<\n    SidebarProps & OrugaOptions[\"sidebar\"]\n>;\n\nconst SidebarProgrammatic = {\n    open(params: SidebarProgrammaticProps): ProgrammaticExpose {\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, params);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const app = VueInstance;\n        const vnode = createVNode(Sidebar, propsData);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default SidebarProgrammatic;\n", "import type { App, Plugin } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export sidebar specific types */\nexport type { SidebarProps } from \"./types\";\n\n/** export sidebar plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Sidebar);\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\n    },\n} as Plugin;\n\n/** export sidebar components */\nexport { SidebarProgrammatic, Sidebar as OSidebar };\n", "<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Display a brief helper text to your user\n * @displayName Tooltip\n * @style _tooltip.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTooltip\",\n    configField: \"tooltip\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Tooltip text, unnecessary when content slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tooltip.variant\"),\n    },\n    /**\n     * Position of the Tooltip relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"tooltip.position\", \"auto\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Tooltip will be always active */\n    always: { type: Boolean, default: false },\n    /** Tooltip will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Tooltip default animation */\n    animation: {\n        type: String,\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\n    },\n    /** Tooltip will be multilined */\n    multiline: { type: Boolean, default: false },\n    /** Tooltip trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\n    },\n    /**\n     * Tooltip trigger events\n     * @values hover, click, focus, contextmenu\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Tooltip delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\n     * @values true, false, content, outside, escape\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content when is multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger when is always visible */\n    alwaysClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow position */\n    arrowPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on active change to false event */\n    (e: \"close\"): void;\n    /** on active change to true event */\n    (e: \"open\"): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\nwatch(isActive, (value) => {\n    if (value) emits(\"open\");\n    else emits(\"close\");\n});\n\nconst timer = ref();\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = ref([]);\n\nwatch(isActive, (value) => {\n    // on active set event handler\n    if (value && isClient) {\n        setTimeout(() => {\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                // set outside handler\n                eventCleanups.value.push(\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\n                );\n            }\n\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                // set keyup handler\n                eventCleanups.value.push(\n                    useEventListener(\"keyup\", onKeyPress, document, {\n                        immediate: true,\n                    }),\n                );\n            }\n        });\n    } else if (!value) {\n        // on close cleanup event handler\n        eventCleanups.value.forEach((fn) => fn());\n        eventCleanups.value.length = 0;\n    }\n});\n\nconst cancelOptions = computed<string[]>(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close tooltip if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.always) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    nextTick(() => setTimeout(() => open()));\n}\n\nfunction onContextMenu(event: Event): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nfunction onHover(): void {\n    if (props.triggers.indexOf(\"hover\") < 0) return;\n    open();\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer.value = setTimeout(() => {\n            isActive.value = true;\n            timer.value = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    isActive.value = !props.closeable;\n    if (timer.value && props.closeable) clearTimeout(timer.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tip\"],\n    [\n        \"teleportClass\",\n        \"o-tip--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\n\nconst arrowClasses = defineClasses(\n    [\"arrowClass\", \"o-tip__arrow\"],\n    [\n        \"arrowPositionClass\",\n        \"o-tip__arrow--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantArrowClass\",\n        \"o-tip__arrow--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tip__content\"],\n    [\n        \"positionClass\",\n        \"o-tip__content--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-tip__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"multilineClass\",\n        \"o-tip__content--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n    [\n        \"alwaysClass\",\n        \"o-tip__content--always\",\n        null,\n        computed(() => props.always),\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\n        <PositionWrapper\n            v-slot=\"{ setContent }\"\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"rootClasses\"\n            :trigger=\"triggerRef\"\n            default-position=\"top\"\n            :disabled=\"!isActive\">\n            <transition :name=\"animation\">\n                <div\n                    v-show=\"isActive || (always && !disabled)\"\n                    :ref=\"(el) => (contentRef = setContent(el as HTMLElement))\"\n                    :class=\"contentClasses\">\n                    <span :class=\"arrowClasses\"></span>\n\n                    <!--\n                        @slot Tooltip content, default is label prop\n                    -->\n                    <slot name=\"content\">{{ label }}</slot>\n                </div>\n            </transition>\n        </PositionWrapper>\n\n        <component\n            :is=\"triggerTag\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            aria-haspopup=\"true\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\"\n            @blur.capture=\"onClose\"\n            @mouseleave=\"onClose\">\n            <!--\n                @slot Tooltip trigger slot\n                @binding {boolean} active - tooltip active state\n            -->\n            <slot :active=\"isActive\" />\n        </component>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport OTooltip from \"../tooltip/Tooltip.vue\";\n\nimport { isClient } from \"@/utils/ssr\";\n\nimport type { SliderProps } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\n/**\n * @displayName Slider Thumb\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderThumb\",\n    configField: \"slider\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** parent slider component props  */\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\n    modelValue: { type: Number, required: true },\n    sliderSize: { type: Function as PropType<() => number>, required: true },\n    thumbWrapperClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    thumbClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /** on value change event */\n    (e: \"change\"): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\nconst slider = computed<SliderProps>(() => props.sliderProps);\n\nconst isFocused = ref(false);\nconst dragging = ref(false);\nconst startX = ref(0);\nconst startPosition = ref(0);\nconst newPosition = ref(null);\nconst oldValue = ref(props.modelValue);\n\nconst tooltip = computed(() => slider.value.tooltip);\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\nconst disabled = computed(() => slider.value.disabled);\nconst max = computed(() => slider.value.max);\nconst min = computed(() => slider.value.min);\nconst step = computed(() => slider.value.step);\nconst indicator = computed(() => slider.value.indicator);\n\nconst ariaLabel = computed(() =>\n    Array.isArray(slider.value.ariaLabel)\n        ? slider.value.ariaLabel[0]\n        : slider.value.ariaLabel,\n);\n\nconst precision = computed(() => {\n    const precisions = [min.value, max.value, step.value].map((item) => {\n        const decimal = (\"\" + item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    });\n    return Math.max(...precisions);\n});\n\nconst computedTooltipVariant = computed(() =>\n    slider.value.tooltipVariant\n        ? slider.value.tooltipVariant\n        : slider.value.variant,\n);\n\nconst currentPosition = computed(\n    () =>\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\n);\n\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\n\nconst formattedValue = computed(() => {\n    if (typeof slider.value.customFormatter !== \"undefined\")\n        return slider.value.customFormatter(props.modelValue);\n\n    if (slider.value.format === \"percent\")\n        return new Intl.NumberFormat(slider.value.locale, {\n            style: \"percent\",\n        }).format((props.modelValue - min.value) / (max.value - min.value));\n\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\n});\n\nfunction onFocus(): void {\n    isFocused.value = true;\n}\n\nfunction onBlur(): void {\n    isFocused.value = false;\n}\n\nfunction onButtonDown(event): void {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n\n    if (isClient) {\n        document.addEventListener(\"mousemove\", onDragging);\n        document.addEventListener(\"touchmove\", onDragging);\n        document.addEventListener(\"mouseup\", onDragEnd);\n        document.addEventListener(\"touchend\", onDragEnd);\n        document.addEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction onLeftKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) -\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onRightKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) +\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onHomeKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value = 0;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onEndKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value = 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onDragStart(event): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\n\n    startX.value = event.clientX;\n    startPosition.value = parseFloat(currentPosition.value);\n    newPosition.value = startPosition.value;\n}\n\nfunction onDragging(event): void {\n    if (dragging.value) {\n        if (event.type === \"touchmove\")\n            event.clientX = event.touches[0].clientX;\n\n        const diff =\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\n        newPosition.value = startPosition.value + diff;\n        setPosition(newPosition.value);\n    }\n}\n\nfunction onDragEnd(): void {\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.modelValue !== oldValue.value) emits(\"change\");\n\n    setPosition(newPosition.value);\n    if (isClient) {\n        document.removeEventListener(\"mousemove\", onDragging);\n        document.removeEventListener(\"touchmove\", onDragging);\n        document.removeEventListener(\"mouseup\", onDragEnd);\n        document.removeEventListener(\"touchend\", onDragEnd);\n        document.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction setPosition(percent: number): void {\n    if (percent === null || isNaN(percent)) return;\n    if (percent < 0) percent = 0;\n    else if (percent > 100) percent = 100;\n\n    const stepLength = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(percent / stepLength);\n    let value =\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emits(\"update:modelValue\", value);\n\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\n}\n\ndefineExpose({ setPosition });\n</script>\n\n<template>\n    <div\n        :class=\"thumbWrapperClasses\"\n        :style=\"wrapperStyle\"\n        data-oruga=\"slider-thumb\">\n        <o-tooltip\n            :label=\"formattedValue\"\n            :variant=\"computedTooltipVariant\"\n            :disabled=\"disabled || !tooltip\"\n            :always=\"tooltipAlways || dragging || isFocused\">\n            <div\n                v-bind=\"$attrs\"\n                :class=\"thumbClasses\"\n                :tabindex=\"disabled ? null : 0\"\n                role=\"slider\"\n                :aria-label=\"ariaLabel\"\n                :aria-valuenow=\"modelValue\"\n                :aria-valuemin=\"min\"\n                :aria-valuemax=\"max\"\n                :aria-disabled=\"disabled\"\n                aria-orientation=\"horizontal\"\n                @mousedown=\"onButtonDown\"\n                @touchstart=\"onButtonDown\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @keydown.left.prevent=\"onLeftKeyDown\"\n                @keydown.right.prevent=\"onRightKeyDown\"\n                @keydown.down.prevent=\"onLeftKeyDown\"\n                @keydown.up.prevent=\"onRightKeyDown\"\n                @keydown.home.prevent=\"onHomeKeyDown\"\n                @keydown.end.prevent=\"onEndKeyDown\">\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\n            </div>\n        </o-tooltip>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * @displayName Slider Tick\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderTick\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Value of single tick */\n    value: { type: Number, required: true },\n    /** Tick label */\n    label: { type: String, default: undefined },\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent } = useProviderChild<SliderComponent>();\n\nconst position = computed(() => {\n    const pos =\n        ((props.value - parent.value.min) /\n            (parent.value.max - parent.value.min)) *\n        100;\n    return pos >= 0 && pos <= 100 ? pos : 0;\n});\n\nconst hidden = computed(\n    () => props.value === parent.value.min || props.value === parent.value.max,\n);\n\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"tickClass\", \"o-slide__tick\"],\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\n);\n\nconst tickLabelClasses = defineClasses([\n    \"tickLabelClass\",\n    \"o-slide__tick-label\",\n]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\n            <!-- \n                @slot Override tick content, default is label prop\n             -->\n            <slot> {{ label }} </slot>\n        </span>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSliderThumb from \"./SliderThumb.vue\";\nimport OSliderTick from \"./SliderTick.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderParent } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A slider to select a value or range from a given range\n * @displayName Slider\n * @requires ./SliderTick.vue\n * @style _slider.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSlider\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Number, Array] as PropType<number | number[]>,\n        default: 0,\n    },\n    /** Minimum value */\n    min: { type: Number, default: 0 },\n    /** Maximum  value */\n    max: { type: Number, default: 100 },\n    /** Step interval of ticks */\n    step: { type: Number, default: 1 },\n    /**\n     * Color of the slider\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"slider.variant\"),\n    },\n    /**\n     * Vertical size of slider\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"slider.size\"),\n    },\n    /** Show tick marks */\n    ticks: { type: Boolean, default: false },\n    /** Show tooltip when thumb is being dragged */\n    tooltip: {\n        type: Boolean,\n        default: () => getOption(\"slider.tooltip\", true),\n    },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    tooltipVariant: {\n        type: String,\n        default: () => getOption(\"slider.tooltipVariant\"),\n    },\n    /** Tooltip displays always */\n    tooltipAlways: { type: Boolean, default: false },\n    /** Rounded thumb */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"slider.rounded\", false),\n    },\n    /** Slider will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Update v-model only when dragging is finished */\n    lazy: { type: Boolean, default: false },\n    /** Function to format the tooltip label for display */\n    customFormatter: { type: Function, default: undefined },\n    /** Increases slider size on focus */\n    biggerSliderFocus: { type: Boolean, default: false },\n    /** Show indicators */\n    indicator: { type: Boolean, default: false },\n    /**\n     * Define v-model format\n     * @values row, percent\n     */\n    format: {\n        type: String,\n        default: () => getOption(\"slider.format\", \"raw\"),\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\n    },\n    /** Date format locale */\n    locale: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"locale\"),\n    },\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\n    ariaLabel: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"slider.ariaLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the vertical slider size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider track */\n    trackClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the filled part of the slider */\n    fillClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the slider is rounded */\n    thumbRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the thumb gets dragged */\n    thumbDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb wrapper */\n    thumbWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb */\n    thumbClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider tick */\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display on the wrapper element when the slider is dragged */\n    thumbWrapperDraggingClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /**\n     * on value change event\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"change\", value: number | number[]): void;\n    /**\n     * on dragging event\n     * @param value {number | number[]} updated modelValue prop\n     * */\n    (e: \"dragging\", value: number | number[]): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\nfunction emitValue(event: any): void {\n    const val = isRange.value\n        ? [minValue.value, maxValue.value]\n        : valueStart.value || 0;\n    emits(event, val);\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<SliderComponent>(() => ({\n    max: props.max,\n    min: props.min,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(undefined, { data: provideData });\n\nconst sliderRef = ref();\nconst thumbStartRef = ref();\nconst thumbEndRef = ref();\n\nconst valueStart = ref<number>(null);\nconst valueEnd = ref<number>(null);\nconst dragging = ref(false);\nconst isRange = ref(false);\n\nconst isThumbReversed = ref();\nconst isTrackClickDisabled = ref();\n\nsetValues(props.modelValue);\n\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\n\n/** When min, max or v-model is changed set the new active step. */\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\n    setValues(props.modelValue),\n);\n\nconst tickValues = computed(() => {\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\n    const result = [];\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\n        result.push(i);\n    }\n    return result;\n});\n\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\n\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\n\nconst barSize = computed(() =>\n    isRange.value\n        ? `${\n              (100 * (maxValue.value - minValue.value)) /\n              (props.max - props.min)\n          }%`\n        : `${\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\n          }%`,\n);\n\nconst barStart = computed(() =>\n    isRange.value\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n        : \"0%\",\n);\n\nconst barStyle = computed(() => ({\n    width: barSize.value,\n    left: barStart.value,\n}));\n\nfunction setValues(newValue: number | number[]): void {\n    if (props.min > props.max) return;\n\n    if (Array.isArray(newValue)) {\n        isRange.value = true;\n        const smallValue =\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\n                ? props.min\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\n        const largeValue =\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\n                ? props.max\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\n    } else {\n        isRange.value = false;\n        valueStart.value = isNaN(newValue)\n            ? props.min\n            : Math.min(props.max, Math.max(props.min, newValue));\n        valueEnd.value = null;\n    }\n}\n\nfunction onInternalValueUpdate(): void {\n    if (isRange.value)\n        isThumbReversed.value = valueStart.value > valueEnd.value;\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\n    if (dragging.value) emitValue(\"dragging\");\n}\n\nfunction sliderSize(): number {\n    return sliderRef.value.getBoundingClientRect().width;\n}\n\nfunction onSliderClick(event: MouseEvent): void {\n    if (props.disabled || isTrackClickDisabled.value) return;\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\n    const diffFirst = Math.abs(targetValue - valueStart.value);\n    if (!isRange.value) {\n        if (diffFirst < props.step / 2) return;\n        thumbStartRef.value.setPosition(percent);\n    } else {\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\n        if (diffFirst <= diffSecond) {\n            if (diffFirst < props.step / 2) return;\n            thumbStartRef.value.setPosition(percent);\n        } else {\n            if (diffSecond < props.step / 2) return;\n            thumbEndRef.value.setPosition(percent);\n        }\n    }\n    emitValue(\"change\");\n}\n\nfunction onDragStart(): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n}\n\nfunction onDragEnd(): void {\n    isTrackClickDisabled.value = true;\n    // avoid triggering onSliderClick after dragend\n    setTimeout(() => (isTrackClickDisabled.value = false));\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.lazy) emitValue(\"update:modelValue\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-slide\"],\n    [\n        \"sizeClass\",\n        \"o-slide--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-slide--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\n\nconst fillClasses = defineClasses(\n    [\"fillClass\", \"o-slide__fill\"],\n    [\n        \"variantClass\",\n        \"o-slide__fill--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst thumbClasses = defineClasses(\n    [\"thumbClass\", \"o-slide__thumb\"],\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\n    [\n        \"thumbRoundedClass\",\n        \"o-slide__thumb--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst thumbWrapperClasses = defineClasses(\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\n    [\n        \"thumbWrapperDraggingClass\",\n        \"o-slide__thumb-wrapper--dragging\",\n        null,\n        dragging,\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\n            <template v-if=\"ticks\">\n                <o-slider-tick\n                    v-for=\"(val, key) in tickValues\"\n                    :key=\"key\"\n                    :value=\"val\"\n                    :tick-class=\"tickClass\"\n                    :tick-hidden-class=\"tickHiddenClass\"\n                    :tick-label-class=\"tickLabelClass\" />\n            </template>\n\n            <!--\n                @slot Define additional slider ticks here\n             -->\n            <slot />\n\n            <o-slider-thumb\n                ref=\"thumbStartRef\"\n                v-model=\"valueStart\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n\n            <o-slider-thumb\n                v-if=\"isRange\"\n                ref=\"thumbEndRef\"\n                v-model=\"valueEnd\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n        </div>\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Slider from \"./Slider.vue\";\nimport SliderTick from \"./SliderTick.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export slider specific types */\nexport type * from \"./types\";\n\n/** export slider plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Slider);\n        registerComponent(app, SliderTick);\n    },\n} as Plugin;\n\n/** export slider components */\nexport { Slider as OSlider, SliderTick as OSliderTick };\n", "<script setup lang=\"ts\">\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\n\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal process steps\n * @displayName Steps\n * @requires ./StepItem.vue\n * @style _steps.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSteps\",\n    configField: \"steps\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"steps.variant\"),\n    },\n    /**\n     * Step size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"steps.size\"),\n    },\n    /** Show step in vertical layout */\n    vertical: { type: Boolean, default: false },\n    /**\n     * Position of the step\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Icon pack to use for the navigation\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Icon to use for navigation button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for navigation button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\n    },\n    /**\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\n     */\n    hasNavigation: { type: Boolean, default: true },\n    /** Destroy stepItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Step navigation is animated */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"steps.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"steps.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"steps.animateInitially\", false),\n    },\n    /**\n     * Position of the marker label\n     * @values bottom, right, left\n     */\n    labelPosition: {\n        type: String,\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\n    },\n    /** Rounded step markers */\n    rounded: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"steps.mobileBreakpoint\"),\n    },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaNextLabel\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the steps */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the steps container */\n    stepsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Steps component when animation gets triggered */\n    animatedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps markers trigger when are rounded */\n    stepMarkerRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component dividers */\n    stepDividerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component marker */\n    stepMarkerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content */\n    stepContentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content when transition is happening */\n    stepContentTransitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component navigation element */\n    stepNavigationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link */\n    stepLinkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link when clickable */\n    stepLinkClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label */\n    stepLinkLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label when positioned */\n    stepLinkLabelPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of steps component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on step change event\n     * @param value {string | number} new step value\n     * @param value {string | number} old step value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<StepsComponent>(() => ({\n    activeValue: vmodel.value,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<StepItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/** When v-model is changed set the new active step. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => !!prevItem.value);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => !!nextItem.value);\n\n/** Retrieves the previous visible item */\nconst prevItem = computed(() => {\n    if (!activeItem.value) return null;\n\n    let prevItem = null;\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\n        if (items.value[idx].visible) {\n            prevItem = items.value[idx];\n            break;\n        }\n    }\n    return prevItem;\n});\n\n/** Retrieves the next visible item */\nconst nextItem = computed(() => {\n    let nextItem = null;\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\n    for (; idx < items.value.length; idx++) {\n        if (items.value[idx].visible) {\n            nextItem = items.value[idx];\n            break;\n        }\n    }\n    return nextItem;\n});\n\n/**\n * Return if the step should be clickable or not.\n */\nfunction isItemClickable(item: StepItem): boolean {\n    if (item.clickable === undefined)\n        return item.index < activeItem.value?.index;\n    return item.clickable;\n}\n\n/** Previous button click listener. */\nfunction prev(): void {\n    if (hasPrev.value) itemClick(prevItem.value);\n}\n\n/** Previous button click listener. */\nfunction next(): void {\n    if (hasNext.value) itemClick(nextItem.value);\n}\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: StepItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = activeItem.value.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-steps__wrapper\"],\n    [\n        \"sizeClass\",\n        \"o-steps--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"verticalClass\",\n        \"o-steps__wrapper-vertical\",\n        null,\n        computed(() => props.vertical),\n    ],\n    [\n        \"positionClass\",\n        \"o-steps__wrapper-position-\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\n);\n\nconst wrapperClasses = defineClasses(\n    [\"stepsClass\", \"o-steps\"],\n    [\n        \"animatedClass\",\n        \"o-steps--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n);\n\nconst stepDividerClasses = defineClasses([\n    \"stepDividerClass\",\n    \"o-steps__divider\",\n]);\n\nconst stepMarkerClasses = defineClasses(\n    [\"stepMarkerClass\", \"o-steps__marker\"],\n    [\n        \"stepMarkerRoundedClass\",\n        \"o-steps__marker--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst stepContentClasses = defineClasses(\n    [\"stepContentClass\", \"o-steps__content\"],\n    [\n        \"stepContentTransitioningClass\",\n        \"o-steps__content-transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nconst stepNavigationClasses = defineClasses([\n    \"stepNavigationClass\",\n    \"o-steps__navigation\",\n]);\n\nconst stepLinkLabelClasses = defineClasses([\n    \"stepLinkLabelClass\",\n    \"o-steps__title\",\n]);\n\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\n    const classes = defineClasses(\n        [\"stepLinkClass\", \"o-steps__link\"],\n        [\n            \"stepLinkLabelPositionClass\",\n            \"o-steps__link-label-\",\n            props.labelPosition,\n            !!props.labelPosition,\n        ],\n        [\n            \"stepLinkClickableClass\",\n            \"o-steps__link-clickable\",\n            null,\n            isItemClickable(childItem),\n        ],\n    );\n\n    return classes.value;\n}\n\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\n        [\n            \"itemHeaderVariantClass\",\n            \"o-steps__nav-item--\",\n            childItem.variant || props.variant,\n            !!childItem.variant || !!props.variant,\n        ],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-steps__nav-item-active\",\n            null,\n            childItem.value === activeItem.value.value,\n        ],\n        [\n            \"itemHeaderPreviousClass\",\n            \"o-steps__nav-item-previous\",\n            null,\n            activeItem.value.index > childItem.index,\n        ],\n    );\n\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\n        <ol :class=\"wrapperClasses\">\n            <li\n                v-for=\"(childItem, index) in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :aria-current=\"\n                    childItem.value === activeItem.value ? 'step' : undefined\n                \"\n                :class=\"itemClasses(childItem)\">\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\n\n                <component\n                    :is=\"childItem.tag\"\n                    role=\"button\"\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\n                    :class=\"stepLinkClasses(childItem)\"\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\n                    @keydown.enter=\"\n                        isItemClickable(childItem) && itemClick(childItem)\n                    \">\n                    <div :class=\"stepMarkerClasses\">\n                        <o-icon\n                            v-if=\"childItem.icon\"\n                            :icon=\"childItem.icon\"\n                            :pack=\"childItem.iconPack\"\n                            :size=\"size\" />\n                        <span v-else-if=\"childItem.step\">\n                            {{ childItem.step }}\n                        </span>\n                    </div>\n\n                    <div :class=\"stepLinkLabelClasses\">\n                        {{ childItem.label }}\n                    </div>\n                </component>\n            </li>\n        </ol>\n\n        <section :class=\"stepContentClasses\">\n            <!--\n                @slot Place step items here\n            -->\n            <slot />\n        </section>\n\n        <!--\n            @slot Override step navigation\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\n        -->\n        <slot\n            name=\"navigation\"\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\n            :next=\"{ disabled: !hasNext, action: next }\">\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconPrev\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasPrev\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\" />\n\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconNext\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasNext\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\" />\n            </nav>\n        </slot>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { StepsComponent, StepItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Step Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OStepItem\",\n    configField: \"steps\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Step marker content (when there is no icon) */\n    step: { type: [String, Number], default: undefined },\n    /**\n     * Default style for the step.\n     * This will override parent type.\n     * Could be used to set a completed step to \"success\" for example\n     */\n    variant: { type: String, default: undefined },\n    /**\n     * Item can be used directly to navigate.\n     * If undefined, previous steps are clickable while the others are not\n     */\n    clickable: { type: Boolean, default: undefined },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"steps.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Step item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the content item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item behind the active one */\n    itemHeaderPreviousClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item with variant (default value by parent steps component) */\n    itemHeaderVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on step item activate event */\n    (e: \"activate\"): void;\n    /** on step item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<StepItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<StepsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`steps-${item.identifier}`\"\n                data-oruga=\"steps-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                @slot Step item content\n            -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Steps from \"./Steps.vue\";\nimport StepItem from \"./StepItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export steps specific types */\nexport type * from \"./types\";\n\n/** export steps plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Steps);\n        registerComponent(app, StepItem);\n    },\n} as Plugin;\n\n/** export steps components */\nexport { Steps as OSteps, StepItem as OStepItem };\n", "<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Switch between two opposing states\n * @displayName Switch\n * @style _switch.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSwitch\",\n    configField: \"switch\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"switch.variant\"),\n    },\n    /**\n     * Color of the switch when is passive\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    passiveVariant: {\n        type: String,\n        default: () => getOption(\"switch.passiveVariant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"switch.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Name attribute on native checkbox */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Rounded style */\n    rounded: { type: Boolean, default: true },\n    /** Label position */\n    position: { type: String, default: \"right\" },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when switch is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check */\n    switchClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check when checked */\n    switchCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the inner switch check */\n    switchCheckClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch passive variant */\n    passiveVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of switch label position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Root class of the native input checkbox */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\n    passive: true,\n});\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-switch\"],\n    [\n        \"sizeClass\",\n        \"o-switch--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-switch--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-switch--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-switch--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"passiveVariantClass\",\n        \"o-switch--\",\n        computed(() => props.passiveVariant + \"-passive\"),\n        computed(() => !!props.passiveVariant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-switch__input\"],\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\n);\n\nconst switchClasses = defineClasses(\n    [\"switchClass\", \"o-switch__check\"],\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst switchCheckClasses = defineClasses(\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"switch\"\n        role=\"switch\"\n        :aria-checked=\"isChecked\"\n        @click=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            role=\"switch\"\n            data-oruga-input=\"switch\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span :class=\"switchClasses\">\n            <span :class=\"switchCheckClasses\"></span>\n        </span>\n\n        <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Switch from \"./Switch.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export switch plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Switch);\n    },\n} as Plugin;\n\n/** export switch components */\nexport { Switch as OSwitch };\n", "import type { DefineComponent, PropType } from \"vue\";\nimport { defineComponent, h } from \"vue\";\nimport type { DynamicComponent } from \"@/types\";\n\n/** This components renders a specific slot and only the slot of another component */\nexport default defineComponent({\n    name: \"OSlotComponent\",\n    props: {\n        /** Component to be get the slot from */\n        component: { type: Object, required: true },\n        /** Slot name */\n        name: { type: String, default: \"default\" },\n        /** Props passed to the slot */\n        props: { type: Object, default: () => {} },\n        /** Tag name of the slot wrapper element */\n        tag: {\n            type: [String, Object, Function] as PropType<DynamicComponent>,\n            default: \"div\" as DynamicComponent,\n        },\n    },\n    render() {\n        const slot = (this.component as DefineComponent).$slots[this.name]\n            ? (this.component as DefineComponent).$slots[this.name](this.props)\n            : {};\n\n        return h(this.tag, {}, slot);\n    },\n});\n", "<script setup lang=\"ts\">\nimport { computed, watch, ref, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OField from \"../field/Field.vue\";\n\nimport { getValueByPath } from \"@/utils/helpers\";\n\nimport type { TableColumn } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTableMobileSort\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    currentSortColumn: {\n        type: Object as PropType<TableColumn>,\n        default: undefined,\n    },\n    columns: {\n        type: Array as PropType<TableColumn[]>,\n        default: undefined,\n    },\n    placeholder: { type: String, default: undefined },\n    iconPack: { type: String, default: undefined },\n    sortIcon: { type: String, default: \"arrow-up\" },\n    sortIconSize: { type: String, default: \"small\" },\n    isAsc: { type: Boolean, default: false },\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"sort\", column: TableColumn, event: Event);\n}>();\n\nconst mobileSort = ref<string>(\n    getValueByPath(props.currentSortColumn, \"identifier\"),\n);\n\nconst showPlaceholder = computed(\n    () =>\n        !props.columns ||\n        !props.columns.some(\n            (column) =>\n                getValueByPath(column, \"identifier\") === mobileSort.value,\n        ),\n);\n\nconst sortableColumns = computed(() =>\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\n);\n\nconst isCurrentSort = computed(\n    () =>\n        getValueByPath(props.currentSortColumn, \"identifier\") ===\n        mobileSort.value,\n);\n\nwatch(mobileSort, (value) => {\n    if (props.currentSortColumn.identifier === value) return;\n    sort();\n});\n\nwatch(\n    () => props.currentSortColumn,\n    (column) => {\n        mobileSort.value = getValueByPath(column, \"identifier\");\n    },\n);\n\nfunction sort(event?: Event): void {\n    const column = sortableColumns.value.filter(\n        (c) => getValueByPath(c, \"identifier\") === mobileSort.value,\n    )[0];\n    emits(\"sort\", column, event);\n}\n</script>\n\n<template>\n    <div :class=\"mobileSortClasses\">\n        <o-field>\n            <o-select v-model=\"mobileSort\" expanded>\n                <template v-if=\"placeholder\">\n                    <option\n                        v-show=\"showPlaceholder\"\n                        :value=\"{}\"\n                        selected\n                        disabled\n                        hidden>\n                        {{ placeholder }}\n                    </option>\n                </template>\n                <option\n                    v-for=\"(column, index) in sortableColumns\"\n                    :key=\"index\"\n                    :value=\"column.identifier\">\n                    {{ column.label }}\n                </option>\n            </o-select>\n            <o-button @click=\"sort($event)\">\n                <o-icon\n                    v-show=\"isCurrentSort\"\n                    :icon=\"sortIcon\"\n                    :pack=\"iconPack\"\n                    :size=\"sortIconSize\"\n                    both\n                    :rotation=\"!isAsc ? 180 : 0\" />\n            </o-button>\n        </o-field>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { toRaw, computed, getCurrentInstance, type PropType } from \"vue\";\n\nimport { useProviderChild } from \"@/composables\";\nimport { toCssDimension } from \"@/utils/helpers\";\n\nimport type { TableColumnComponent } from \"./types\";\n\n/**\n * @displayName Table Column\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTableColumn\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    /** Define the column label */\n    label: { type: String, default: undefined },\n    /** Define an object property key if data is an object */\n    field: { type: String, default: undefined },\n    /** Define a column sub heading  */\n    subheading: { type: String, default: undefined },\n    /** Add addtional meta information for the column for custom purpose*/\n    meta: {\n        type: [String, Number, Boolean, Function, Object, Array],\n        default: undefined,\n    },\n    /** Column fixed width */\n    width: { type: [Number, String], default: undefined },\n    /** Define column value as number */\n    numeric: { type: Boolean, default: false },\n    /**\n     * Position of the column content\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    /** Enable an additional searchbar below the column header */\n    searchable: { type: Boolean, default: false },\n    /** Enable column sortability */\n    sortable: { type: Boolean, default: false },\n    /** Define whether the column is visible or not */\n    visible: { type: Boolean, default: true },\n    /** Define a custom sort function */\n    customSort: {\n        type: Function as PropType<\n            (a: unknown, b: unknown, isAsc: boolean) => number\n        >,\n        default: undefined,\n    },\n    /** Define a custom funtion for the filter search */\n    customSearch: {\n        type: Function as PropType<(row: unknown, filter: string) => boolean>,\n        default: undefined,\n    },\n    /** Whether the column is sticky or not */\n    sticky: { type: Boolean, default: false },\n    /** Make header selectable */\n    headerSelectable: { type: Boolean, default: false },\n    /**\n     * Adds native attributes to th\n     * @deprecated will be moved to table component in v0.9\n     */\n    thAttrs: {\n        type: Function as PropType<(column: typeof props) => object>,\n        default: () => ({}),\n    },\n    /**\n     * Adds native attributes to td\n     * @deprecated will be moved to table component in v0.9\n     */\n    tdAttrs: {\n        type: Function as PropType<\n            (row: unknown, column: typeof props) => object\n        >,\n        default: () => ({}),\n    },\n});\n\nconst style = computed(() => ({\n    width: toCssDimension(props.width),\n}));\n\nconst isHeaderUnselectable = computed(\n    () => !props.headerSelectable && props.sortable,\n);\n\nconst vm = getCurrentInstance();\n\nconst providedData = computed<TableColumnComponent>(() => ({\n    ...toRaw(props), // TODO: remove toRaw when tdAttrs/thAttrs are moved to table component\n    label: props.label,\n    field: props.field,\n    subheading: props.subheading,\n    meta: props.meta,\n    width: props.width,\n    numeric: props.numeric,\n    position: props.position,\n    searchable: props.searchable,\n    sortable: props.sortable,\n    visible: props.visible,\n    customSort: props.customSort,\n    customSearch: props.customSearch,\n    sticky: props.sticky,\n    headerSelectable: props.headerSelectable,\n    $el: vm.proxy,\n    $slots: vm.slots,\n    style: style.value,\n    isHeaderUnselectable: isHeaderUnselectable.value,\n}));\n\nconst { item } = useProviderChild({ data: providedData });\n</script>\n\n<template>\n    <span :data-id=\"item.identifier\" data-oruga=\"table-column\">\n        {{ label }}\n\n        <!--\n            Do not render these slots here.\n            These are only for documentation purposes.\n            Slots are defined in table component.\n        -->\n        <template v-if=\"false\">\n            <!--\n                @slot Default Slot\n                @binding {unknown} row - row data \n                @binding {Column} column - column definition \n                @binding {number} index - row index \n                @binding {number} colindex - column index \n                @binding {(row): void} toggle-details - toggle details function \n            -->\n            <slot\n                :row=\"null\"\n                :column=\"null\"\n                :index=\"null\"\n                :colindex=\"null\"\n                :toggle-details=\"null\" />\n            <!--\n                @slot Override header label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"header\" :column=\"null\" :index=\"null\" />\n            <!--\n                @slot Override subheading label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"subheading\" :column=\"null\" :index=\"null\" />\n\n            <!--\n                @slot Override searchable input \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n                @binding {Record<string,string>} filters - active filters object\n            -->\n            <slot\n                name=\"searchable\"\n                :column=\"null\"\n                :index=\"null\"\n                :filters=\"null\" />\n        </template>\n    </span>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\n\nimport OPagination from \"../pagination/Pagination.vue\";\n\nimport { usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTablePagination\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    current: { type: Number, default: undefined },\n    paginated: { type: Boolean, default: false },\n    rootClass: {\n        type: [String, Array, Object] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst currentPage = usePropBinding(\"current\", props, emits);\n\n/** Paginator change listener. */\nfunction pageChanged(page: number): void {\n    const newPage = page > 0 ? page : 1;\n    currentPage.value = newPage;\n    emits(\"change\", newPage);\n}\n</script>\n\n<template>\n    <div :class=\"rootClass\">\n        <div>\n            <slot />\n        </div>\n        <div>\n            <o-pagination\n                v-if=\"paginated\"\n                v-bind=\"$attrs\"\n                :current=\"currentPage\"\n                @change=\"pageChanged\" />\n        </div>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    watch,\n    onMounted,\n    nextTick,\n    useSlots,\n    toValue,\n    type PropType,\n} from \"vue\";\n\nimport OCheckbox from \"../checkbox/Checkbox.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OInput from \"../input/Input.vue\";\nimport OLoading from \"../loading/Loading.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport OTableMobileSort from \"./TableMobileSort.vue\";\nimport OTableColumn from \"./TableColumn.vue\";\nimport OTablePagination from \"./TablePagination.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    getValueByPath,\n    indexOf,\n    toCssDimension,\n    escapeRegExpChars,\n    removeDiacriticsFromString,\n    uuid,\n} from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useProviderParent,\n    usePropBinding,\n    useMatchMedia,\n    useDebounce,\n    getActiveClasses,\n} from \"@/composables\";\n\nimport type { Column, TableColumn, TableColumnComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Tabulated data are sometimes needed, it's even better when it's responsive\n * @displayName Table\n * @requires ./TableColumn.vue\n * @style _table.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTable\",\n    configField: \"table\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Table data */\n    data: { type: Array as PropType<unknown[]>, default: () => [] },\n    /** Table columns */\n    columns: { type: Array as PropType<Column[]>, default: () => [] },\n    /** Border to all cells */\n    bordered: {\n        type: Boolean,\n        default: () => getOption(\"table.bordered\", false),\n    },\n    /** Whether table is striped */\n    striped: {\n        type: Boolean,\n        default: () => getOption(\"table.striped\", false),\n    },\n    /** Makes the cells narrower */\n    narrowed: {\n        type: Boolean,\n        default: () => getOption(\"table.narrowed\", false),\n    },\n    /** Rows are highlighted when hovering */\n    hoverable: {\n        type: Boolean,\n        default: () => getOption(\"table.hoverable\", false),\n    },\n    /** Enable loading state */\n    loading: { type: Boolean, default: false },\n    /** Allow row details  */\n    detailed: { type: Boolean, default: false },\n    /** Rows can be checked (multiple) */\n    checkable: { type: Boolean, default: false },\n    /** Show check/uncheck all checkbox in table header when checkable */\n    headerCheckable: { type: Boolean, default: true },\n    /**\n     * Position of the checkbox when checkable\n     * @values left, right\n     */\n    checkboxPosition: {\n        type: String,\n        default: () => getOption(\"table.checkboxPosition\", \"left\"),\n        validator: (value: string) => [\"left\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Color of the checkbox when checkable\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    checkboxVariant: {\n        type: String,\n        default: () => getOption(\"table.checkboxVariant\"),\n    },\n    /** Set which row is selected, use v-model:selected to make it two-way binding */\n    selected: { type: Object, default: undefined },\n    /** Custom method to verify if a row is selectable, works when is selected. */\n    isRowSelectable: { type: Function, default: () => true },\n    /** Table can be focused and user can navigate with keyboard arrows (require selected) and rows are highlighted when hovering */\n    focusable: { type: Boolean, default: false },\n    /** Custom method to verify if row is checked, works when is checkable. Useful for backend pagination */\n    customIsChecked: {\n        type: Function as PropType<(row: unknown, data: unknown[]) => boolean>,\n        default: undefined,\n    },\n    /** Custom method to verify if a row is checkable, works when is checkable */\n    isRowCheckable: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.isRowCheckable\", (row) => true)(row),\n    },\n    /** Set which rows are checked, use v-model:checkedRows to make it two-way binding */\n    checkedRows: { type: Array, default: () => [] },\n    /** Rows appears as cards on mobile (collapse rows) */\n    mobileCards: {\n        type: Boolean,\n        default: () => getOption(\"table.mobileCards\", true),\n    },\n    /** Sets the default sort column and order — e.g. ['first_name', 'desc'] */\n    defaultSort: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"table.defaultSort\"),\n    },\n    /**\n     * Sets the default sort column direction on the first click\n     * @values asc, desc\n     */\n    defaultSortDirection: {\n        type: String,\n        default: () => getOption(\"table.defaultSortDirection\", \"asc\"),\n    },\n    /** Sets the header sorting icon */\n    sortIcon: {\n        type: String,\n        default: () => getOption(\"table.sortIcon\", \"arrow-up\"),\n    },\n    /**\n     * Sets the size of the sorting icon\n     * @values small, medium, large\n     */\n    sortIconSize: {\n        type: String,\n        default: () => getOption(\"table.sortIconSize\", \"small\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"table.iconPack\"),\n    },\n    /** Columns won't be sorted with Javascript, use with sort event to sort in your backend */\n    backendSorting: {\n        type: Boolean,\n        default: () => getOption(\"table.backendSorting\", false),\n    },\n    /** Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend */\n    backendFiltering: {\n        type: Boolean,\n        default: () => getOption(\"table.backendFiltering\", false),\n    },\n    /** Add a class to row based on the return */\n    rowClass: {\n        type: Function as PropType<(row: unknown, index: number) => string>,\n        default: (row: unknown, index: number) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.rowClass\", (row, index) => \"\")(row, index),\n    },\n    /** Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop) */\n    openedDetailed: { type: Array, default: () => [] },\n    /** Controls the visibility of the trigger that toggles the detailed rows. */\n    hasDetailedVisible: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.hasDetailedVisible\", (row) => true)(row),\n    },\n    /** Use a unique key of your data Object when use detailed or opened detailed. (id recommended) */\n    detailKey: {\n        type: String,\n        default: () => getOption(\"table.detailKey\"),\n    },\n    /** Allow chevron icon and column to be visible */\n    showDetailIcon: {\n        type: Boolean,\n        default: () => getOption(\"table.showDetailIcon\", true),\n    },\n    /** Icon name of detail action */\n    detailIcon: {\n        type: String,\n        default: () => getOption(\"table.detailIcon\", \"chevron-right\"),\n    },\n    /** Custom style on details */\n    customDetailRow: { type: Boolean, default: false },\n    /* Transition name to use when toggling row details. */\n    detailTransition: {\n        type: String,\n        default: () => getOption(\"table.detailTransition\", \"slide\"),\n    },\n    /** Text when nothing is selected */\n    mobileSortPlaceholder: {\n        type: String,\n        default: () => getOption(\"table.mobileSortPlaceholder\"),\n    },\n    /** Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended) */\n    customRowKey: {\n        type: String,\n        default: () => getOption(\"table.customRowKey\"),\n    },\n    /** Allows rows to be draggable */\n    draggable: { type: Boolean, default: false },\n    /** Allows columns to be draggable */\n    draggableColumn: { type: Boolean, default: false },\n    /** Add a horizontal scrollbar when table is too wide */\n    scrollable: { type: Boolean, default: undefined },\n    /** Show a sticky table header */\n    stickyHeader: { type: Boolean, default: false },\n    /** Table fixed height */\n    height: { type: [Number, String], default: undefined },\n    /** Add a native event to filter */\n    filtersEvent: { type: String, default: \"\" },\n    /** Filtering debounce time (in milliseconds) */\n    debounceSearch: {\n        type: Number,\n        default: () => getOption(\"table.debounceSearch\", undefined),\n    },\n    /** Show header */\n    showHeader: {\n        type: Boolean,\n        default: () => getOption(\"table.showHeader\", true),\n    },\n    /** Make the checkbox column sticky when checkable */\n    stickyCheckbox: { type: Boolean, default: false },\n    /** Adds pagination to the table */\n    paginated: {\n        type: Boolean,\n        default: () => getOption(\"table.paginated\", false),\n    },\n    /** Rows won't be paginated with Javascript, use with page-change event to paginate in your backend */\n    backendPagination: { type: Boolean, default: false },\n    /** Total number of table data if backend-pagination is enabled */\n    total: { type: Number, default: 0 },\n    /** Current page of table data (if paginated), use v-model:currentPage to make it two-way binding */\n    currentPage: { type: Number, default: 1 },\n    /** How many rows per page (if paginated) */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"table.perPage\", 20),\n    },\n    /**\n     * Pagination position (if paginated)\n     * @values bottom, top, both\n     */\n    paginationPosition: {\n        type: String,\n        default: () => getOption(\"table.paginationPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"top\", \"both\"].indexOf(value) >= 0,\n    },\n    /** Rounded pagination if paginated */\n    paginationRounded: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationRounded\", false),\n    },\n    /** Size of pagination if paginated */\n    paginationSize: {\n        type: String,\n        default: () => getOption(\"table.paginationSize\", \"small\"),\n    },\n    /** Enable simple style pagination if paginated */\n    paginationSimple: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationSimple\", false),\n    },\n    /**\n     * Pagination buttons order if paginated\n     * @values centered, right, left\n     */\n    paginationOrder: {\n        type: String,\n        default: () => getOption(\"table.paginationOrder\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"table.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the pagination next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaNextLabel\"),\n    },\n    /** Accessibility label for the pagination previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPreviousLabel\"),\n    },\n    /** Accessibility label for the pagination page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPageLabel\"),\n    },\n    /** Accessibility label for the pagination current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaCurrentLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when it is empty */\n    emptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row detail */\n    detailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is bordered */\n    borderedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are striped */\n    stripedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are narrowed */\n    narrowedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when header is sticky */\n    stickyHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when its content is scrollable */\n    scrollableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when selected */\n    trSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when checkable and checked */\n    trCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element */\n    thClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is positioned */\n    thPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is sticky\" */\n    thStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when is checkable */\n    thCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element currently sorted */\n    thCurrentSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable Table `th` element */\n    thSortableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element that is unsortable */\n    thUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table sort icon in the header */\n    thSortIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element of the detail column of triggers */\n    thDetailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` subheading element */\n    thSubheadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element */\n    tdClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is positioned */\n    tdPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is sticky */\n    tdStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when is checkable */\n    tdCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element that contains the chevron to trigger details */\n    tdDetailedChevronClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable form wrapper on mobile */\n    mobileSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table pagination wrapper */\n    paginationWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * currentPage prop two-way binding\n     * @param value {number} updated currentPage prop\n     */\n    (e: \"update:currentPage\", value: number): void;\n    /**\n     * on pagination page change event\n     * @param page {number} updated page\n     */\n    (e: \"page-change\", page: number): void;\n    /**\n     * select prop two-way binding\n     * @param value {typeof data} updated select prop\n     */\n    (e: \"update:selected\", value: unknown): void;\n    /**\n     * on row select event\n     * @param newRow {typeof data} new select value\n     * @param oldRow {typeof data} old select value\n     */\n    (e: \"select\", newrow: unknown, oldrow: unknown): void;\n    /**\n     * on row checked event\n     * @param value {Array<typeof data>} all checked rows\n     * @param row {typeof data} row data\n     */\n    (e: \"check\", value: Array<unknown>, row?: unknown): void;\n    /**\n     * on all rows checked event\n     * @param value {Array<typeof data>} all checked rows\n     */\n    (e: \"check-all\", value: Array<unknown>): void;\n    /**\n     * checkedRows prop two-way binding\n     * @param value {Array<typeof data>} updated checkedRows prop\n     */\n    (e: \"update:checkedRows\", value: Array<unknown>): void;\n    /**\n     * on column sort change event\n     * @param column {Column} column data\n     * @param direction {string}  'asc' or 'desc'\n     *\n     * @param event {Event} native  event\n     */\n    (e: \"sort\", column: Column, direction: \"asc\" | \"desc\", event: Event): void;\n    /**\n     * on filter change event\n     * @param filters {Record<string, string>} filter object\n     */\n    (e: \"filters-change\", value: Record<string, string>): void;\n    /**\n     * on natvie filter event based on props filtersEvent\n     * @param filtersEvent {string} props filtersEvent value\n     * @param filters {Record<string, string>} filter object\n     * @param event {Event} native  event\n     */\n    (\n        e: \"filters-event\",\n        filtersEvent: string,\n        filters: Record<string, string>,\n        event: Event,\n    ): void;\n    /**\n     * openedDetailed prop two-way binding\n     * @param value {Array<typeof data>} updated openedDetailed prop\n     */\n    (e: \"update:openedDetailed\", value: Array<unknown>): void;\n    /**\n     * on details open event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-open\", row: unknown): void;\n    /**\n     * on details close event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-close\", row: unknown): void;\n    /**\n     * on row click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"click\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row double click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"dblclick\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row right click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native contextmenu event\n     */\n    (e: \"contextmenu\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseenter event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseenter event\n     */\n    (e: \"mouseenter\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseleave event\n     */\n    (e: \"mouseleave\", row: unknown, index: number, event: Event): void;\n    /**\n     * on cell click event\n     * @param row {typeof data} row data\n     * @param column {Column} column data\n     * @param index {number} row index\n     * @param colindex {number} column index\n     * @param event {Event} native click event\n     */\n    (\n        e: \"cell-click\",\n        row: unknown,\n        column: Column,\n        index: number,\n        colindex: number,\n        event: Event,\n    ): void;\n    /**\n     * on row dragstart event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragstart event\n     */\n    (e: \"dragstart\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragend event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragend event\n     */\n    (e: \"dragend\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row drop event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native drop event\n     */\n    (e: \"drop\", row: unknown, index: number, event: DragEvent): void;\n\n    /**\n     * on row dragleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragleave event\n     */\n    (e: \"dragleave\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragover event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragover event\n     */\n    (e: \"dragover\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on column columndragstart event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragstart event\n     */\n    (\n        e: \"columndragstart\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragend event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragend event\n     */\n    (e: \"columndragend\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndrop event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndrop event\n     */\n    (e: \"columndrop\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndragleave event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragleave event\n     */\n    (\n        e: \"columndragleave\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragover event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragover event\n     */\n    (\n        e: \"columndragover\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\n\nconst rootRef = ref<HTMLElement>();\nconst slotRef = ref<HTMLElement>();\n\n/** Provide functionalities and data to child item components */\nconst provider = useProviderParent<TableColumnComponent>(slotRef);\n\nconst tableColumns = computed<TableColumn[]>(() =>\n    provider.sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n        thAttrsData: {},\n        tdAttrsData: [],\n    })),\n);\n\nconst tableData = computed(() => {\n    if (!props.data?.length) return [...props.data];\n    // if no customRowKey is given and data are objects, create unique row id for each row\n    return props.data.map((row) =>\n        !props.customRowKey && typeof row === \"object\"\n            ? Object.assign({ __rowKey: uuid() }, row)\n            : row,\n    );\n});\n\nconst tableRows = ref(tableData.value);\nconst dataTotal = ref(\n    props.backendPagination ? props.total : tableData.value.length,\n);\n\nconst tableCurrentPage = usePropBinding<number>(\"currentPage\", props, emits, {\n    passive: true,\n});\n\n/**\n * When table rows data change:\n *   1. Update internal value.\n *   2. Filter data if it's not backend-filtered.\n *   3. Sort again if it's not backend-sorted.\n *   4. Set new total if it's not backend-paginated.\n */\nwatch(\n    () => tableData.value,\n    (value) => {\n        // if not backend filtered, filter rows\n        if (!props.backendFiltering)\n            tableRows.value = value.filter((row) => isRowFiltered(row));\n        else tableRows.value = [...value];\n        // if not backend sorted, sort rows\n        if (!props.backendSorting) sort(currentSortColumn.value, true);\n        // if not backend paginated, set pagination total\n        if (!props.backendPagination) dataTotal.value = tableRows.value.length;\n    },\n    { deep: true },\n);\n\n/**\n * When Pagination total change, update internal total\n * only if it's backend-paginated.\n */\nwatch(\n    () => props.total,\n    (newTotal) => {\n        if (!props.backendPagination) return;\n        dataTotal.value = newTotal;\n    },\n);\n\nconst tableWrapperStyle = computed(() => ({\n    height: toCssDimension(props.height),\n}));\n\n/** Splitted data based on the pagination. */\nconst visibleRows = computed(() => {\n    if (!props.paginated) return tableRows.value;\n\n    const currentPage = tableCurrentPage.value;\n    const perPage = Number(props.perPage);\n\n    if (tableRows.value.length <= perPage) {\n        return tableRows.value;\n    } else {\n        const start = (currentPage - 1) * perPage;\n        const end = start + perPage;\n        return tableRows.value.slice(start, end);\n    }\n});\n\nconst visibleColumns = computed(() => {\n    if (!tableColumns.value) return [];\n    return tableColumns.value.filter(\n        (column) => column.visible || column.visible === undefined,\n    );\n});\n\n/** process thAttrs & tdAttrs when row or columns got changed */\nwatch([visibleRows, visibleColumns], () => {\n    if (visibleColumns.value.length && visibleRows.value.length) {\n        for (let i = 0; i < visibleColumns.value.length; i++) {\n            const col = visibleColumns.value[i];\n            col.thAttrsData =\n                typeof col.thAttrs === \"function\" ? col.thAttrs(col) : {};\n            col.tdAttrsData = visibleRows.value.map((data) =>\n                typeof col.tdAttrs === \"function\" ? col.tdAttrs(data, col) : {},\n            );\n        }\n    }\n});\n\n/** Return total column count based if it's checkable or expanded */\nconst columnCount = computed(() => {\n    let count = visibleColumns.value.length;\n    count += props.checkable ? 1 : 0;\n    count += props.detailed && props.showDetailIcon ? 1 : 0;\n    return count;\n});\n\n/** Check if has any searchable column. */\nconst hasSearchablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.searchable),\n);\n\n/** return if scrollable table */\nconst isScrollable = computed(() => {\n    if (props.scrollable) return true;\n    if (!tableColumns.value) return false;\n    return tableColumns.value.some((column) => column.sticky);\n});\n\nconst slots = useSlots();\n\nconst hasCustomSubheadings = computed(() => {\n    if (slots.subheading) return true;\n    return tableColumns.value.some((column) => !!column.subheading);\n});\n\n/** Check if footer slot has custom content. */\nfunction hasCustomFooterSlot(): boolean {\n    if (slots.footer) {\n        // [Vue warn]: Slot \"footer\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\n        const footer = slots.footer();\n        if (footer.length > 1) return true;\n\n        const tag = footer[0][\"tag\"];\n        if (tag !== \"th\" && tag !== \"td\") return false;\n    }\n    return true;\n}\n\n/** Table arrow keys listener, change selection. */\nfunction onArrowPressed(pos: number, event: KeyboardEvent): void {\n    if (!visibleRows.value.length) return;\n\n    let index = visibleRows.value.indexOf(props.selected) + pos;\n\n    // Prevent from going up from first and down from last\n    index =\n        index < 0\n            ? 0\n            : index > visibleRows.value.length - 1\n              ? visibleRows.value.length - 1\n              : index;\n\n    const row = visibleRows.value[index];\n\n    if (!props.isRowSelectable(row)) {\n        let newIndex = null;\n        if (pos > 0) {\n            for (\n                let i = index;\n                i < visibleRows.value.length && newIndex === null;\n                i++\n            ) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        } else {\n            for (let i = index; i >= 0 && newIndex === null; i--) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        }\n        if (newIndex >= 0) {\n            selectRow(visibleRows.value[newIndex], index, event);\n        }\n    } else {\n        selectRow(row, index, event);\n    }\n}\n\n/**\n * Row click listener.\n * Emit all necessary events.\n */\nfunction selectRow(row: unknown, index: number, event: Event): void {\n    emits(\"click\", row, index, event);\n\n    if (props.selected === row) return;\n    if (!props.isRowSelectable(row)) return;\n\n    // emit new and old row\n    emits(\"select\", row, props.selected);\n\n    // emit new row to update user variable\n    emits(\"update:selected\", row);\n}\n\nfunction isRowSelected(row: unknown, selectedRow: unknown): boolean {\n    return selectedRow ? getRowKey(row) === getRowKey(selectedRow) : false;\n}\n\nfunction getRowKey(row: unknown): unknown {\n    if (props.customRowKey) return row[props.customRowKey];\n    if (typeof row === \"object\") return row[\"__rowKey\"];\n    return row;\n}\n\n// --- Filter Feature ---\n\nconst filters = ref<Record<string, string>>({});\n\nwatch(\n    filters.value,\n    (value) => {\n        if (props.debounceSearch)\n            useDebounce(\n                () => handleFiltersChange(value),\n                props.debounceSearch,\n            )();\n        else handleFiltersChange(value);\n    },\n    { deep: true },\n);\n\nfunction onFiltersEvent(event: Event): void {\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\n}\n\nfunction handleFiltersChange(value: Record<string, string>): void {\n    if (props.backendFiltering) {\n        emits(\"filters-change\", value);\n    } else {\n        tableRows.value = props.data.filter((row) => isRowFiltered(row));\n        if (!props.backendPagination) {\n            dataTotal.value = tableRows.value.length;\n        }\n        if (!props.backendSorting) {\n            if (\n                currentSortColumn.value &&\n                Object.keys(currentSortColumn.value).length > 0\n            ) {\n                doSortSingleColumn(currentSortColumn.value);\n            }\n        }\n    }\n}\n\nfunction isRowFiltered(row: unknown): boolean {\n    for (const key in filters.value) {\n        if (!filters.value[key]) continue;\n        const input = filters.value[key];\n        const column = tableColumns.value.filter((c) => c.field === key)[0];\n        if (typeof column?.customSearch === \"function\") {\n            if (!column.customSearch(row, input)) return false;\n        } else {\n            const value = getValueByPath(row, key);\n            if (value == null) return false;\n            if (Number.isInteger(value)) {\n                if (value !== Number(input)) return false;\n            } else {\n                const re = new RegExp(escapeRegExpChars(input), \"i\");\n                if (Array.isArray(value)) {\n                    const valid = value.some(\n                        (val) =>\n                            re.test(removeDiacriticsFromString(val)) ||\n                            re.test(val),\n                    );\n                    if (!valid) return false;\n                } else {\n                    if (\n                        !re.test(removeDiacriticsFromString(value)) &&\n                        !re.test(value)\n                    ) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n    return true;\n}\n\n// --- Sort Feature ---\n\nconst currentSortColumn = ref<TableColumn>();\nconst isAsc = ref(true);\n\nonMounted(() => nextTick(() => checkSort()));\n\n/** Check if has any sortable column. */\nconst hasSortablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.sortable),\n);\n\n/** Check if the column is the current sort column. */\nfunction isColumnSorted(column: TableColumn): boolean {\n    return currentSortColumn.value?.identifier === column.identifier;\n}\n\n/** Call initSort only first time (For example async data). */\nfunction checkSort(): void {\n    if (tableColumns.value.length && !currentSortColumn.value) {\n        // is first time sort\n        initSort();\n    } else if (tableColumns.value.length) {\n        if (\n            currentSortColumn.value &&\n            Object.keys(currentSortColumn.value).length > 0\n        ) {\n            for (let i = 0; i < tableColumns.value.length; i++) {\n                if (\n                    currentSortColumn.value.field ===\n                    tableColumns.value[i].field\n                ) {\n                    currentSortColumn.value = tableColumns.value[i];\n                    break;\n                }\n            }\n        }\n    }\n}\n\n/** Initial sorted column based on the default-sort prop. */\nfunction initSort(): void {\n    if (!props.defaultSort) return;\n    let sortField = \"\";\n    let sortDirection = props.defaultSortDirection;\n    if (Array.isArray(props.defaultSort)) {\n        sortField = props.defaultSort[0];\n        if (props.defaultSort[1]) {\n            sortDirection = props.defaultSort[1];\n        }\n    } else {\n        sortField = props.defaultSort;\n    }\n    const sortColumn = tableColumns.value.filter(\n        (column) => column.field === sortField,\n    )[0];\n    if (sortColumn) {\n        isAsc.value = sortDirection.toLowerCase() !== \"desc\";\n        sort(sortColumn, true);\n    }\n}\n\n/**\n * Sort the column.\n * Toggle current direction on column if it's sortable\n * and not just updating the prop.\n */\nfunction sort(\n    column: TableColumn,\n    updateDirection = false,\n    event?: Event,\n): void {\n    if (!column || !column.sortable) return;\n\n    if (!updateDirection)\n        isAsc.value = isColumnSorted(column)\n            ? !isAsc.value\n            : props.defaultSortDirection.toLowerCase() !== \"desc\";\n\n    // if not first time sort\n    if (currentSortColumn.value)\n        emits(\"sort\", column, isAsc.value ? \"asc\" : \"desc\", event);\n\n    if (!props.backendSorting) doSortSingleColumn(column);\n\n    currentSortColumn.value = column;\n}\n\nfunction doSortSingleColumn(column: Column): void {\n    tableRows.value = sortBy(\n        tableRows.value,\n        column.field,\n        column.customSort,\n        isAsc.value,\n    );\n}\n\n/**\n * Sort an array by key without mutating original data.\n * Call the user sort function if it was passed.\n */\nfunction sortBy(\n    array: unknown[],\n    key: string,\n    fn: (a: unknown, b: unknown, asc: boolean) => number,\n    isAsc: boolean,\n): unknown[] {\n    let sorted = [];\n    // Sorting without mutating original data\n    if (fn && typeof fn === \"function\") {\n        sorted = [...array].sort((a, b) => fn(a, b, isAsc));\n    } else {\n        sorted = [...array].sort((a, b) => {\n            // Get nested values from objects\n            let newA = getValueByPath(a, key);\n            let newB = getValueByPath(b, key);\n\n            // sort boolean type\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n            }\n\n            if (!newA && newA !== 0) return 1;\n            if (!newB && newB !== 0) return -1;\n            if (newA === newB) return 0;\n\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\n\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n        });\n    }\n\n    return sorted;\n}\n\n// --- Checkable Feature ---\n\nconst newCheckedRows = ref([...props.checkedRows]);\nconst lastCheckedRowIndex = ref(null);\n\n/**\n * When checkedRows prop change, update internal value without\n * mutating original data.\n */\nwatch(\n    () => props.checkedRows,\n    (rows) => {\n        newCheckedRows.value = [...rows];\n    },\n    { deep: true },\n);\n\n/** Check if all rows in the page are checked. */\nconst isAllChecked = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    if (validVisibleData.length === 0) return false;\n    const isAllChecked = validVisibleData.some(\n        (currentVisibleRow) =>\n            indexOf(\n                newCheckedRows.value,\n                currentVisibleRow,\n                props.customIsChecked,\n            ) < 0,\n    );\n    return !isAllChecked;\n});\n\n/** Check if all rows in the page are checkable. */\nconst isAllUncheckable = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    return validVisibleData.length === 0;\n});\n\n/** Check if the row is checked (is added to the array). */\nfunction isRowChecked(row: unknown): boolean {\n    return indexOf(newCheckedRows.value, row, props.customIsChecked) >= 0;\n}\n\n/** Remove a checked row from the array. */\nfunction removeCheckedRow(row: unknown): void {\n    const index = indexOf(newCheckedRows.value, row, props.customIsChecked);\n    if (index >= 0) newCheckedRows.value.splice(index, 1);\n}\n\n/**\n * Header checkbox click listener.\n * Add or remove all rows in current page.\n */\nfunction checkAll(): void {\n    const allChecked = isAllChecked.value;\n    visibleRows.value.forEach((currentRow) => {\n        if (props.isRowCheckable(currentRow)) removeCheckedRow(currentRow);\n\n        if (!allChecked) {\n            if (props.isRowCheckable(currentRow))\n                newCheckedRows.value.push(currentRow);\n        }\n    });\n\n    emits(\"check\", newCheckedRows.value);\n    emits(\"check-all\", newCheckedRows.value);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Row checkbox click listener. */\nfunction checkRow(row: unknown, index: number): void {\n    if (!props.isRowCheckable(row)) return;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const lastIndex = lastCheckedRowIndex.value;\n    lastCheckedRowIndex.value = index;\n\n    // if (event.shiftKey && lastIndex !== null && index !== lastIndex) {\n    //         shiftCheckRow(row, index, lastIndex);\n\n    if (!isRowChecked(row)) newCheckedRows.value.push(row);\n    else removeCheckedRow(row);\n\n    emits(\"check\", newCheckedRows.value, row);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Check row when shift is pressed. */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction shiftCheckRow(\n    row: unknown,\n    index: number,\n    lastCheckedRowIndex: number,\n): void {\n    // Get the subset of the list between the two indicies\n    const subset = visibleRows.value.slice(\n        Math.min(index, lastCheckedRowIndex),\n        Math.max(index, lastCheckedRowIndex) + 1,\n    );\n\n    // Determine the operation based on the state of the clicked checkbox\n    const shouldCheck = !isRowChecked(row);\n\n    subset.forEach((item) => {\n        removeCheckedRow(item);\n        if (shouldCheck && props.isRowCheckable(item))\n            newCheckedRows.value.push(item);\n    });\n}\n\n// --- Detail Row Feature ---\n\nconst visibleDetailRows = ref(props.openedDetailed);\n\n/**\n * return if detailed row tabled\n * will be with chevron column & icon or not\n */\nconst showDetailRowIcon = computed(\n    () => props.detailed && props.showDetailIcon,\n);\n\n/**\n * When the user wants to control the detailed rows via props.\n * Or wants to open the details of certain row with the router for example.\n */\nwatch(\n    () => props.openedDetailed,\n    (expandedRows) => {\n        visibleDetailRows.value = expandedRows;\n    },\n);\n\n/** Toggle to show/hide details slot */\nfunction toggleDetails(row: unknown): void {\n    const found = isVisibleDetailRow(row);\n\n    if (found) {\n        closeDetailRow(row);\n        emits(\"details-close\", row);\n    } else {\n        openDetailRow(row);\n        emits(\"details-open\", row);\n    }\n\n    // Syncs the detailed rows with the parent component\n    emits(\"update:openedDetailed\", visibleDetailRows.value);\n}\n\nfunction openDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    visibleDetailRows.value.push(index);\n}\n\nfunction closeDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    const i = visibleDetailRows.value.indexOf(index);\n    if (i >= 0) visibleDetailRows.value.splice(i, 1);\n}\n\nfunction isVisibleDetailRow(row: unknown): boolean {\n    const index = handleDetailKey(row);\n    return visibleDetailRows.value.indexOf(index) >= 0;\n}\n\nfunction isActiveDetailRow(row: unknown): boolean {\n    return props.detailed && !props.customDetailRow && isVisibleDetailRow(row);\n}\n\nfunction isActiveCustomDetailRow(row: unknown): boolean {\n    return props.detailed && props.customDetailRow && isVisibleDetailRow(row);\n}\n\n/**\n * When the detailKey is defined we use the object[detailKey] as index.\n * If not, use the object reference by default.\n */\nfunction handleDetailKey(row: unknown): string {\n    const key = props.detailKey;\n    return !key?.length || !row ? row : row[key];\n}\n\n// --- Drag&Drop Feature ---\n\nconst isDraggingRow = ref(false);\nconst isDraggingColumn = ref(false);\n\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\n\nconst canDragColumn = computed(\n    () => props.draggableColumn && !isDraggingRow.value,\n);\n\n/** Emits drag start event*/\nfunction handleDragStart(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragstart\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragEnd(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragend\", row, index, event);\n}\n\n/** Emits drop event */\nfunction handleDrop(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"drop\", row, index, event);\n}\n\n/** Emits drag over event */\nfunction handleDragOver(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragover\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragLeave(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragleave\", row, index, event);\n}\n\n/** Emits drag start event (column) */\nfunction handleColumnDragStart(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = true;\n    emits(\"columndragstart\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragEnd(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = false;\n    emits(\"columndragend\", column, index, event);\n}\n\n/** Emits drop event (column) */\nfunction handleColumnDrop(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndrop\", column, index, event);\n}\n\n/** Emits drag over event (column) */\nfunction handleColumnDragOver(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragover\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragLeave(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragleave\", column, index, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-table__root\"],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-table\"],\n    [\n        \"borderedClass\",\n        \"o-table--bordered\",\n        null,\n        computed(() => props.bordered),\n    ],\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\n    [\n        \"narrowedClass\",\n        \"o-table--narrowed\",\n        null,\n        computed(() => props.narrowed),\n    ],\n    [\n        \"hoverableClass\",\n        \"o-table--hoverable\",\n        null,\n        computed(\n            () =>\n                (props.hoverable || props.focusable) &&\n                !!visibleRows.value.length,\n        ),\n    ],\n    [\n        \"emptyClass\",\n        \"o-table--table__empty\",\n        null,\n        computed(() => !visibleRows.value.length),\n    ],\n);\n\nconst tableWrapperClasses = defineClasses(\n    [\"wrapperClass\", \"o-table__wrapper\"],\n    [\n        \"stickyHeaderClass\",\n        \"o-table__wrapper--sticky-header\",\n        null,\n        computed(() => props.stickyHeader),\n    ],\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\n\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\n\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\n\nconst thCheckboxClasses = defineClasses([\n    \"thCheckboxClass\",\n    \"o-table__th-checkbox\",\n]);\n\nconst thDetailedClasses = defineClasses([\n    \"thDetailedClass\",\n    \"o-table__th--detailed\",\n]);\n\nconst thSubheadingClasses = defineClasses([\"thSubheadingClass\", \"o-table__th\"]);\n\nconst tdCheckboxClasses = defineClasses(\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.stickyCheckbox),\n    ],\n);\n\nconst detailedClasses = defineClasses([\"detailedClass\", \"o-table__detail\"]);\n\nconst tdDetailedChevronClasses = defineClasses([\n    \"tdDetailedChevronClass\",\n    \"o-table__td-chevron\",\n]);\n\nconst mobileSortClasses = defineClasses([\n    \"mobileSortClass\",\n    \"o-table__mobile-sort\",\n]);\n\nconst paginationWrapperClasses = defineClasses([\n    \"paginationWrapperClass\",\n    \"o-table__pagination\",\n]);\n\nconst paginationWrapperRootClasses = computed(() =>\n    getActiveClasses(paginationWrapperClasses.value),\n);\n\nconst thSortIconClasses = defineClasses([\n    \"thSortIconClass\",\n    \"o-table__th__sort-icon\",\n]);\n\nfunction thClasses(column: TableColumn): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"thCurrentSortClass\",\n            \"o-table__th-current-sort\",\n            null,\n            isColumnSorted(column),\n        ],\n        [\"thSortableClass\", \"o-table__th--sortable\", null, column.sortable],\n        [\n            \"thUnselectableClass\",\n            \"o-table__th--unselectable\",\n            null,\n            column.isHeaderUnselectable,\n        ],\n        [\n            \"thPositionClass\",\n            \"o-table__th--\",\n            column.position,\n            !!column.position,\n        ],\n        [\"thStickyClass\", \"o-table__th--sticky\", null, column.sticky],\n    );\n\n    return [...thBaseClasses.value, ...classes.value];\n}\n\nfunction rowClasses(row: unknown, index: number): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"trSelectedClass\",\n            \"o-table__tr--selected\",\n            null,\n            isRowSelected(row, props.selected),\n        ],\n        [\"trCheckedClass\", \"o-table__tr--checked\", null, isRowChecked(row)],\n    );\n\n    const rowClass = props.rowClass(row, index);\n\n    return [...classes.value, { [rowClass]: true }];\n}\n\nfunction tdClasses(row: unknown, column: TableColumnComponent): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tdPositionClass\",\n            \"o-table__td--\",\n            column.position,\n            !!column.position,\n        ],\n\n        [\"tdStickyClass\", \"o-table__td--sticky\", null, column.sticky],\n    );\n\n    return [...tdBaseClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"table\">\n        <div ref=\"slotRef\" style=\"display: none\">\n            <!--\n                @slot Place o-table-column here\n            -->\n            <slot>\n                <template v-if=\"columns?.length\">\n                    <o-table-column\n                        v-for=\"(column, idx) in columns\"\n                        :key=\"idx\"\n                        v-slot=\"{ row }\"\n                        v-bind=\"column\">\n                        {{ column.field ? row[column.field] : row }}\n                    </o-table-column>\n                </template>\n            </slot>\n        </div>\n\n        <o-table-mobile-sort\n            v-if=\"isMobileActive && hasSortablenewColumns\"\n            :current-sort-column=\"currentSortColumn\"\n            :columns=\"tableColumns\"\n            :placeholder=\"mobileSortPlaceholder\"\n            :icon-pack=\"iconPack\"\n            :sort-icon=\"sortIcon\"\n            :sort-icon-size=\"sortIconSize\"\n            :is-asc=\"isAsc\"\n            :mobile-sort-classes=\"mobileSortClasses\"\n            @sort=\"(column, event) => sort(column, null, event)\" />\n\n        <template\n            v-if=\"\n                paginated &&\n                (paginationPosition === 'top' || paginationPosition === 'both')\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"top-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\n            <table\n                :class=\"tableClasses\"\n                :tabindex=\"!focusable ? null : 0\"\n                @keydown.self.prevent.up=\"onArrowPressed(-1, $event)\"\n                @keydown.self.prevent.down=\"onArrowPressed(1, $event)\">\n                <caption v-if=\"$slots.caption\">\n                    <!--\n                        @slot Define a table caption here\n                    -->\n                    <slot name=\"caption\" />\n                </caption>\n                <thead v-if=\"tableColumns.length && showHeader\">\n                    <!--\n                        @slot Define preheader content here\n                    -->\n                    <slot name=\"preheader\" />\n                    <tr>\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'left'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <!--\n                                @slot Override check all checkbox\n                                @binding {boolean} is-all-checked - if all rows are checked\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                @binding {(): void} check-all - check all function\n                            -->\n                            <slot\n                                name=\"check-all\"\n                                :is-all-checked=\"isAllChecked\"\n                                :is-all-uncheckable=\"isAllUncheckable\"\n                                :check-all=\"checkAll\">\n                                <o-checkbox\n                                    v-if=\"headerCheckable\"\n                                    :model-value=\"isAllChecked\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"isAllUncheckable\"\n                                    @update:model-value=\"checkAll\" />\n                            </slot>\n                        </th>\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"column.identifier + ':' + index + 'header'\"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :draggable=\"canDragColumn\"\n                            @click.stop=\"sort(column, null, $event)\"\n                            @dragstart=\"\n                                handleColumnDragStart(column, index, $event)\n                            \"\n                            @dragend=\"\n                                handleColumnDragEnd(column, index, $event)\n                            \"\n                            @drop=\"handleColumnDrop(column, index, $event)\"\n                            @dragover=\"\n                                handleColumnDragOver(column, index, $event)\n                            \"\n                            @dragleave=\"\n                                handleColumnDragLeave(column, index, $event)\n                            \">\n                            <template v-if=\"column.$slots?.header\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"header\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                <span>\n                                    {{ column.label }}\n                                    <span\n                                        v-show=\"\n                                            column.sortable &&\n                                            isColumnSorted(column)\n                                        \"\n                                        :class=\"thSortIconClasses\">\n                                        <o-icon\n                                            :icon=\"sortIcon\"\n                                            :pack=\"iconPack\"\n                                            both\n                                            :size=\"sortIconSize\"\n                                            :rotation=\"!isAsc ? 180 : 0\" />\n                                    </span>\n                                </span>\n                            </template>\n                        </th>\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'right'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <template v-if=\"headerCheckable\">\n                                <!--\n                                    @slot Override check all checkbox\n                                    @binding {boolean} is-all-checked - if all rows are checked\n                                    @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                    @binding {(): void} check-all - check all function\n                                -->\n                                <slot\n                                    name=\"check-all\"\n                                    :is-all-checked=\"isAllChecked\"\n                                    :is-all-uncheckable=\"isAllUncheckable\"\n                                    :check-all=\"checkAll\">\n                                    <o-checkbox\n                                        :model-value=\"isAllChecked\"\n                                        autocomplete=\"off\"\n                                        :variant=\"checkboxVariant\"\n                                        :disabled=\"isAllUncheckable\"\n                                        @update:model-value=\"checkAll\" />\n                                </slot>\n                            </template>\n                        </th>\n                    </tr>\n                    <tr v-if=\"hasSearchablenewColumns\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'searchable'\n                            \"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\">\n                            <template v-if=\"column.searchable\">\n                                <template v-if=\"column.$slots?.searchable\">\n                                    <o-slot-component\n                                        :component=\"column.$el\"\n                                        name=\"searchable\"\n                                        tag=\"span\"\n                                        :props=\"{ column, index, filters }\" />\n                                </template>\n                                <o-input\n                                    v-else\n                                    v-model=\"filters[column.field]\"\n                                    :type=\"column.numeric ? 'number' : 'text'\"\n                                    @[filtersEvent]=\"onFiltersEvent\" />\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                    <tr v-if=\"hasCustomSubheadings\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'subheading'\n                            \"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :class=\"[...thBaseClasses, ...thSubheadingClasses]\">\n                            <template v-if=\"column.$slots?.subheading\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"subheading\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                {{ column.subheading }}\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    <template\n                        v-for=\"(row, index) in visibleRows\"\n                        :key=\"getRowKey(row) + 'row'\">\n                        <tr\n                            :class=\"rowClasses(row, index)\"\n                            :draggable=\"canDragRow\"\n                            @click=\"selectRow(row, index, $event)\"\n                            @dblclick=\"$emit('dblclick', row, index, $event)\"\n                            @mouseenter=\"\n                                $emit('mouseenter', row, index, $event)\n                            \"\n                            @mouseleave=\"\n                                $emit('mouseleave', row, index, $event)\n                            \"\n                            @contextmenu=\"\n                                $emit('contextmenu', row, index, $event)\n                            \"\n                            @dragstart=\"handleDragStart(row, index, $event)\"\n                            @dragend=\"handleDragEnd(row, index, $event)\"\n                            @drop=\"handleDrop(row, index, $event)\"\n                            @dragover=\"handleDragOver(row, index, $event)\"\n                            @dragleave=\"handleDragLeave(row, index, $event)\">\n                            <!-- detailed toggle column -->\n                            <td\n                                v-if=\"showDetailRowIcon\"\n                                :class=\"[\n                                    ...tdBaseClasses,\n                                    ...tdDetailedChevronClasses,\n                                ]\">\n                                <o-icon\n                                    v-if=\"hasDetailedVisible(row)\"\n                                    :icon=\"detailIcon\"\n                                    :pack=\"iconPack\"\n                                    :rotation=\"isVisibleDetailRow(row) ? 90 : 0\"\n                                    role=\"button\"\n                                    clickable\n                                    both\n                                    @click.stop=\"toggleDetails(row)\" />\n                            </td>\n\n                            <!-- checkable column left -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'left'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n\n                            <!-- row data columns -->\n                            <o-slot-component\n                                v-for=\"(column, colindex) in visibleColumns\"\n                                :key=\"\n                                    column.identifier + index + ':' + colindex\n                                \"\n                                v-bind=\"column.tdAttrsData[index]\"\n                                :component=\"column.$el\"\n                                name=\"default\"\n                                tag=\"td\"\n                                :class=\"tdClasses(row, column)\"\n                                :style=\"isMobileActive ? {} : column.style\"\n                                :data-label=\"column.label\"\n                                :props=\"{\n                                    row,\n                                    column,\n                                    index,\n                                    colindex,\n                                    toggleDetails,\n                                }\"\n                                @click=\"\n                                    $emit(\n                                        'cell-click',\n                                        row,\n                                        column,\n                                        index,\n                                        colindex,\n                                        $event,\n                                    )\n                                \" />\n\n                            <!-- checkable column right -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'right'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n                        </tr>\n\n                        <transition :name=\"detailTransition\">\n                            <tr\n                                v-if=\"isActiveDetailRow(row)\"\n                                :key=\"getRowKey(row) + 'detail'\"\n                                :class=\"detailedClasses\">\n                                <td :colspan=\"columnCount\">\n                                    <!--\n                                        @slot Place row detail content here\n                                        @binding {unknown} row - row content\n                                        @binding {number} index - row index\n                                    -->\n                                    <slot\n                                        name=\"detail\"\n                                        :row=\"row as any\"\n                                        :index=\"index\" />\n                                </td>\n                            </tr>\n                        </transition>\n                        <!--\n                            @slot Place row detail content here\n                            @binding {unknown} row - row content\n                            @binding {number} index - row index\n                        -->\n                        <slot\n                            v-if=\"isActiveCustomDetailRow(row)\"\n                            name=\"detail\"\n                            :row=\"row as any\"\n                            :index=\"index\" />\n                    </template>\n\n                    <tr v-if=\"!visibleRows.length\">\n                        <td :colspan=\"columnCount\">\n                            <!--\n                                @slot Define content if table is empty\n                            -->\n                            <slot name=\"empty\" />\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"$slots.footer\">\n                    <tr :class=\"footerClasses\">\n                        <!--\n                            @slot Define a custom footer\n                            @binding {number} column-count - counts of visible columns\n                            @binding {number} row-count - counts of visible rows\n                        -->\n                        <slot\n                            v-if=\"hasCustomFooterSlot()\"\n                            name=\"footer\"\n                            :column-count=\"columnCount\"\n                            :row-count=\"visibleRows?.length\" />\n                        <th v-else :colspan=\"columnCount\">\n                            <!--\n                                @slot Define a custom footer\n                                @binding {number} column-count - counts of visible columns\n                                @binding {number} row-count - counts of visible rows\n                            -->\n                            <slot\n                                name=\"footer\"\n                                :column-count=\"columnCount\"\n                                :row-count=\"visibleRows?.length\" />\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n            <!--\n                @slot Override loading component\n                @binding {boolean} loading - is loading enabled\n            -->\n            <slot name=\"loading\" :loading=\"loading\">\n                <o-loading :full-page=\"false\" :active=\"loading\" />\n            </slot>\n        </div>\n\n        <template\n            v-if=\"\n                (checkable && $slots['bottom-left']) ||\n                (paginated &&\n                    (paginationPosition === 'bottom' ||\n                        paginationPosition === 'both'))\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"bottom-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Table from \"./Table.vue\";\nimport TableColumn from \"./TableColumn.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export table specific types */\nexport type { Column } from \"./types\";\n\n/** export table plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Table);\n        registerComponent(app, TableColumn);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Table as OTable, TableColumn as OTableColumn };\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport { getOption } from \"@/utils/config\";\nimport { mod, isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal navigation tabs, switch between contents with ease\n * @displayName Tabs\n * @requires ./TabItem.vue\n * @style _tabs.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabs\",\n    configField: \"tabs\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: 0 },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tabs.variant\"),\n    },\n    /**\n     * Tab size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"tabs.size\"),\n    },\n    /** Show tab in vertical layout */\n    vertical: {\n        type: Boolean,\n        default: () => getOption(\"tabs.vertical\", false),\n    },\n    /**\n     * Position of the tabs\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Tab type\n     * @values boxed, toggle\n     */\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\n    /** Tabs will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Destroy tabItem on hide */\n    destroyOnHide: { type: Boolean, default: false },\n    /** Tab will have an animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"tabs.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animateInitially\", false),\n    },\n    /** Show tab items multiline when there is no space */\n    multiline: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when vertical */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav tabs */\n    navTabsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the navigation */\n    navSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav position */\n    navPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Type of the navigation */\n    navTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content when transitioning */\n    transitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item wrapper */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on tab change event\n     * @param value {string | number} new tab value\n     * @param value {string | number} old tab value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<TabsComponent>(() => ({\n    activeValue: vmodel.value,\n    type: props.type,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n    destroyOnHide: props.destroyOnHide,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<TabItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/**  When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst activeIndex = computed(() => activeItem.value.index);\n\nfunction isActive(item: TabItem): boolean {\n    return item.value === activeItem.value.value;\n}\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: TabItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Go to the next item or wrap around */\nfunction next(): void {\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\n    clickFirstViableChild(newIndex, true);\n}\n\n/** Go to the previous item or wrap around */\nfunction prev(): void {\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\n    clickFirstViableChild(newIndex, false);\n}\n\n/** Go to the first viable item */\nfunction homePressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(0, true);\n}\n\n/** Go to the last viable item */\nfunction endPressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(items.value.length - 1, false);\n}\n\n/**\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex !== activeIndex.value;\n        newIndex = mod(newIndex + direction, items.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\n            break;\n    }\n    itemClick(items.value[newIndex]);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = vmodel.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tabs\"],\n    [\n        \"positionClass\",\n        \"o-tabs--\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\n        \"expandedClass\",\n        \"o-tabs--fullwidth\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\n    [\n        \"multilineClass\",\n        \"o-tabs--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst itemWrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-tabs__nav-item-wrapper\",\n]);\n\nconst navClasses = defineClasses(\n    [\"navTabsClass\", \"o-tabs__nav\"],\n    [\n        \"navSizeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"navPositionClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.position),\n        computed(() => props.position && !props.vertical),\n    ],\n    [\n        \"navTypeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.type),\n        computed(() => !!props.type),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tabs__content\"],\n    [\n        \"transitioningClass\",\n        \"o-tabs__content--transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nfunction itemHeaderClasses(\n    childItem: (typeof items.value)[number],\n): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-tabs__nav-item-{*}--active\",\n            props.type,\n            isActive(childItem),\n        ],\n        [\n            \"itemHeaderDisabledClass\",\n            \"o-tabs__nav-item-{*}--disabled\",\n            props.type,\n            childItem.disabled,\n        ],\n    );\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\n        <nav\n            :class=\"navClasses\"\n            role=\"tablist\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <!--\n                @slot Additional slot before tabs\n            -->\n            <slot name=\"start\" />\n            <div\n                v-for=\"childItem in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :class=\"itemWrapperClasses\"\n                role=\"tab\"\n                :aria-controls=\"`${childItem.value}-content`\"\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\n                <o-slot-component\n                    v-if=\"childItem.$slots.header\"\n                    :component=\"childItem\"\n                    :tag=\"childItem.tag\"\n                    name=\"header\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\" />\n\n                <component\n                    :is=\"childItem.tag\"\n                    v-else\n                    role=\"button\"\n                    :tabindex=\"0\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\">\n                    <o-icon\n                        v-if=\"childItem.icon\"\n                        :root-class=\"\n                            getActiveClasses(childItem.headerIconClasses)\n                        \"\n                        :icon=\"childItem.icon\"\n                        :pack=\"childItem.iconPack\"\n                        :size=\"size\" />\n                    <span :class=\"childItem.headerTextClasses\">\n                        {{ childItem.label }}\n                    </span>\n                </component>\n            </div>\n            <!--\n                @slot Additional slot after tabs\n            -->\n            <slot name=\"end\" />\n        </nav>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place tab items here\n            -->\n            <slot />\n        </section>\n    </div>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { TabsComponent, TabItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Tab Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabItem\",\n    configField: \"tabs\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"tabs.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"tabs.iconPack\"),\n    },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Tabs item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the tab item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when disabled */\n    itemHeaderDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header type */\n    itemHeaderTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header icon */\n    itemHeaderIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header text */\n    itemHeaderTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    (e: \"activate\"): void;\n    /** on tab item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<TabItemComponent>(() => ({\n    ...props,\n    $slots: slots,\n    headerIconClasses: headerIconClasses.value,\n    headerTextClasses: headerTextClasses.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent component\nconst { parent, item } = useProviderChild<TabsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\n\nconst headerIconClasses = defineClasses([\n    \"itemHeaderIconClass\",\n    \"o-tabs__nav-item-icon\",\n]);\n\nconst headerTextClasses = defineClasses([\n    \"itemHeaderTextClass\",\n    \"o-tabs__nav-item-text\",\n]);\n</script>\n\n<template>\n    <Transition\n        :css=\"parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <template v-if=\"!parent.destroyOnHide || (isActive && visible)\">\n            <div\n                v-show=\"isActive && visible\"\n                ref=\"rootRef\"\n                v-bind=\"$attrs\"\n                :class=\"elementClasses\"\n                :data-id=\"`tabs-${item.identifier}`\"\n                data-oruga=\"tabs-item\"\n                :tabindex=\"isActive ? 0 : -1\"\n                :role=\"ariaRole\"\n                aria-roledescription=\"item\">\n                <!-- \n                    @slot Tab item content\n                -->\n                <slot />\n            </div>\n        </template>\n    </Transition>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Tabs from \"./Tabs.vue\";\nimport TabItem from \"./TabItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tabs specific types */\nexport type * from \"./types\";\n\n/** export tabs plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tabs);\n        registerComponent(app, TabItem);\n    },\n} as Plugin;\n\n/** export tabs components */\nexport { Tabs as OTabs, TabItem as OTabItem };\n", "<script setup lang=\"ts\" generic=\"T extends String | Number | Object\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    useAttrs,\n    watchEffect,\n    type ComponentInstance,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple tag input field that can have autocomplete functionality\n * @displayName Taginput\n * @style _taginput.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTaginput\",\n    configField: \"taginput\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Array as PropType<T[]>, default: () => [] },\n    /** Items data */\n    data: { type: Array as PropType<T[]>, default: () => [] },\n    /** Property of the object (if data is array of objects) to use as display text */\n    field: { type: String, default: \"value\" },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /**\n     * Vertical size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"taginput.size\"),\n    },\n    /**\n     * Color of the each item\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"taginput.variant\"),\n    },\n    /** Limits the number of items, plus item counter */\n    maxitems: { type: [String, Number], default: undefined },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [String, Number], default: undefined },\n    /** Show counter when maxlength or maxtags props are passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"taginput.counter\", true),\n    },\n    /** Opens a dropdown with choices when the input field is focused */\n    openOnFocus: { type: Boolean, default: false },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Array of keys\n     * (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\n     * which will add a item when typing\n     */\n    confirmKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.confirmKeys\", [\",\", \"Tab\", \"Enter\"]),\n    },\n    /** Array of chars used to split when pasting a new string */\n    separators: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.separators\", [\",\"]),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: { type: Boolean, default: false },\n    /** When autocomplete, it allow to add new items */\n    allowNew: { type: Boolean, default: false },\n    /** Allows adding the same item multiple time */\n    allowDuplicates: { type: Boolean, default: false },\n    /** Add autocomplete feature (if true, any Autocomplete props may be used too) */\n    allowAutocomplete: { type: Boolean, default: false },\n    /** Allow removing last item when pressing given keys, if input is empty */\n    removeOnKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.removeOnKeys\", [\"Backspace\"]),\n    },\n    /** Function to validate the value of the item before adding */\n    beforeAdding: {\n        type: Function as PropType<(value: T | string) => boolean>,\n        default: () => true,\n    },\n    /** Function to create a new item to push into v-model (items) */\n    createItem: {\n        type: Function as PropType<(value: T | string) => T>,\n        default: (item: T | string) => item,\n    },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"taginput.checkScroll\", false),\n    },\n    /** Add close/delete button to the item */\n    closable: {\n        type: Boolean,\n        default: () => getOption(\"taginput.closable\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"taginput.iconPack\"),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"taginput.icon\"),\n    },\n    /** Icon name of close icon on selected item */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"taginput.closeIcon\", \"close\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"taginput.ariaCloseLabel\"),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"taginput.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"taginput.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container */\n    containerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button of entered item */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the underlying autocomplete component\n     * @ignore\n     */\n    autocompleteClasses: {\n        type: Object,\n        default: () => getOption(\"taginput.autocompleteClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {(string | number | object)[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: T[]): void;\n    /**\n     * on input change event\n     * @param value {String} input value\n     */\n    (e: \"input\", value: string): void;\n    /**\n     * new item got added\n     * @param value {string | number | object} added item\n     */\n    (e: \"add\", value: T): void;\n    /**\n     * item got removed\n     * @param value {string | number | object} removed item\n     */\n    (e: \"remove\", value: T): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst autocompleteRef = ref<ComponentInstance<typeof OAutocomplete<T>>>();\n\nconst items = defineModel<T[]>({ default: () => [] });\n\n// use form input functionalities\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\n    autocompleteRef,\n    emits,\n    props,\n);\n\nconst newItem = ref<string>(\"\");\nconst isComposing = ref(false);\n\nconst valueLength = computed(() => newItem.value.trim().length);\nconst itemsLength = computed(() => items.value.length);\n\n/** Show the input field if a maxitems hasn't been set or reached. */\nconst hasInput = computed(\n    () => props.maxitems == null || itemsLength.value < Number(props.maxitems),\n);\n\nwatchEffect(() => {\n    // blur if input is empty\n    if (!hasInput.value) onBlur();\n});\n\n/**\n * If input has pasteSeparators prop,\n * returning new RegExp used to split pasted string.\n */\nconst separatorsAsRegExp = computed(() =>\n    props.separators.length\n        ? new RegExp(\n              props.separators\n                  .map((s) =>\n                      s ? s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : null,\n                  )\n                  .join(\"|\"),\n              \"g\",\n          )\n        : null,\n);\n\nfunction getNormalizedItemText(item: T): string {\n    if (typeof item === \"object\") item = getValueByPath(item, props.field);\n    return `${item}`;\n}\n\nfunction addItem(item?: T | string): void {\n    item = item || newItem.value.trim();\n\n    if (item) {\n        if (typeof item === \"string\") {\n            const reg = separatorsAsRegExp.value;\n            if (reg && item.match(reg)) {\n                item.split(reg)\n                    .map((t) => t.trim())\n                    .filter((t) => t.length !== 0)\n                    .map(addItem);\n                return;\n            }\n        }\n        // Add the item input if it is not blank\n        // or previously added (if not allowDuplicates).\n        const itemToAdd = props.createItem(item);\n        const add = !props.allowDuplicates\n            ? items.value.indexOf(itemToAdd) === -1\n            : true;\n        if (add && props.beforeAdding(item)) {\n            items.value = [...items.value, itemToAdd];\n            emits(\"add\", itemToAdd);\n        }\n    }\n\n    // after autocomplete events\n    requestAnimationFrame(() => {\n        newItem.value = \"\";\n        emits(\"input\", newItem.value);\n    });\n}\n\nfunction removeItem(index: number, event?: Event): void {\n    const item = items.value.at(index);\n    items.value = items.value.toSpliced(index, 1);\n    emits(\"remove\", item);\n    if (event) event.stopPropagation();\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\n}\n\n// --- Event Handler ---\n\nfunction onSelect(option: T): void {\n    if (!option) return;\n    addItem(option);\n    nextTick(() => (newItem.value = \"\"));\n}\n\nfunction onKeydown(event: KeyboardEvent): void {\n    if (\n        props.removeOnKeys.indexOf(event.key) !== -1 &&\n        !newItem.value?.length &&\n        itemsLength.value > 0\n    ) {\n        // remove last item\n        removeItem(itemsLength.value - 1);\n    }\n    // Stop if is to accept select only\n    if (props.allowAutocomplete && !props.allowNew) return;\n\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // Allow Tab to advance to next field regardless\n        if (event.key !== \"Tab\") event.preventDefault();\n        if (event.key === \"Enter\" && isComposing.value) return;\n        addItem();\n    }\n}\n\nfunction onInput(value: string | number): void {\n    emits(\"input\", String(value).trim());\n}\n\nfunction handleOnBlur(event: Event): void {\n    // Add item on-blur if not select only\n    if (!props.allowAutocomplete) addItem();\n    onBlur(event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst autocompleteRootClasses = defineClasses([\n    \"autocompleteClasses.rootClass\",\n    \"o-taginput__autocomplete\",\n]);\n\nconst autocompleteInputClasses = defineClasses([\n    \"autocompleteClasses.inputClasses.inputClass\",\n    \"o-taginput__input\",\n]);\n\nconst autocompleteBind = computed(() => ({\n    ...attrs,\n    \"root-class\": getActiveClasses(autocompleteRootClasses.value),\n    \"input-classes\": {\n        \"input-class\": getActiveClasses(autocompleteInputClasses.value),\n    },\n    ...props.autocompleteClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-taginput\"],\n    [\n        \"expandedClass\",\n        \"o-taginput--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst containerClasses = defineClasses(\n    [\"containerClass\", \"o-taginput__container\"],\n    [\n        \"sizeClass\",\n        \"o-taginput__container--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-taginput__item\"],\n    [\n        \"variantClass\",\n        \"o-taginput__item--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\n            <!--\n                @slot Override selected items\n                @binding {unknown[]} items - selected items\n            -->\n            <slot name=\"selected\" :items=\"items\" :remove-item=\"removeItem\">\n                <span\n                    v-for=\"(item, index) in items\"\n                    :key=\"getNormalizedItemText(item) + index\"\n                    :class=\"itemClasses\">\n                    <span>{{ getNormalizedItemText(item) }}</span>\n                    <o-icon\n                        v-if=\"closable\"\n                        :class=\"closeClasses\"\n                        clickable\n                        :pack=\"iconPack\"\n                        :icon=\"closeIcon\"\n                        :aria-label=\"ariaCloseLabel\"\n                        both\n                        @click=\"removeItem(index, $event)\" />\n                </span>\n            </slot>\n\n            <o-autocomplete\n                v-show=\"hasInput\"\n                ref=\"autocompleteRef\"\n                v-model=\"newItem\"\n                v-bind=\"autocompleteBind\"\n                :data=\"data\"\n                :field=\"field\"\n                :icon=\"icon\"\n                :icon-pack=\"iconPack\"\n                :maxlength=\"maxlength\"\n                :size=\"size\"\n                :disabled=\"disabled\"\n                :autocomplete=\"autocomplete\"\n                :open-on-focus=\"openOnFocus\"\n                :keep-first=\"keepFirst\"\n                :keep-open=\"keepOpen\"\n                :group-field=\"groupField\"\n                :group-options=\"groupOptions\"\n                :has-counter=\"false\"\n                :use-html5-validation=\"useHtml5Validation\"\n                :check-scroll=\"checkScroll\"\n                :teleport=\"teleport\"\n                :confirm-keys=\"confirmKeys\"\n                :placeholder=\"placeholder\"\n                :validation-message=\"validationMessage\"\n                :expanded=\"expanded\"\n                @input=\"onInput\"\n                @focus=\"onFocus\"\n                @blur=\"handleOnBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @compositionstart=\"isComposing = true\"\n                @compositionend=\"isComposing = false\"\n                @select=\"onSelect\"\n                @scroll-start=\"$emit('scroll-start')\"\n                @scroll-end=\"$emit('scroll-end')\"\n                @icon-click=\"$emit('icon-click', $event)\"\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\n                <template v-if=\"$slots.header\" #header>\n                    <!--\n                        @slot Define an additional header\n                    -->\n                    <slot name=\"header\" />\n                </template>\n\n                <template v-if=\"$slots.default\" #default=\"props\">\n                    <!--\n                        @slot Override the select option\n                        @binding {object} option - option object\n                        @binding {number} index - option index\n                        @binding {unknown} value - option value\n                    -->\n                    <slot\n                        :option=\"props.option\"\n                        :index=\"props.index\"\n                        :value=\"props.value\" />\n                </template>\n\n                <template v-if=\"$slots.empty\" #empty>\n                    <!--\n                        @slot Define content for empty state \n                    -->\n                    <slot name=\"empty\" />\n                </template>\n\n                <template v-if=\"$slots.footer\" #footer>\n                    <!--\n                        @slot Define an additional footer\n                    -->\n                    <slot name=\"footer\" />\n                </template>\n            </o-autocomplete>\n        </div>\n\n        <small\n            v-if=\"counter && (maxitems || maxlength)\"\n            :class=\"counterClasses\">\n            <template v-if=\"maxlength && valueLength > 0\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"valueLength\" :total=\"maxlength\">\n                    {{ valueLength }} / {{ maxlength }}\n                </slot>\n            </template>\n\n            <template v-else-if=\"maxitems\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\n                    {{ itemsLength }} / {{ maxitems }}\n                </slot>\n            </template>\n        </small>\n    </div>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Taginput from \"./Taginput.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export taginput plugin */\nexport default {\n    install(Vue: App) {\n        registerComponent(Vue, Taginput);\n    },\n} as Plugin;\n\n/** export taginput components */\nexport { Taginput as OTaginput };\n", "import type { App, Plugin } from \"vue\";\n\nimport Timepicker from \"./Timepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export timepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Timepicker);\n    },\n} as Plugin;\n\n/** export timepicker components */\nexport { Timepicker as OTimepicker };\n", "import type { App, Plugin } from \"vue\";\n\nimport Tooltip from \"./Tooltip.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tooltip plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tooltip);\n    },\n} as Plugin;\n\n/** export tooltip components */\nexport { Tooltip as OTooltip };\n", "<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { File } from \"@/utils/ssr\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Upload one or more files\n * @displayName Upload\n * @style _upload.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OUpload\",\n    configField: \"upload\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Object, Array] as PropType<\n            object | typeof File | object[] | (typeof File)[]\n        >,\n        default: undefined,\n    },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"upload.variant\"),\n    },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native accept */\n    accept: { type: String, default: undefined },\n    /** Accepts drag & drop and change its style */\n    dragDrop: { type: Boolean, default: false },\n    /** Upload will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Replace last chosen files every time (like native file input element) */\n    native: { type: Boolean, default: true },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when draggable */\n    draggableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when hovered */\n    hoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref<HTMLInputElement>();\n\nconst vmodel = defineModel<object | object[] | File | File[]>();\n\n// use form input functionality\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst dragDropFocus = ref(false);\n\n/**\n * When v-model is changed:\n * 1. Reset interna input file value\n * 2. If it's invalid, validate again.\n */\nwatch(vmodel, (value) => {\n    if (!value || (Array.isArray(value) && value.length === 0))\n        inputRef.value.value = null;\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\n});\n\n/**\n * Listen change event on input type 'file',\n * emit 'input' event and validate\n */\nfunction onFileChange(event: Event | DragEvent): void {\n    if (props.disabled) return;\n    if (props.dragDrop) updateDragDropFocus(false);\n    const value =\n        (event.target as HTMLInputElement).files ||\n        (event as DragEvent).dataTransfer.files;\n    // no file selected\n    if (value.length === 0) {\n        if (!vmodel.value) return;\n        if (props.native) vmodel.value = null;\n    }\n\n    // multiple upload\n    if (props.multiple) {\n        // always new values if native or undefined local\n        const values =\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\n                ? []\n                : [...vmodel.value];\n\n        for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            // add file when type is valid\n            if (checkType(file)) values.push(file);\n        }\n        vmodel.value = values;\n    }\n    // single uplaod\n    else {\n        // only one element in case drag drop mode and isn't multiple\n        if (props.dragDrop && value.length !== 1) return;\n        else {\n            const file = value[0];\n            // add file when type is valid\n            if (checkType(file)) vmodel.value = file;\n            // else clear input\n            else if (vmodel.value) {\n                vmodel.value = null;\n                clearInput();\n            } else {\n                // Force input back to empty state and recheck validity\n                clearInput();\n                checkHtml5Validity();\n                return;\n            }\n        }\n    }\n\n    if (!props.dragDrop) checkHtml5Validity();\n}\n\n/** Reset file input value */\nfunction clearInput(): void {\n    inputRef.value.value = null;\n}\n\n/** Listen drag-drop to update internal variable */\nfunction updateDragDropFocus(focus: boolean): void {\n    if (!props.disabled) dragDropFocus.value = focus;\n}\n\n/** Check mime type of file s*/\nfunction checkType(file: File): boolean {\n    if (!props.accept) return true;\n    const types = props.accept.split(\",\");\n    if (types.length === 0) return true;\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i].trim();\n        if (type) {\n            if (type.substring(0, 1) === \".\") {\n                const extension = file.name.toLowerCase().slice(-type.length);\n                if (extension === type.toLowerCase()) return true;\n            } else {\n                // check mime type\n                if (file.type.match(type)) return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction onClick(event: Event): void {\n    if (props.disabled) return;\n\n    // click input if not drag and drop is used\n    if (!props.dragDrop) {\n        event.preventDefault();\n        inputRef.value.click();\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-upl\"],\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\n);\n\nconst draggableClasses = defineClasses(\n    [\"draggableClass\", \"o-upl__draggable\"],\n    [\n        \"hoveredClass\",\n        \"o-upl__draggable--hovered\",\n        null,\n        computed(() => !props.variant && dragDropFocus.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-upl__draggable--hovered-\",\n        computed(() => props.variant),\n        computed(() => props.variant && dragDropFocus.value),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label :class=\"rootClasses\" data-oruga=\"upload\">\n        <template v-if=\"!dragDrop\">\n            <!--\n                @slot Default content\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </template>\n\n        <div\n            v-else\n            :class=\"draggableClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @mouseenter=\"updateDragDropFocus(true)\"\n            @mouseleave=\"updateDragDropFocus(false)\"\n            @dragover.prevent=\"updateDragDropFocus(true)\"\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\n            @drop.prevent=\"onFileChange\">\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </div>\n\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            type=\"file\"\n            data-oruga-input=\"file\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :disabled=\"disabled\"\n            @change=\"onFileChange\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\" />\n    </label>\n</template>\n", "import type { App, Plugin } from \"vue\";\n\nimport Upload from \"./Upload.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export upload plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Upload);\n    },\n} as Plugin;\n\n/** export upload components */\nexport { Upload as OUpload };\n", "import type { App, Plugin } from \"vue\";\nimport type { OrugaOptions } from \"./types\";\n\nimport * as plugins from \"./components/plugins\";\n\nimport { ConfigProgrammatic, OrugaConfig } from \"./utils/config\";\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\n\n// export all types\nexport * from \"./types\";\nexport * from \"./components/types\";\n\n// export all vue components\nexport * from \"./components\";\n// export all components as vue plugin\nexport * from \"./components/plugins\";\n\n// export programmatic config\nexport {\n    OrugaConfig,\n    /** @deprecated use `OrugaConfig` instead - will be removed with 0.9 */\n    OrugaConfig as ConfigPlugin, // todo: remove export later - beaking change\n    ConfigProgrammatic,\n};\n\n// export programmatic composable\nexport { useOruga } from \"./utils/programmatic\";\n\n// main oruga vue plugin\nconst plugin: Plugin = {\n    install(app: App, options: OrugaOptions = {}) {\n        // initialise config with options\n        app.use(OrugaConfig, options);\n\n        // add all components\n        for (const componentKey in plugins) {\n            registerPlugin(app, plugins[componentKey]);\n        }\n\n        // add programmatic config component\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\n    },\n};\n\n// export default oruga vue plugin\nexport { plugin as Oruga };\nexport default plugin;\n"],
  "mappings": "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",
  "names": ["mod", "index", "plugin", "oruga", "bind", "index", "props", "getIcons", "statusVariantIcon", "element", "_useModel", "index", "item", "target", "_useModel", "SpecialOption", "_useModel", "index", "Autocomplete", "index", "Button", "index", "breakpoint", "settings", "Carousel", "CarouselItem", "index", "Checkbox", "index", "Collapse", "_useModel", "index", "date", "ref", "_useModel", "visibleDayNames", "index", "weeksInThisMonth", "multipleSelectedDates", "index", "Datepicker", "date", "_useModel", "hours", "minutes", "seconds", "meridiens", "AM", "PM", "HOUR_FORMAT_24", "_useModel", "date", "index", "Datetimepicker", "index", "Dropdown", "DropdownItem", "index", "Field", "index", "Icon", "index", "Input", "index", "Loading", "index", "LoadingProgrammatic", "_useModel", "index", "Menu", "MenuItem", "instances", "Modal", "index", "ModalProgrammatic", "instances", "NotificationNotice", "index", "Notification", "NotificationProgrammatic", "firstItem", "index", "Pagination", "index", "Radio", "index", "Select", "index", "Skeleton", "instances", "Sidebar", "index", "SidebarProgrammatic", "index", "Slider", "SliderTick", "_useModel", "prevItem", "nextItem", "index", "Steps", "StepItem", "index", "Switch", "index", "isAsc", "isAllChecked", "Table", "TableColumn", "_useModel", "index", "Tabs", "TabItem", "_useModel", "index", "Taginput", "index", "Timepicker", "index", "Tooltip", "_useModel", "index", "Upload"]
}
